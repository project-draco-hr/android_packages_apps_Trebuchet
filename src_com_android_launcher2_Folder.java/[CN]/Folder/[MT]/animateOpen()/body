{
  if (mState != STATE_SMALL) {
    positionAndSizeAsIcon();
  }
  if (!(getParent() instanceof CellLayoutChildren))   return;
  CellLayout.LayoutParams lp=(CellLayout.LayoutParams)getLayoutParams();
  CellLayoutChildren clc=(CellLayoutChildren)getParent();
  CellLayout cellLayout=(CellLayout)clc.getParent();
  Rect r=cellLayout.getContentRect(null);
  PropertyValuesHolder width=PropertyValuesHolder.ofInt("width",r.width());
  PropertyValuesHolder height=PropertyValuesHolder.ofInt("height",r.height());
  PropertyValuesHolder x=PropertyValuesHolder.ofInt("x",0);
  PropertyValuesHolder y=PropertyValuesHolder.ofInt("y",0);
  ObjectAnimator oa=ObjectAnimator.ofPropertyValuesHolder(lp,width,height,x,y);
  oa.addUpdateListener(new AnimatorUpdateListener(){
    public void onAnimationUpdate(    ValueAnimator animation){
      requestLayout();
    }
  }
);
  PropertyValuesHolder alpha=PropertyValuesHolder.ofFloat("alpha",1.0f);
  ObjectAnimator oaContentAlpha=ObjectAnimator.ofPropertyValuesHolder(mContent,alpha);
  AnimatorSet set=new AnimatorSet();
  set.playTogether(oa,oaContentAlpha);
  set.setDuration(mExpandDuration);
  set.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationStart(    Animator animation){
      mState=STATE_ANIMATING;
    }
    @Override public void onAnimationEnd(    Animator animation){
      mState=STATE_SMALL;
    }
  }
);
  set.start();
}
