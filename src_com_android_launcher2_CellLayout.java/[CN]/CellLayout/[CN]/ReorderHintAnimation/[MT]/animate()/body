{
  if (mShakeAnimators.containsKey(child)) {
    ReorderHintAnimation oldAnimation=mShakeAnimators.get(child);
    oldAnimation.cancel();
    mShakeAnimators.remove(child);
  }
  if (finalDeltaX == 0 && finalDeltaY == 0) {
    return;
  }
  va=ValueAnimator.ofFloat(0f,1f);
  va.setRepeatMode(ValueAnimator.REVERSE);
  va.setRepeatCount(ValueAnimator.INFINITE);
  va.setDuration(DURATION);
  va.setStartDelay((int)(Math.random() * 60));
  va.addUpdateListener(new AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      float r=((Float)animation.getAnimatedValue()).floatValue();
      float x=r * finalDeltaX + (1 - r) * initDeltaX;
      float y=r * finalDeltaY + (1 - r) * initDeltaY;
      child.setTranslationX(x);
      child.setTranslationY(y);
      float s=r * finalScale + (1 - r) * initScale;
      child.setScaleX(s);
      child.setScaleY(s);
    }
  }
);
  va.addListener(new AnimatorListenerAdapter(){
    public void onAnimationRepeat(    Animator animation){
      initDeltaX=0;
      initDeltaY=0;
      initScale=1.0f;
    }
  }
);
  mShakeAnimators.put(child,this);
  va.start();
}
