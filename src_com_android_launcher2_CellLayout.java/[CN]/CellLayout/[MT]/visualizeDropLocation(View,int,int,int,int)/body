{
  final int[] nearest=findNearestVacantArea(originX,originY,spanX,spanY,view,mDragCell);
  mDragCenter.set(originX + (view.getWidth() / 2),originY + (view.getHeight() / 2));
  if (nearest != null) {
    final int[] topLeft=mTmpPoint;
    cellToPoint(nearest[0],nearest[1],topLeft);
    final int left=topLeft[0];
    final int top=topLeft[1];
    final Rect dragRect=mDragRects[mDragRectCurrent];
    if (dragRect.isEmpty() || left != dragRect.left || top != dragRect.top) {
      final int[] bottomRight=mTmpPoint;
      cellToPoint(nearest[0] + spanX - 1,nearest[1] + spanY - 1,bottomRight);
      bottomRight[0]+=mCellWidth;
      bottomRight[1]+=mCellHeight;
      final int oldIndex=mDragRectCurrent;
      mDragRectCurrent=(oldIndex + 1) % mDragRects.length;
      mDragRects[mDragRectCurrent].set(left,top,bottomRight[0],bottomRight[1]);
      mDragRectAnims[oldIndex].animateOut();
      mDragRectAnims[mDragRectCurrent].animateIn();
    }
  }
  if (mCrosshairsDrawable != null) {
    invalidate();
  }
}
