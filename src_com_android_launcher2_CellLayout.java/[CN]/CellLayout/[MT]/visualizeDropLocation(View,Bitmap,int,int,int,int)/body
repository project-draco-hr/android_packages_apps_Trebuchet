{
  final int[] nearest=findNearestVacantArea(originX,originY,spanX,spanY,v,mDragCell);
  mDragCenter.set(originX + (v.getWidth() / 2),originY + (v.getHeight() / 2));
  if (nearest != null) {
    final int[] topLeft=mTmpPoint;
    cellToPoint(nearest[0],nearest[1],topLeft);
    int left=topLeft[0];
    int top=topLeft[1];
    if (v.getParent() instanceof CellLayout) {
      LayoutParams lp=(LayoutParams)v.getLayoutParams();
      left+=lp.leftMargin;
      top+=lp.topMargin;
    }
    left+=(v.getWidth() - dragOutline.getWidth()) / 2;
    top+=(v.getHeight() - dragOutline.getHeight()) / 2;
    final int oldIndex=mDragOutlineCurrent;
    final Point lastPoint=mDragOutlines[oldIndex];
    if (lastPoint.x != left || lastPoint.y != top) {
      mDragOutlineCurrent=(oldIndex + 1) % mDragOutlines.length;
      mDragOutlines[mDragOutlineCurrent].set(left,top);
      mDragOutlineAnims[oldIndex].animateOut();
      mDragOutlineAnims[mDragOutlineCurrent].setTag(dragOutline);
      mDragOutlineAnims[mDragOutlineCurrent].animateIn();
    }
  }
  if (mCrosshairsDrawable != null) {
    invalidate();
  }
}
