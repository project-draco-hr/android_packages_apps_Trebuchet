{
  final CellInfo cellInfo=mCellInfo;
  final Rect frame=mRect;
  final int x=touchX + mScrollX;
  final int y=touchY + mScrollY;
  final int count=getChildCount();
  boolean found=false;
  for (int i=count - 1; i >= 0; i--) {
    final View child=getChildAt(i);
    if ((child.getVisibility()) == VISIBLE || child.getAnimation() != null) {
      child.getHitRect(frame);
      if (frame.contains(x,y)) {
        final LayoutParams lp=(LayoutParams)child.getLayoutParams();
        cellInfo.cell=child;
        cellInfo.cellX=lp.cellX;
        cellInfo.cellY=lp.cellY;
        cellInfo.spanX=lp.cellHSpan;
        cellInfo.spanY=lp.cellVSpan;
        cellInfo.valid=true;
        found=true;
        mDirtyTag=false;
        break;
      }
    }
  }
  mLastDownOnOccupiedCell=found;
  if (!found) {
    final int cellXY[]=mTmpCellXY;
    pointToCellExact(x,y,cellXY);
    final boolean portrait=mPortrait;
    final int xCount=mCountX;
    final int yCount=mCountY;
    final boolean[][] occupied=mOccupied;
    findOccupiedCells(xCount,yCount,occupied,null,true);
    cellInfo.cell=null;
    cellInfo.cellX=cellXY[0];
    cellInfo.cellY=cellXY[1];
    cellInfo.spanX=1;
    cellInfo.spanY=1;
    cellInfo.valid=cellXY[0] >= 0 && cellXY[1] >= 0 && cellXY[0] < xCount && cellXY[1] < yCount && !occupied[cellXY[0]][cellXY[1]];
    mDirtyTag=true;
  }
  setTag(cellInfo);
}
