{
  if (mApps.hasFilter()) {
    return;
  }
  List<AlphabeticalAppsList.AdapterItem> items=mApps.getAdapterItems();
  int childCount=parent.getChildCount();
  int lastSectionTop=0;
  int lastSectionHeight=0;
  for (int i=0; i < childCount; i++) {
    View child=parent.getChildAt(i);
    ViewHolder holder=(ViewHolder)parent.getChildViewHolder(child);
    if (shouldDrawItemSection(holder,child,i,items)) {
      int viewTopOffset=(2 * child.getPaddingTop());
      int pos=holder.getPosition();
      AlphabeticalAppsList.AdapterItem item=items.get(pos);
      AlphabeticalAppsList.SectionInfo sectionInfo=item.sectionInfo;
      String lastSectionName=item.sectionName;
      for (int j=item.sectionAppIndex; j < sectionInfo.numAppsInSection; j++, pos++) {
        AlphabeticalAppsList.AdapterItem nextItem=items.get(pos);
        if (nextItem.sectionInfo != sectionInfo) {
          break;
        }
        if (j > item.sectionAppIndex && nextItem.sectionName.equals(lastSectionName)) {
          continue;
        }
        getSectionLetters(nextItem.sectionName,mTmpSections,mTmpSectionBounds);
        String sectionBegin=mTmpSections[0];
        String sectionEnd=mTmpSections[1];
        PointF sectionBeginBounds=mTmpSectionBounds[0];
        PointF sectionEndBounds=mTmpSectionBounds[1];
        int sectionBaseline=(int)(viewTopOffset + sectionBeginBounds.y);
        int x=mIsRtl ? parent.getWidth() - mPaddingStart - mStartMargin : mPaddingStart;
        int y=child.getTop() + sectionBaseline;
        int appIndexInSection=items.get(pos).sectionAppIndex;
        int nextRowPos=Math.min(items.size() - 1,pos + mAppsPerRow - (appIndexInSection % mAppsPerRow));
        boolean fixedToRow=!items.get(nextRowPos).sectionName.equals(nextItem.sectionName);
        if (!fixedToRow) {
          y=Math.max(sectionBaseline,y);
        }
        if (lastSectionHeight > 0 && y <= (lastSectionTop + lastSectionHeight)) {
          y+=lastSectionTop - y + lastSectionHeight;
        }
        if (FADE_OUT_SECTIONS) {
          int alpha=255;
          if (fixedToRow) {
            alpha=Math.min(255,(int)(255 * (Math.max(0,y) / (float)sectionBaseline)));
          }
          mSectionTextPaint.setAlpha(alpha);
        }
        if (sectionEnd != null) {
          c.drawText(sectionBegin + "/" + sectionEnd,x + (mStartMargin - sectionBeginBounds.x - sectionEndBounds.x) / 2,y,mSectionTextPaint);
        }
 else {
          c.drawText(sectionBegin,(int)(x + (mStartMargin / 2f) - (sectionBeginBounds.x / 2f)),y,mSectionTextPaint);
        }
        lastSectionTop=y;
        lastSectionHeight=(int)(sectionBeginBounds.y + mSectionHeaderOffset);
        lastSectionName=nextItem.sectionName;
      }
      i+=(sectionInfo.numAppsInSection - item.sectionAppIndex);
    }
  }
}
