{
  final Resources res=getResources();
  setup();
  mCustomizePagedView=(CustomizePagedView)findViewById(R.id.customization_drawer_tab_contents);
  TabContentFactory contentFactory=new TabContentFactory(){
    public View createTabContent(    String tag){
      return mCustomizePagedView;
    }
  }
;
  TextView tabView;
  TabWidget tabWidget=(TabWidget)findViewById(com.android.internal.R.id.tabs);
  tabView=(TextView)mInflater.inflate(R.layout.customize_tab_widget_indicator,tabWidget,false);
  tabView.setText(mContext.getString(R.string.widgets_tab_label));
  addTab(newTabSpec(WIDGETS_TAG).setIndicator(tabView).setContent(contentFactory));
  tabView=(TextView)mInflater.inflate(R.layout.customize_tab_widget_indicator,tabWidget,false);
  tabView.setText(mContext.getString(R.string.applications_tab_label));
  addTab(newTabSpec(APPLICATIONS_TAG).setIndicator(tabView).setContent(contentFactory));
  tabView=(TextView)mInflater.inflate(R.layout.customize_tab_widget_indicator,tabWidget,false);
  tabView.setText(mContext.getString(R.string.wallpapers_tab_label));
  addTab(newTabSpec(WALLPAPERS_TAG).setIndicator(tabView).setContent(contentFactory));
  tabView=(TextView)mInflater.inflate(R.layout.customize_tab_widget_indicator,tabWidget,false);
  tabView.setText(mContext.getString(R.string.shortcuts_tab_label));
  addTab(newTabSpec(SHORTCUTS_TAG).setIndicator(tabView).setContent(contentFactory));
  mVerticalFillPercentage=res.getInteger(R.integer.customization_drawer_verticalFillPercentage) / 100f;
  setOnTabChangedListener(new OnTabChangeListener(){
    public void onTabChanged(    String tabId){
      final CustomizePagedView.CustomizationType newType=getCustomizeFilterForTabTag(tabId);
      if (newType != mCustomizePagedView.getCustomizationFilter()) {
        final Resources res=getResources();
        final int duration=res.getInteger(R.integer.config_tabTransitionTime);
        final float alpha=mCustomizePagedView.getAlpha();
        ValueAnimator alphaAnim=ObjectAnimator.ofFloat(mCustomizePagedView,"alpha",alpha,0.0f);
        alphaAnim.setDuration(duration);
        alphaAnim.addListener(new AnimatorListenerAdapter(){
          @Override public void onAnimationEnd(          Animator animation){
            mCustomizePagedView.setCustomizationFilter(newType);
            final float alpha=mCustomizePagedView.getAlpha();
            ValueAnimator alphaAnim=ObjectAnimator.ofFloat(mCustomizePagedView,"alpha",alpha,1.0f);
            alphaAnim.setDuration(duration);
            alphaAnim.start();
          }
        }
);
        alphaAnim.start();
      }
    }
  }
);
}
