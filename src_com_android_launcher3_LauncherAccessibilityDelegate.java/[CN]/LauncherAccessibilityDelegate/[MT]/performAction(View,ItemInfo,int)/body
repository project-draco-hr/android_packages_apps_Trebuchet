{
  if (action == REMOVE) {
    if (DeleteDropTarget.removeWorkspaceOrFolderItem(mLauncher,item,host)) {
      announceConfirmation(R.string.item_removed);
      return true;
    }
    return false;
  }
 else   if (action == INFO) {
    InfoDropTarget.startDetailsActivityForInfo(item,mLauncher);
    return true;
  }
 else   if (action == UNINSTALL) {
    return UninstallDropTarget.startUninstallActivity(mLauncher,item);
  }
 else   if (action == MOVE) {
    beginAccessibleDrag(host,item);
  }
 else   if (action == ADD_TO_WORKSPACE) {
    final int preferredPage=mLauncher.getWorkspace().getCurrentPage();
    final ScreenPosProvider screenProvider=new ScreenPosProvider(){
      @Override public int getScreenIndex(      ArrayList<Long> screenIDs){
        return preferredPage;
      }
    }
;
    if (item instanceof AppInfo) {
      final ArrayList<ItemInfo> addShortcuts=new ArrayList<ItemInfo>();
      addShortcuts.add(((AppInfo)item).makeShortcut());
      mLauncher.showWorkspace(true,new Runnable(){
        @Override public void run(){
          mLauncher.getModel().addAndBindAddedWorkspaceItems(mLauncher,addShortcuts,screenProvider,0,true);
          announceConfirmation(R.string.item_added_to_workspace);
        }
      }
);
      return true;
    }
 else     if (item instanceof PendingAddItemInfo) {
      mLauncher.getModel().addAndBindPendingItem(mLauncher,(PendingAddItemInfo)item,screenProvider,0);
      announceConfirmation(R.string.item_added_to_workspace);
      return true;
    }
  }
  return false;
}
