{
  final ContentResolver cr=getContentResolver();
  final IconCache iconCache=new IconCache(this);
  final int dpi=getResources().getDisplayMetrics().densityDpi;
  Set<String> savedIds=getSavedIdsByType(Key.ICON,in);
  if (DEBUG)   Log.d(TAG,"icon savedIds.size()=" + savedIds.size());
  int startRows=out.rows;
  if (DEBUG)   Log.d(TAG,"starting here: " + startRows);
  String where=Favorites.ITEM_TYPE + "=" + Favorites.ITEM_TYPE_APPLICATION;
  Cursor cursor=cr.query(Favorites.CONTENT_URI,FAVORITE_PROJECTION,where,null,null);
  Set<String> currentIds=new HashSet<String>(cursor.getCount());
  try {
    cursor.moveToPosition(-1);
    while (cursor.moveToNext()) {
      final long id=cursor.getLong(ID_INDEX);
      final String intentDescription=cursor.getString(INTENT_INDEX);
      try {
        Intent intent=Intent.parseUri(intentDescription,0);
        ComponentName cn=intent.getComponent();
        Key key=null;
        String backupKey=null;
        if (cn != null) {
          key=getKey(Key.ICON,cn.flattenToShortString());
          backupKey=keyToBackupKey(key);
          currentIds.add(backupKey);
        }
 else {
          Log.w(TAG,"empty intent on application favorite: " + id);
        }
        if (savedIds.contains(backupKey)) {
          if (DEBUG)           Log.d(TAG,"already saved icon " + backupKey);
          keys.add(key);
        }
 else         if (backupKey != null) {
          if (DEBUG)           Log.d(TAG,"I can count this high: " + out.rows);
          if ((out.rows - startRows) < MAX_ICONS_PER_PASS) {
            if (DEBUG)             Log.d(TAG,"saving icon " + backupKey);
            Bitmap icon=iconCache.getIcon(intent);
            keys.add(key);
            if (icon != null && !iconCache.isDefaultIcon(icon)) {
              byte[] blob=packIcon(dpi,icon);
              writeRowToBackup(key,blob,out,data);
            }
          }
 else {
            if (DEBUG)             Log.d(TAG,"scheduling another rtun for icon " + backupKey);
            dataChanged(this);
          }
        }
      }
 catch (      URISyntaxException e) {
        Log.w(TAG,"invalid URI on application favorite: " + id);
      }
catch (      IOException e) {
        Log.w(TAG,"unable to save application icon for favorite: " + id);
      }
    }
  }
  finally {
    cursor.close();
  }
  if (DEBUG)   Log.d(TAG,"icon currentIds.size()=" + currentIds.size());
  savedIds.removeAll(currentIds);
  out.rows+=removeDeletedKeysFromBackup(savedIds,data);
}
