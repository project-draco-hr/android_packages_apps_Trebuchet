{
  String packageName=info.provider.getPackageName();
  Drawable drawable=null;
  Bitmap preview=null;
  if (info.previewImage != 0) {
    drawable=mPackageManager.getDrawable(packageName,info.previewImage,null);
    if (drawable == null) {
      Log.w(LOG_TAG,"Can't load icon drawable 0x" + Integer.toHexString(info.icon) + " for provider: "+ info.provider);
    }
 else {
      int targetWidth=mWidgetSpacingLayout.estimateCellWidth(cellHSpan);
      int targetHeight=mWidgetSpacingLayout.estimateCellHeight(cellVSpan);
      int targetCellWidth;
      int targetCellHeight;
      if (targetWidth >= targetHeight) {
        targetCellWidth=Math.min(targetWidth,cellWidth);
        targetCellHeight=(int)(cellHeight * ((float)targetCellWidth / cellWidth));
      }
 else {
        targetCellHeight=Math.min(targetHeight,cellHeight);
        targetCellWidth=(int)(cellWidth * ((float)targetCellHeight / cellHeight));
      }
      int bitmapWidth=Math.min(targetCellWidth,drawable.getIntrinsicWidth());
      int bitmapHeight=(int)(drawable.getIntrinsicHeight() * ((float)bitmapWidth / drawable.getIntrinsicWidth()));
      preview=Bitmap.createBitmap(bitmapWidth,bitmapHeight,Config.ARGB_8888);
      renderDrawableToBitmap(drawable,preview,0,0,bitmapWidth,bitmapHeight);
    }
  }
  if (drawable == null) {
    int targetWidth=mWidgetSpacingLayout.estimateCellWidth(cellHSpan);
    int targetHeight=mWidgetSpacingLayout.estimateCellHeight(cellVSpan);
    int bitmapWidth=targetWidth;
    int bitmapHeight=targetHeight;
    int minOffset=(int)(mAppIconSize * sWidgetPreviewIconPaddingPercentage);
    float iconScale=1f;
    if (cellHSpan == cellVSpan) {
      if (cellHSpan <= 1) {
        bitmapWidth=bitmapHeight=mAppIconSize + 2 * minOffset;
      }
 else {
        bitmapWidth=bitmapHeight=mAppIconSize + 4 * minOffset;
      }
    }
 else {
      if (targetWidth >= targetHeight) {
        bitmapWidth=Math.min(targetWidth,cellWidth);
        bitmapHeight=(int)(targetHeight * ((float)bitmapWidth / targetWidth));
        iconScale=Math.min((float)bitmapHeight / (mAppIconSize + 2 * minOffset),1f);
      }
 else {
        bitmapHeight=Math.min(targetHeight,cellHeight);
        bitmapWidth=(int)(targetWidth * ((float)bitmapHeight / targetHeight));
        iconScale=Math.min((float)bitmapWidth / (mAppIconSize + 2 * minOffset),1f);
      }
    }
    preview=Bitmap.createBitmap(bitmapWidth,bitmapHeight,Config.ARGB_8888);
    if (cellHSpan != 1 || cellVSpan != 1) {
      renderDrawableToBitmap(mDefaultWidgetBackground,preview,0,0,bitmapWidth,bitmapHeight);
    }
    try {
      Drawable icon=null;
      int hoffset=(int)(bitmapWidth / 2 - mAppIconSize * iconScale / 2);
      int yoffset=(int)(bitmapHeight / 2 - mAppIconSize * iconScale / 2);
      if (info.icon > 0)       icon=mIconCache.getFullResIcon(packageName,info.icon);
      Resources resources=mLauncher.getResources();
      if (icon == null)       icon=resources.getDrawable(R.drawable.ic_launcher_application);
      renderDrawableToBitmap(icon,preview,hoffset,yoffset,(int)(mAppIconSize * iconScale),(int)(mAppIconSize * iconScale));
    }
 catch (    Resources.NotFoundException e) {
    }
  }
  return preview;
}
