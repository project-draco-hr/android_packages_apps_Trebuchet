{
  Log.d(TAG,"6549598 onDataReady");
  boolean isLandscape=getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE;
  int maxCellCountX=Integer.MAX_VALUE;
  int maxCellCountY=Integer.MAX_VALUE;
  if (LauncherApplication.isScreenLarge()) {
    maxCellCountX=(isLandscape ? LauncherModel.getCellCountX() : LauncherModel.getCellCountY());
    maxCellCountY=(isLandscape ? LauncherModel.getCellCountY() : LauncherModel.getCellCountX());
  }
  if (mMaxAppCellCountX > -1) {
    maxCellCountX=Math.min(maxCellCountX,mMaxAppCellCountX);
  }
  if (mMaxAppCellCountY > -1) {
    maxCellCountY=Math.min(maxCellCountY,mMaxAppCellCountY);
  }
  mWidgetSpacingLayout.setGap(mPageLayoutWidthGap,mPageLayoutHeightGap);
  mWidgetSpacingLayout.setPadding(mPageLayoutPaddingLeft,mPageLayoutPaddingTop,mPageLayoutPaddingRight,mPageLayoutPaddingBottom);
  mWidgetSpacingLayout.calculateCellCount(width,height,maxCellCountX,maxCellCountY);
  mCellCountX=mWidgetSpacingLayout.getCellCountX();
  mCellCountY=mWidgetSpacingLayout.getCellCountY();
  updatePageCounts();
  int widthSpec=MeasureSpec.makeMeasureSpec(getMeasuredWidth(),MeasureSpec.AT_MOST);
  int heightSpec=MeasureSpec.makeMeasureSpec(getMeasuredHeight(),MeasureSpec.AT_MOST);
  mWidgetSpacingLayout.measure(widthSpec,heightSpec);
  mContentWidth=mWidgetSpacingLayout.getContentWidth();
  AppsCustomizeTabHost host=(AppsCustomizeTabHost)getTabHost();
  final boolean hostIsTransitioning=host.isTransitioning();
  int page=getPageForComponent(mSaveInstanceStateItemIndex);
  invalidatePageData(Math.max(0,page),hostIsTransitioning);
  if (!hostIsTransitioning) {
    post(new Runnable(){
      @Override public void run(){
        showAllAppsCling();
      }
    }
);
  }
}
