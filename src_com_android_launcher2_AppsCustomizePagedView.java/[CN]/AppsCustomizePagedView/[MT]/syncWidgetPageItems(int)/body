{
  int[] countX={mWidgetCountX,mShortcutCountX};
  int[] countY={mWidgetCountY,mShortcutCountY};
  int[] widthGap={mWidgetWidthGap,mWidgetWidthGap};
  int[] heightGap={mWidgetHeightGap,mWidgetHeightGap};
  int[] numItemsPerPage={mWidgetCountX * mWidgetCountY,mShortcutCountX * mShortcutCountY};
  Object[] collection={mWidgets,mShortcuts};
  int contentWidth=mWidgetSpacingLayout.getContentWidth();
  int contentHeight=mWidgetSpacingLayout.getContentHeight();
  int numWidgetPages=(int)Math.ceil(mWidgets.size() / (float)numItemsPerPage[0]);
  int[] offsets={page * numItemsPerPage[0],(page - numWidgetPages) * numItemsPerPage[1]};
  int index=(page < numWidgetPages ? 0 : 1);
  ArrayList<Object> list=(ArrayList<Object>)collection[index];
  ArrayList<Object> items=new ArrayList<Object>();
  int cellWidth=((contentWidth - mPageLayoutPaddingLeft - mPageLayoutPaddingRight- ((countX[index] - 1) * widthGap[index])) / countX[index]);
  int cellHeight=((contentHeight - mPageLayoutPaddingTop - mPageLayoutPaddingBottom- ((countY[index] - 1) * heightGap[index])) / countY[index]);
  int offset=offsets[index];
  for (int i=offset; i < Math.min(offset + numItemsPerPage[index],list.size()); ++i) {
    items.add(list.get(i));
  }
  prepareLoadWidgetPreviewsTask(page,items,cellWidth,cellHeight,countX[index]);
}
