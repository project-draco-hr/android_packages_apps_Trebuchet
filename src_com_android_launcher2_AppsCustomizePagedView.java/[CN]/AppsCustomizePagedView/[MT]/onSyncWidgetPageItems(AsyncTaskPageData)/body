{
  int page=data.page;
  PagedViewGridLayout layout=(PagedViewGridLayout)getChildAt(page);
  layout.removeAllViews();
  ArrayList<Object> items=data.items;
  int count=items.size();
  int cellWidth=data.cellWidth;
  int cellHeight=data.cellHeight;
  for (int i=0; i < count; ++i) {
    Object rawInfo=items.get(i);
    PendingAddItemInfo createItemInfo=null;
    PagedViewWidget widget=(PagedViewWidget)mLayoutInflater.inflate(R.layout.apps_customize_widget,layout,false);
    if (rawInfo instanceof AppWidgetProviderInfo) {
      AppWidgetProviderInfo info=(AppWidgetProviderInfo)rawInfo;
      createItemInfo=new PendingAddWidgetInfo(info,null,null);
      int[] cellSpans=CellLayout.rectToCell(getResources(),info.minWidth,info.minHeight,null);
      FastBitmapDrawable preview=new FastBitmapDrawable(data.generatedImages.get(i));
      widget.applyFromAppWidgetProviderInfo(info,preview,-1,cellSpans,mHolographicOutlineHelper);
      widget.setTag(createItemInfo);
    }
 else     if (rawInfo instanceof ResolveInfo) {
      ResolveInfo info=(ResolveInfo)rawInfo;
      createItemInfo=new PendingAddItemInfo();
      createItemInfo.itemType=LauncherSettings.Favorites.ITEM_TYPE_SHORTCUT;
      createItemInfo.componentName=new ComponentName(info.activityInfo.packageName,info.activityInfo.name);
      FastBitmapDrawable preview=new FastBitmapDrawable(data.generatedImages.get(i));
      widget.applyFromResolveInfo(mPackageManager,info,preview,mHolographicOutlineHelper);
      widget.setTag(createItemInfo);
    }
    widget.setOnClickListener(this);
    widget.setOnLongClickListener(this);
    widget.setOnTouchListener(this);
    int ix=i % mWidgetCountX;
    int iy=i / mWidgetCountX;
    GridLayout.LayoutParams lp=new GridLayout.LayoutParams(new GridLayout.Group(iy,1,GridLayout.LEFT),new GridLayout.Group(ix,1,GridLayout.TOP));
    lp.width=cellWidth;
    lp.height=cellHeight;
    if (ix > 0)     lp.leftMargin=mWidgetWidthGap;
    if (iy > 0)     lp.topMargin=mWidgetHeightGap;
    layout.addView(widget,lp);
  }
  invalidate();
  forceUpdateAdjacentPagesAlpha();
  prepareGenerateHoloOutlinesTask(data.page,data.items,data.generatedImages);
}
