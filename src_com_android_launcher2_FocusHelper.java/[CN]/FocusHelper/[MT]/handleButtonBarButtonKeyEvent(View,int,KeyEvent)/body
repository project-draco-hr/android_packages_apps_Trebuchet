{
  if (!LauncherApplication.isScreenXLarge())   return false;
  final ViewGroup parent=(ViewGroup)v.getParent();
  final ViewGroup launcher=(ViewGroup)parent.getParent();
  final Workspace workspace=(Workspace)launcher.findViewById(R.id.workspace);
  final int buttonIndex=parent.indexOfChild(v);
  final int buttonCount=parent.getChildCount();
  final int pageIndex=workspace.getCurrentPage();
  final int pageCount=workspace.getChildCount();
  final int firstButtonIndex=parent.indexOfChild(parent.findViewById(R.id.search_button));
  final int lastButtonIndex=parent.indexOfChild(parent.findViewById(R.id.configure_button));
  final int action=e.getAction();
  final boolean handleKeyEvent=(action != KeyEvent.ACTION_UP);
  boolean wasHandled=false;
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_LEFT:
    if (handleKeyEvent) {
      if (buttonIndex > firstButtonIndex) {
        int newButtonIndex=buttonIndex - 1;
        while (newButtonIndex >= firstButtonIndex) {
          View prev=parent.getChildAt(newButtonIndex);
          if (isVisible(prev) && prev.isFocusable()) {
            prev.requestFocus();
            break;
          }
          --newButtonIndex;
        }
      }
 else {
        if (pageIndex > 0) {
          workspace.snapToPage(pageIndex - 1);
        }
      }
    }
  wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_RIGHT:
if (handleKeyEvent) {
if (buttonIndex < lastButtonIndex) {
  int newButtonIndex=buttonIndex + 1;
  while (newButtonIndex <= lastButtonIndex) {
    View next=parent.getChildAt(newButtonIndex);
    if (isVisible(next) && next.isFocusable()) {
      next.requestFocus();
      break;
    }
    ++newButtonIndex;
  }
}
 else {
  if (pageIndex < (pageCount - 1)) {
    workspace.snapToPage(pageIndex + 1);
  }
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_UP:
wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_DOWN:
if (handleKeyEvent) {
final CellLayout layout=(CellLayout)workspace.getChildAt(pageIndex);
final CellLayoutChildren children=layout.getChildrenLayout();
final View newIcon=getBubbleTextViewInDirection(layout,children,-1,1);
if (newIcon != null) {
newIcon.requestFocus();
}
 else {
workspace.requestFocus();
}
}
wasHandled=true;
break;
default :
break;
}
return wasHandled;
}
