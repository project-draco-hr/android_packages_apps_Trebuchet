{
  final ViewGroup launcher=(ViewGroup)v.getParent();
  final Workspace workspace=(Workspace)launcher.findViewById(R.id.workspace);
  final ViewGroup hotseat=(ViewGroup)launcher.findViewById(R.id.all_apps_button_cluster);
  final View previousIndicator=launcher.findViewById(R.id.previous_screen);
  final View nextIndicator=launcher.findViewById(R.id.next_screen);
  final int pageIndex=workspace.getCurrentPage();
  final int pageCount=workspace.getChildCount();
  final int action=e.getAction();
  final boolean handleKeyEvent=(action != KeyEvent.ACTION_UP);
  boolean wasHandled=false;
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_LEFT:
    if (handleKeyEvent) {
      if (v == previousIndicator) {
        if (pageIndex > 0) {
          workspace.snapToPage(pageIndex - 1);
        }
      }
 else       if (v == nextIndicator) {
        hotseat.getChildAt(hotseat.getChildCount() - 1).requestFocus();
      }
    }
  wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_RIGHT:
if (handleKeyEvent) {
if (v == previousIndicator) {
  hotseat.getChildAt(0).requestFocus();
}
 else if (v == nextIndicator) {
  if (pageIndex < (pageCount - 1)) {
    workspace.snapToPage(pageIndex + 1);
  }
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_UP:
if (handleKeyEvent) {
final CellLayout layout=(CellLayout)workspace.getChildAt(pageIndex);
final CellLayoutChildren children=layout.getChildrenLayout();
final View newIcon=getBubbleTextViewInDirection(layout,children,-1,1);
if (newIcon != null) {
newIcon.requestFocus();
}
 else {
workspace.requestFocus();
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_DOWN:
wasHandled=true;
break;
default :
break;
}
return wasHandled;
}
