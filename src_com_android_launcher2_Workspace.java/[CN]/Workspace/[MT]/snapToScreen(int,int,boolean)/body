{
  whichScreen=Math.max(0,Math.min(whichScreen,getChildCount() - 1));
  enableChildrenCache(mCurrentScreen,whichScreen);
  mNextScreen=whichScreen;
  if (mPreviousIndicator != null) {
    mPreviousIndicator.setLevel(mNextScreen);
    mNextIndicator.setLevel(mNextScreen);
  }
  View focusedChild=getFocusedChild();
  if (focusedChild != null && whichScreen != mCurrentScreen && focusedChild == getChildAt(mCurrentScreen)) {
    focusedChild.clearFocus();
  }
  final int screenDelta=Math.max(1,Math.abs(whichScreen - mCurrentScreen));
  final int newX=whichScreen * getWidth();
  final int delta=newX - mScrollX;
  int duration=(screenDelta + 1) * 100;
  if (!mScroller.isFinished()) {
    mScroller.abortAnimation();
  }
  if (settle) {
    mScrollInterpolator.setDistance(screenDelta);
  }
 else {
    mScrollInterpolator.disableSettle();
  }
  velocity=Math.abs(velocity);
  if (velocity > 0) {
    duration+=(duration / (velocity / BASELINE_FLING_VELOCITY)) * FLING_VELOCITY_INFLUENCE;
  }
 else {
    duration+=100;
  }
  awakenScrollBars(duration);
  mScroller.startScroll(mScrollX,0,delta,0,duration);
  invalidate();
}
