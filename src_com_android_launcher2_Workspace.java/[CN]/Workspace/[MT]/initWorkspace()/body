{
  Context context=getContext();
  mCurrentPage=mDefaultPage;
  Launcher.setScreen(mCurrentPage);
  LauncherApplication app=(LauncherApplication)context.getApplicationContext();
  mIconCache=app.getIconCache();
  mExternalDragOutlinePaint.setAntiAlias(true);
  setWillNotDraw(false);
  try {
    final Resources res=getResources();
    mBackground=res.getDrawable(R.drawable.apps_customize_bg);
  }
 catch (  Resources.NotFoundException e) {
  }
  mUnshrinkAnimationListener=new AnimatorListenerAdapter(){
    @Override public void onAnimationStart(    Animator animation){
      mIsInUnshrinkAnimation=true;
    }
    @Override public void onAnimationEnd(    Animator animation){
      mIsInUnshrinkAnimation=false;
      mSyncWallpaperOffsetWithScroll=true;
      if (mShrinkState == ShrinkState.SPRING_LOADED) {
        View layout=null;
        if (mLastDragView != null) {
          layout=findMatchingPageForDragOver(mLastDragView,mLastDragOriginX,mLastDragOriginY,mLastDragXOffset,mLastDragYOffset);
        }
      }
      mWallpaperOffset.setOverrideHorizontalCatchupConstant(false);
      mAnimator=null;
      enableChildrenLayers(false);
    }
  }
;
  mShrinkAnimationListener=new AnimatorListenerAdapter(){
    @Override public void onAnimationStart(    Animator animation){
      enableChildrenLayers(true);
    }
    @Override public void onAnimationEnd(    Animator animation){
      mWallpaperOffset.setOverrideHorizontalCatchupConstant(false);
      mAnimator=null;
    }
  }
;
  mSnapVelocity=600;
  mWallpaperOffset=new WallpaperOffsetInterpolator();
}
