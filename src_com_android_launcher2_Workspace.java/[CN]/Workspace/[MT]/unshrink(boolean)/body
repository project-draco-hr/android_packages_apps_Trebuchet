{
  if (mIsSmall) {
    mIsSmall=false;
    if (mAnimator != null) {
      mAnimator.cancel();
    }
    mAnimator=new AnimatorSet();
    final int screenCount=getChildCount();
    final int duration=getResources().getInteger(R.integer.config_workspaceUnshrinkTime);
    for (int i=0; i < screenCount; i++) {
      final CellLayout cl=(CellLayout)getChildAt(i);
      float finalAlphaValue=(i == mCurrentPage) ? 1.0f : 0.0f;
      float rotation=0.0f;
      if (i < mCurrentPage) {
        rotation=WORKSPACE_ROTATION;
      }
 else       if (i > mCurrentPage) {
        rotation=-WORKSPACE_ROTATION;
      }
      if (animated) {
        ObjectAnimator anim=ObjectAnimator.ofPropertyValuesHolder(cl,PropertyValuesHolder.ofFloat("backgroundAlpha",0.0f),PropertyValuesHolder.ofFloat("alpha",finalAlphaValue),PropertyValuesHolder.ofFloat("rotationY",rotation));
        anim.setDuration(duration);
        ObjectAnimator animWithInterpolator=ObjectAnimator.ofPropertyValuesHolder(cl,PropertyValuesHolder.ofFloat("translationX",0.0f),PropertyValuesHolder.ofFloat("translationY",0.0f),PropertyValuesHolder.ofFloat("scaleX",1.0f),PropertyValuesHolder.ofFloat("scaleY",1.0f));
        animWithInterpolator.setDuration(duration);
        animWithInterpolator.setInterpolator(mInverseZInterpolator);
        mAnimator.playTogether(anim,animWithInterpolator);
      }
 else {
        cl.setTranslationX(0.0f);
        cl.setTranslationY(0.0f);
        cl.setScaleX(1.0f);
        cl.setScaleY(1.0f);
        cl.setBackgroundAlpha(0.0f);
        cl.setAlpha(finalAlphaValue);
        cl.setRotationY(rotation);
      }
    }
    if (animated) {
      mAnimator.addListener(mUnshrinkAnimationListener);
      mAnimator.start();
    }
  }
}
