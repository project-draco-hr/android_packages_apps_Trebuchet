{
  if (container == LauncherSettings.Favorites.CONTAINER_DESKTOP) {
    if (screen < 0 || screen >= getChildCount()) {
      Log.e(TAG,"The screen must be >= 0 and < " + getChildCount() + " (was "+ screen+ "); skipping child");
      return;
    }
  }
  final CellLayout layout;
  if (container == LauncherSettings.Favorites.CONTAINER_HOTSEAT) {
    layout=mLauncher.getHotseat().getLayout();
    child.setOnKeyListener(null);
    if (child instanceof FolderIcon) {
      ((FolderIcon)child).setTextVisible(false);
    }
    if (screen < 0) {
      screen=mLauncher.getHotseat().getOrderInHotseat(x,y);
    }
 else {
      x=mLauncher.getHotseat().getCellXFromOrder(screen);
      y=mLauncher.getHotseat().getCellYFromOrder(screen);
    }
  }
 else {
    if (child instanceof FolderIcon) {
      ((FolderIcon)child).setTextVisible(true);
    }
    layout=(CellLayout)getChildAt(screen);
    child.setOnKeyListener(new BubbleTextViewKeyEventListener());
  }
  CellLayout.LayoutParams lp=(CellLayout.LayoutParams)child.getLayoutParams();
  if (lp == null) {
    lp=new CellLayout.LayoutParams(x,y,spanX,spanY);
  }
 else {
    lp.cellX=x;
    lp.cellY=y;
    lp.cellHSpan=spanX;
    lp.cellVSpan=spanY;
  }
  if (spanX < 0 && spanY < 0) {
    lp.isLockedToGrid=false;
  }
  int childId=LauncherModel.getCellLayoutChildId(container,screen,x,y,spanX,spanY);
  boolean markCellsAsOccupied=!(child instanceof Folder);
  if (!layout.addViewToCellLayout(child,insert ? 0 : -1,childId,lp,markCellsAsOccupied)) {
    Log.w(TAG,"Failed to add to item at (" + lp.cellX + ","+ lp.cellY+ ") to CellLayout");
  }
  if (!(child instanceof Folder)) {
    child.setHapticFeedbackEnabled(false);
    child.setOnLongClickListener(mLongClickListener);
  }
  if (child instanceof DropTarget) {
    mDragController.addDropTarget((DropTarget)child);
  }
}
