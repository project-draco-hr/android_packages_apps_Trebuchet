{
  if (d.dragSource != this) {
    if (mDragTargetLayout == null) {
      return false;
    }
    if (!transitionStateShouldAllowDrop())     return false;
    mDragViewVisualCenter=getDragViewVisualCenter(d.x,d.y,d.xOffset,d.yOffset,d.dragView,mDragViewVisualCenter);
    if (mLauncher.isHotseatLayout(mDragTargetLayout)) {
      mapPointFromSelfToSibling(mLauncher.getHotseat(),mDragViewVisualCenter);
    }
 else {
      mapPointFromSelfToChild(mDragTargetLayout,mDragViewVisualCenter,null);
    }
    int spanX=1;
    int spanY=1;
    View ignoreView=null;
    if (mDragInfo != null) {
      final CellLayout.CellInfo dragCellInfo=mDragInfo;
      spanX=dragCellInfo.spanX;
      spanY=dragCellInfo.spanY;
      ignoreView=dragCellInfo.cell;
    }
 else {
      final ItemInfo dragInfo=(ItemInfo)d.dragInfo;
      spanX=dragInfo.spanX;
      spanY=dragInfo.spanY;
    }
    int minSpanX=spanX;
    int minSpanY=spanY;
    if (d.dragInfo instanceof PendingAddWidgetInfo) {
      minSpanX=((PendingAddWidgetInfo)d.dragInfo).minSpanX;
      minSpanY=((PendingAddWidgetInfo)d.dragInfo).minSpanY;
    }
    mTargetCell=findNearestArea((int)mDragViewVisualCenter[0],(int)mDragViewVisualCenter[1],minSpanX,minSpanY,mDragTargetLayout,mTargetCell);
    if (willCreateUserFolder((ItemInfo)d.dragInfo,mDragTargetLayout,mTargetCell,true)) {
      return true;
    }
    if (willAddToExistingUserFolder((ItemInfo)d.dragInfo,mDragTargetLayout,mTargetCell)) {
      return true;
    }
    if (!mDragTargetLayout.findCellForSpanIgnoring(null,minSpanX,minSpanY,ignoreView)) {
      if (mTargetCell != null && mLauncher.isHotseatLayout(mDragTargetLayout)) {
        Hotseat hotseat=mLauncher.getHotseat();
        if (Hotseat.isAllAppsButtonRank(hotseat.getOrderInHotseat(mTargetCell[0],mTargetCell[1]))) {
          return false;
        }
      }
      mLauncher.showOutOfSpaceMessage();
      return false;
    }
  }
  return true;
}
