{
  if (d.dragSource != this) {
    if (mDragTargetLayout == null) {
      return false;
    }
    if (!transitionStateShouldAllowDrop())     return false;
    mDragViewVisualCenter=getDragViewVisualCenter(d.x,d.y,d.xOffset,d.yOffset,d.dragView,mDragViewVisualCenter);
    if (mLauncher.isHotseatLayout(mDragTargetLayout)) {
      mapPointFromSelfToSibling(mLauncher.getHotseat(),mDragViewVisualCenter);
    }
 else {
      mapPointFromSelfToChild(mDragTargetLayout,mDragViewVisualCenter,null);
    }
    int spanX=1;
    int spanY=1;
    if (mDragInfo != null) {
      final CellLayout.CellInfo dragCellInfo=mDragInfo;
      spanX=dragCellInfo.spanX;
      spanY=dragCellInfo.spanY;
    }
 else {
      final ItemInfo dragInfo=(ItemInfo)d.dragInfo;
      spanX=dragInfo.spanX;
      spanY=dragInfo.spanY;
    }
    int minSpanX=spanX;
    int minSpanY=spanY;
    if (d.dragInfo instanceof PendingAddWidgetInfo) {
      minSpanX=((PendingAddWidgetInfo)d.dragInfo).minSpanX;
      minSpanY=((PendingAddWidgetInfo)d.dragInfo).minSpanY;
    }
    mTargetCell=findNearestArea((int)mDragViewVisualCenter[0],(int)mDragViewVisualCenter[1],minSpanX,minSpanY,mDragTargetLayout,mTargetCell);
    float distance=mDragTargetLayout.getDistanceFromCell(mDragViewVisualCenter[0],mDragViewVisualCenter[1],mTargetCell);
    if (willCreateUserFolder((ItemInfo)d.dragInfo,mDragTargetLayout,mTargetCell,distance,true)) {
      return true;
    }
    if (willAddToExistingUserFolder((ItemInfo)d.dragInfo,mDragTargetLayout,mTargetCell,distance)) {
      return true;
    }
    int[] resultSpan=new int[2];
    mTargetCell=mDragTargetLayout.createArea((int)mDragViewVisualCenter[0],(int)mDragViewVisualCenter[1],minSpanX,minSpanY,spanX,spanY,null,mTargetCell,resultSpan,CellLayout.MODE_ACCEPT_DROP);
    boolean foundCell=mTargetCell[0] >= 0 && mTargetCell[1] >= 0;
    if (!foundCell) {
      boolean isHotseat=mLauncher.isHotseatLayout(mDragTargetLayout);
      if (mTargetCell != null && isHotseat) {
        Hotseat hotseat=mLauncher.getHotseat();
        if (hotseat.isAllAppsButtonRank(hotseat.getOrderInHotseat(mTargetCell[0],mTargetCell[1]))) {
          return false;
        }
      }
      mLauncher.showOutOfSpaceMessage(isHotseat);
      return false;
    }
  }
  return true;
}
