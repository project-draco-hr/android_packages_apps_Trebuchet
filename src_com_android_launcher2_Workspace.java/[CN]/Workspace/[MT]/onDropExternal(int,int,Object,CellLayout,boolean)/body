{
  int screen=indexOfChild(cellLayout);
  if (dragInfo instanceof PendingAddItemInfo) {
    PendingAddItemInfo info=(PendingAddItemInfo)dragInfo;
    int[] touchXY=new int[2];
    touchXY[0]=x;
    touchXY[1]=y;
switch (info.itemType) {
case LauncherSettings.Favorites.ITEM_TYPE_APPWIDGET:
      mLauncher.addAppWidgetFromDrop((PendingAddWidgetInfo)info,screen,touchXY);
    break;
case LauncherSettings.Favorites.ITEM_TYPE_LIVE_FOLDER:
  mLauncher.addLiveFolderFromDrop(info.componentName,screen,touchXY);
break;
case LauncherSettings.Favorites.ITEM_TYPE_SHORTCUT:
mLauncher.processShortcutFromDrop(info.componentName,screen,touchXY);
break;
default :
throw new IllegalStateException("Unknown item type: " + info.itemType);
}
cellLayout.onDragExit();
}
 else {
ItemInfo info=(ItemInfo)dragInfo;
View view=null;
switch (info.itemType) {
case LauncherSettings.Favorites.ITEM_TYPE_APPLICATION:
case LauncherSettings.Favorites.ITEM_TYPE_SHORTCUT:
if (info.container == NO_ID && info instanceof ApplicationInfo) {
info=new ShortcutInfo((ApplicationInfo)info);
}
view=mLauncher.createShortcut(R.layout.application,cellLayout,(ShortcutInfo)info);
break;
case LauncherSettings.Favorites.ITEM_TYPE_USER_FOLDER:
view=FolderIcon.fromXml(R.layout.folder_icon,mLauncher,cellLayout,(UserFolderInfo)info,mIconCache);
break;
default :
throw new IllegalStateException("Unknown item type: " + info.itemType);
}
mTargetCell=new int[2];
if (x != -1 && y != -1) {
cellLayout.findNearestVacantArea(x,y,1,1,mTargetCell);
}
 else {
cellLayout.findCellForSpan(mTargetCell,1,1);
}
addInScreen(view,indexOfChild(cellLayout),mTargetCell[0],mTargetCell[1],info.spanX,info.spanY,insertAtFirst);
boolean animateDrop=!mWasSpringLoadedOnDragExit;
cellLayout.onDropChild(view,animateDrop);
cellLayout.animateDrop();
CellLayout.LayoutParams lp=(CellLayout.LayoutParams)view.getLayoutParams();
LauncherModel.addOrMoveItemInDatabase(mLauncher,info,LauncherSettings.Favorites.CONTAINER_DESKTOP,screen,lp.cellX,lp.cellY);
}
}
