{
  updateWallpaperOffsets();
  if (mBackground != null && mBackgroundAlpha > 0.0f && mDrawBackground) {
    int alpha=(int)(mBackgroundAlpha * 255);
    if (mDrawCustomizeTrayBackground) {
      mCustomizationDrawer.getLocationOnScreen(mCustomizationDrawerPos);
      final Matrix m=mCustomizationDrawer.getMatrix();
      mCustomizationDrawerTransformedPos[0]=0.0f;
      mCustomizationDrawerTransformedPos[1]=mCustomizationDrawerContent.getTop();
      m.mapPoints(mCustomizationDrawerTransformedPos);
      mCustomizeTrayBackground.setAlpha(alpha);
      mCustomizeTrayBackground.setBounds(mScrollX,0,mScrollX + getMeasuredWidth(),getMeasuredHeight());
      mCustomizeTrayBackground.draw(canvas);
      final int offset=(int)(mCustomizationDrawerPos[1] + mCustomizationDrawerTransformedPos[1]);
      mBackground.setAlpha(alpha);
      mBackground.setBounds(mScrollX,offset,mScrollX + getMeasuredWidth(),offset + getMeasuredHeight());
      mBackground.draw(canvas);
    }
 else {
      mBackground.setAlpha(alpha);
      mBackground.setBounds(mScrollX,0,mScrollX + getMeasuredWidth(),getMeasuredHeight());
      mBackground.draw(canvas);
    }
  }
  for (int i=0; i < mFolderOuterRings.size(); i++) {
    View currentPage=getChildAt(getCurrentPage());
    Matrix m=currentPage.getMatrix();
    FolderRingAnimator fra=mFolderOuterRings.get(i);
    Drawable d=FolderRingAnimator.sSharedOuterRingDrawable;
    int width=(int)(d.getIntrinsicWidth() * fra.getOuterRingScale());
    int height=(int)(d.getIntrinsicHeight() * fra.getOuterRingScale());
    fra.getLocation(mTempLocation);
    int x=mTempLocation[0] + mScrollX - width / 2 - currentPage.getLeft();
    int y=mTempLocation[1] + mScrollY - height / 2 - currentPage.getTop();
    mTempFloatTuple[0]=x;
    mTempFloatTuple[1]=y;
    m.mapPoints(mTempFloatTuple);
    x=(int)(mTempFloatTuple[0]) + currentPage.getLeft();
    y=(int)(mTempFloatTuple[1]) + currentPage.getTop();
    canvas.save();
    canvas.translate(x,y);
    d.setBounds(0,0,(int)(width * currentPage.getScaleX()),(int)(height * currentPage.getScaleY()));
    d.draw(canvas);
    canvas.restore();
    if (fra.mFolderIcon != null) {
      int folderWidth=fra.mFolderIcon != null ? fra.mFolderIcon.getMeasuredWidth() : mCellWidth;
      int folderHeight=fra.mFolderIcon != null ? fra.mFolderIcon.getMeasuredWidth() : mCellHeight;
      d=FolderRingAnimator.sSharedInnerRingDrawable;
      width=(int)(folderWidth * fra.getInnerRingScale());
      height=(int)(folderHeight * fra.getInnerRingScale());
      x=mTempLocation[0] + mScrollX - width / 2 - currentPage.getLeft();
      y=mTempLocation[1] + mScrollY - height / 2 - currentPage.getTop();
      mTempFloatTuple[0]=x;
      mTempFloatTuple[1]=y;
      m.mapPoints(mTempFloatTuple);
      x=(int)(mTempFloatTuple[0]) + currentPage.getLeft();
      y=(int)(mTempFloatTuple[1]) + currentPage.getTop();
      canvas.save();
      canvas.translate(x,y);
      d.setBounds(0,0,(int)(width * currentPage.getScaleX()),(int)(height * currentPage.getScaleY()));
      d.draw(canvas);
      canvas.restore();
    }
  }
  super.onDraw(canvas);
}
