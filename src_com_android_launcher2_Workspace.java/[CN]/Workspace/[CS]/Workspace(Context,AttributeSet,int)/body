{
  super(context,attrs,defStyle);
  mContentIsRefreshable=false;
  setDataIsReady();
  final Resources res=getResources();
  mFadeInAdjacentScreens=res.getBoolean(R.bool.config_workspaceFadeAdjacentScreens);
  mDragFadeOutAlpha=res.getInteger(R.integer.config_dragFadeOutAlpha) / 100f;
  mDragFadeOutDuration=res.getInteger(R.integer.config_dragFadeOutDuration);
  mWallpaperManager=WallpaperManager.getInstance(context);
  int cellCountX=DEFAULT_CELL_COUNT_X;
  int cellCountY=DEFAULT_CELL_COUNT_Y;
  TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.Workspace,defStyle,0);
  if (LauncherApplication.isScreenLarge()) {
    TypedArray actionBarSizeTypedArray=context.obtainStyledAttributes(new int[]{android.R.attr.actionBarSize});
    DisplayMetrics displayMetrics=res.getDisplayMetrics();
    final float actionBarHeight=actionBarSizeTypedArray.getDimension(0,0f);
    final float systemBarHeight=res.getDimension(R.dimen.status_bar_height);
    final float smallestScreenDim=res.getConfiguration().smallestScreenWidthDp * displayMetrics.density;
    cellCountX=1;
    while (CellLayout.widthInPortrait(res,cellCountX + 1) <= smallestScreenDim) {
      cellCountX++;
    }
    cellCountY=1;
    while (actionBarHeight + CellLayout.heightInLandscape(res,cellCountY + 1) <= smallestScreenDim - systemBarHeight) {
      cellCountY++;
    }
  }
  mSpringLoadedShrinkFactor=res.getInteger(R.integer.config_workspaceSpringLoadShrinkPercentage) / 100.0f;
  cellCountX=a.getInt(R.styleable.Workspace_cellCountX,cellCountX);
  cellCountY=a.getInt(R.styleable.Workspace_cellCountY,cellCountY);
  mDefaultPage=a.getInt(R.styleable.Workspace_defaultScreen,1);
  a.recycle();
  LauncherModel.updateWorkspaceLayoutCells(cellCountX,cellCountY);
  setHapticFeedbackEnabled(false);
  mLauncher=(Launcher)context;
  initWorkspace();
  setMotionEventSplittingEnabled(true);
}
