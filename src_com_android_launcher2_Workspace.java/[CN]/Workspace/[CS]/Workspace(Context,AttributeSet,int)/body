{
  super(context,attrs,defStyle);
  mContentIsRefreshable=false;
  if (!LauncherApplication.isScreenLarge()) {
    mFadeInAdjacentScreens=false;
  }
  mWallpaperManager=WallpaperManager.getInstance(context);
  int cellCountX=DEFAULT_CELL_COUNT_X;
  int cellCountY=DEFAULT_CELL_COUNT_Y;
  TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.Workspace,defStyle,0);
  if (LauncherApplication.isScreenLarge()) {
    final Resources res=context.getResources();
    final DisplayMetrics dm=res.getDisplayMetrics();
    float widthDp=dm.widthPixels / dm.density;
    float heightDp=dm.heightPixels / dm.density;
    final float statusBarHeight=res.getDimension(R.dimen.status_bar_height);
    TypedArray actionBarSizeTypedArray=context.obtainStyledAttributes(new int[]{android.R.attr.actionBarSize});
    float actionBarHeight=actionBarSizeTypedArray.getDimension(0,0f);
    if (heightDp > widthDp) {
      float temp=widthDp;
      widthDp=heightDp;
      heightDp=temp;
    }
    int cellCountXLand=1;
    int cellCountXPort=1;
    while (2 * mPageSpacing + CellLayout.widthInLandscape(res,cellCountXLand + 1) <= widthDp) {
      cellCountXLand++;
    }
    while (CellLayout.widthInPortrait(res,cellCountXPort + 1) <= heightDp) {
      cellCountXPort++;
    }
    cellCountX=Math.min(cellCountXLand,cellCountXPort);
    int cellCountYLand=1;
    int cellCountYPort=1;
    while (statusBarHeight + actionBarHeight + CellLayout.heightInLandscape(res,cellCountYLand + 1) <= heightDp) {
      cellCountYLand++;
    }
    while (statusBarHeight + actionBarHeight + CellLayout.heightInPortrait(res,cellCountYPort + 1) <= widthDp) {
      cellCountYPort++;
    }
    cellCountY=Math.min(cellCountYLand,cellCountYPort);
  }
  cellCountX=a.getInt(R.styleable.Workspace_cellCountX,cellCountX);
  cellCountY=a.getInt(R.styleable.Workspace_cellCountY,cellCountY);
  mDefaultPage=a.getInt(R.styleable.Workspace_defaultScreen,1);
  a.recycle();
  LauncherModel.updateWorkspaceLayoutCells(cellCountX,cellCountY);
  setHapticFeedbackEnabled(false);
  initWorkspace();
  setMotionEventSplittingEnabled(true);
}
