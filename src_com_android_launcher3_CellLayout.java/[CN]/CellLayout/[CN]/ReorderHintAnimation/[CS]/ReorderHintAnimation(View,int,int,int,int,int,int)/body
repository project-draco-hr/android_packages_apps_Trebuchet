{
  regionToCenterPoint(cellX0,cellY0,spanX,spanY,mTmpPoint);
  final int x0=mTmpPoint[0];
  final int y0=mTmpPoint[1];
  regionToCenterPoint(cellX1,cellY1,spanX,spanY,mTmpPoint);
  final int x1=mTmpPoint[0];
  final int y1=mTmpPoint[1];
  final int dX=x1 - x0;
  final int dY=y1 - y0;
  finalDeltaX=0;
  finalDeltaY=0;
  if (dX == dY && dX == 0) {
  }
 else {
    if (dY == 0) {
      finalDeltaX=-Math.signum(dX) * mReorderHintAnimationMagnitude;
    }
 else     if (dX == 0) {
      finalDeltaY=-Math.signum(dY) * mReorderHintAnimationMagnitude;
    }
 else {
      double angle=Math.atan((float)(dY) / dX);
      finalDeltaX=(int)(-Math.signum(dX) * Math.abs(Math.cos(angle) * mReorderHintAnimationMagnitude));
      finalDeltaY=(int)(-Math.signum(dY) * Math.abs(Math.sin(angle) * mReorderHintAnimationMagnitude));
    }
  }
  initDeltaX=child.getTranslationX();
  initDeltaY=child.getTranslationY();
  finalScale=getChildrenScale() - 4.0f / child.getWidth();
  initScale=child.getScaleX();
  this.child=child;
}
