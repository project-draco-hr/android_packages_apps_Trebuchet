{
  Map<String,Map<String,List<TrackingEvent>>> originEventMap=new HashMap<String,Map<String,List<TrackingEvent>>>();
  for (  TrackingEvent event : eventList) {
    if (TextUtils.isEmpty(event.getMetaData(TrackingEvent.KEY_ORIGIN))) {
      continue;
    }
    String originKey=event.getMetaData(TrackingEvent.KEY_ORIGIN);
    if (!originEventMap.containsKey(originKey)) {
      HashMap<String,List<TrackingEvent>> newMap=new HashMap<String,List<TrackingEvent>>();
      originEventMap.put(originKey,newMap);
    }
    String packageName=event.getMetaData(TrackingEvent.KEY_PACKAGE);
    packageName=(TextUtils.isEmpty(packageName)) ? trackingId : packageName;
    if (!originEventMap.get(originKey).containsKey(packageName)) {
      originEventMap.get(originKey).put(packageName,new ArrayList<TrackingEvent>());
    }
    originEventMap.get(originKey).get(packageName).add(event);
  }
  List<Bundle> bundleList=new ArrayList<Bundle>();
  for (  Map.Entry<String,Map<String,List<TrackingEvent>>> entry : originEventMap.entrySet()) {
    String origin=entry.getKey();
    for (    Map.Entry<String,List<TrackingEvent>> entry2 : entry.getValue().entrySet()) {
      String pkg=entry2.getKey();
      List<TrackingEvent> events=entry2.getValue();
      Bundle bundle=TrackingBundle.createTrackingBundle(trackingId,category.name(),TRACKING_ACTION);
      bundle.putString(TrackingBundle.KEY_METADATA_ORIGIN,origin);
      bundle.putInt(TrackingBundle.KEY_METADATA_VALUE,events.size());
      if (!trackingId.equals(pkg)) {
        bundle.putString(TrackingBundle.KEY_METADATA_PACKAGE,pkg);
      }
      bundleList.add(bundle);
    }
  }
  return bundleList;
}
