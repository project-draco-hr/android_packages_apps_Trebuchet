{
  final float dist=(float)Math.sqrt(Math.pow(to.left - from.left,2) + Math.pow(to.top - from.top,2));
  final Resources res=getResources();
  final float maxDist=(float)res.getInteger(R.integer.config_dropAnimMaxDist);
  if (duration < 0) {
    duration=res.getInteger(R.integer.config_dropAnimMaxDuration);
    if (dist < maxDist) {
      duration*=mCubicEaseOutInterpolator.getInterpolation(dist / maxDist);
    }
  }
  if (mDropAnim != null) {
    mDropAnim.cancel();
  }
  if (mFadeOutAnim != null) {
    mFadeOutAnim.cancel();
  }
  mDropView=view;
  final float initialAlpha=view.getAlpha();
  mDropAnim=new ValueAnimator();
  if (alphaInterpolator == null || motionInterpolator == null) {
    mDropAnim.setInterpolator(mCubicEaseOutInterpolator);
  }
  if (anchorView != null) {
    mAnchorViewInitialScrollX=anchorView.getScrollX();
  }
  mAnchorView=anchorView;
  mDropAnim.setDuration(duration);
  mDropAnim.setFloatValues(0.0f,1.0f);
  mDropAnim.removeAllUpdateListeners();
  mDropAnim.addUpdateListener(new AnimatorUpdateListener(){
    public void onAnimationUpdate(    ValueAnimator animation){
      final float percent=(Float)animation.getAnimatedValue();
      int width=view.getMeasuredWidth();
      int height=view.getMeasuredHeight();
      invalidate(mDropViewPos[0],mDropViewPos[1],mDropViewPos[0] + width,mDropViewPos[1] + height);
      float alphaPercent=alphaInterpolator == null ? percent : alphaInterpolator.getInterpolation(percent);
      float motionPercent=motionInterpolator == null ? percent : motionInterpolator.getInterpolation(percent);
      mDropViewPos[0]=from.left + (int)Math.round(((to.left - from.left) * motionPercent));
      mDropViewPos[1]=from.top + (int)Math.round(((to.top - from.top) * motionPercent));
      mDropViewScaleX=percent * finalScaleX + (1 - percent) * initScaleX;
      mDropViewScaleY=percent * finalScaleY + (1 - percent) * initScaleY;
      mDropViewAlpha=alphaPercent * finalAlpha + (1 - alphaPercent) * initialAlpha;
      invalidate();
    }
  }
);
  mDropAnim.addListener(new AnimatorListenerAdapter(){
    public void onAnimationEnd(    Animator animation){
      if (onCompleteRunnable != null) {
        onCompleteRunnable.run();
      }
switch (animationEndStyle) {
case ANIMATION_END_DISAPPEAR:
        clearAnimatedView();
      break;
case ANIMATION_END_FADE_OUT:
    fadeOutDragView();
  break;
case ANIMATION_END_REMAIN_VISIBLE:
break;
}
}
}
);
mDropAnim.start();
}
