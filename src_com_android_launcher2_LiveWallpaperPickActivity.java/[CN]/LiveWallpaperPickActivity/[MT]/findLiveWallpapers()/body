{
  mThumbnails=new ArrayList<Drawable>(24);
  List<ResolveInfo> list=mPackageManager.queryIntentServices(getTargetIntent(),PackageManager.GET_META_DATA);
  mWallpaperIntents=new ArrayList<Intent>(list.size());
  mWallpaperInfos=new ArrayList<WallpaperInfo>(list.size());
  int listSize=list.size();
  DisplayMetrics metrics=new DisplayMetrics();
  getWindowManager().getDefaultDisplay().getMetrics(metrics);
  Drawable galleryIcon=this.getResources().getDrawable(R.drawable.livewallpaper_placeholder);
  int galleryIconW=galleryIcon.getIntrinsicWidth();
  int galleryIconH=galleryIcon.getIntrinsicHeight();
  Paint pt=new Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);
  pt.setTextAlign(Paint.Align.CENTER);
  for (int i=0; i < listSize; i++) {
    ResolveInfo resolveInfo=list.get(i);
    ComponentInfo ci=resolveInfo.serviceInfo;
    WallpaperInfo winfo;
    try {
      winfo=new WallpaperInfo(this,resolveInfo);
    }
 catch (    XmlPullParserException e) {
      Log.w(TAG,"Skipping wallpaper " + ci,e);
      continue;
    }
catch (    IOException e) {
      Log.w(TAG,"Skipping wallpaper " + ci,e);
      continue;
    }
    String packageName=winfo.getPackageName();
    String className=winfo.getServiceName();
    Intent intent=new Intent(getTargetIntent());
    intent.setClassName(packageName,className);
    mWallpaperIntents.add(intent);
    mWallpaperInfos.add(winfo);
    Drawable thumb=winfo.loadThumbnail(mPackageManager);
    if (null == thumb) {
      final int thumbWidth=(int)(180 * metrics.density);
      final int thumbHeight=(int)(160 * metrics.density);
      Bitmap thumbBit=Bitmap.createBitmap(thumbWidth,thumbHeight,Bitmap.Config.ARGB_8888);
      Canvas can=new Canvas(thumbBit);
      pt.setARGB(204,102,102,102);
      can.drawPaint(pt);
      galleryIcon.setBounds(0,0,thumbWidth,thumbHeight);
      ((BitmapDrawable)galleryIcon).setGravity(Gravity.CENTER);
      galleryIcon.draw(can);
      pt.setARGB(255,255,255,255);
      pt.setTextSize(20 * metrics.density);
      can.drawText(className.substring(className.lastIndexOf('.') + 1),(int)(thumbWidth * 0.5),(int)(thumbHeight - 22 * metrics.density),pt);
      thumb=new BitmapDrawable(thumbBit);
    }
    mThumbnails.add(thumb);
  }
}
