{
  TextView text=(TextView)v.findViewById(R.id.item_name);
  Configuration config=mLauncher.getResources().getConfiguration();
  if (config.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL) {
    text.setGravity(Gravity.RIGHT);
  }
  String title=cursor.getString(1);
  text.setText(title);
  v.setTag(new SettingsPosition(partition,position));
  Resources res=mLauncher.getResources();
  boolean current;
  String state;
switch (partition) {
case OverviewSettingsPanel.HOME_SETTINGS_POSITION:
switch (position) {
case 0:
      current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_HOMESCREEN_SEARCH,R.bool.preferences_interface_homescreen_search_default);
    state=current ? res.getString(R.string.setting_state_on) : res.getString(R.string.setting_state_off);
  ((TextView)v.findViewById(R.id.item_state)).setText(state);
break;
case 1:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_HOMESCREEN_HIDE_ICON_LABELS,R.bool.preferences_interface_homescreen_hide_icon_labels_default);
state=current ? res.getString(R.string.icon_labels_hide) : res.getString(R.string.icon_labels_show);
((TextView)v.findViewById(R.id.item_state)).setText(state);
break;
case 2:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_HOMESCREEN_SCROLLING_WALLPAPER_SCROLL,R.bool.preferences_interface_homescreen_scrolling_wallpaper_scroll_default);
state=current ? res.getString(R.string.setting_state_on) : res.getString(R.string.setting_state_off);
((TextView)v.findViewById(R.id.item_state)).setText(state);
break;
case 3:
updateDynamicGridSizeSettingsItem(v);
break;
default :
((TextView)v.findViewById(R.id.item_state)).setText("");
}
break;
case OverviewSettingsPanel.DRAWER_SETTINGS_POSITION:
switch (position) {
case 0:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_DRAWER_HIDE_ICON_LABELS,R.bool.preferences_interface_drawer_hide_icon_labels_default);
state=current ? res.getString(R.string.icon_labels_hide) : res.getString(R.string.icon_labels_show);
((TextView)v.findViewById(R.id.item_state)).setText(state);
break;
case 1:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_DRAWER_STYLE_USE_COMPACT,R.bool.preferences_interface_drawer_compact_default);
state=current ? res.getString(R.string.app_drawer_style_compact) : res.getString(R.string.app_drawer_style_sections);
((TextView)v.findViewById(R.id.item_state)).setText(state);
break;
case 2:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_DRAWER_DARK,R.bool.preferences_interface_drawer_dark_default);
state=current ? res.getString(R.string.app_drawer_color_dark) : res.getString(R.string.app_drawer_color_light);
((TextView)v.findViewById(R.id.item_state)).setText(state);
break;
case 3:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_USE_HORIZONTAL_SCRUBBER,R.bool.preferences_interface_use_horizontal_scrubber_default);
state=current ? res.getString(R.string.fast_scroller_type_horizontal) : res.getString(R.string.fast_scroller_type_vertical);
((TextView)v.findViewById(R.id.item_state)).setText(state);
break;
default :
((TextView)v.findViewById(R.id.item_state)).setText("");
}
break;
default :
switch (position) {
case 0:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_GENERAL_ICONS_LARGE,R.bool.preferences_interface_general_icons_large_default);
state=current ? res.getString(R.string.setting_state_on) : res.getString(R.string.setting_state_off);
((TextView)v.findViewById(R.id.item_state)).setText(state);
break;
default :
((TextView)v.findViewById(R.id.item_state)).setText("");
}
}
v.setOnClickListener(mSettingsItemListener);
}
