{
  TextView nameView=(TextView)v.findViewById(R.id.item_name);
  TextView stateView=(TextView)v.findViewById(R.id.item_state);
  Switch settingSwitch=(Switch)v.findViewById(R.id.setting_switch);
  settingSwitch.setClickable(false);
  Configuration config=mLauncher.getResources().getConfiguration();
  if (config.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL) {
    nameView.setGravity(Gravity.RIGHT);
  }
  String title=cursor.getString(1);
  nameView.setText(title);
  v.setTag(new SettingsPosition(partition,position));
  Resources res=mLauncher.getResources();
  boolean current;
  String state;
switch (partition) {
case OverviewSettingsPanel.HOME_SETTINGS_POSITION:
switch (position) {
case 0:
      current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_HOMESCREEN_SEARCH,R.bool.preferences_interface_homescreen_search_default);
    setSettingSwitch(stateView,settingSwitch,current);
  break;
case 1:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_HOMESCREEN_HIDE_ICON_LABELS,R.bool.preferences_interface_homescreen_hide_icon_labels_default);
state=current ? res.getString(R.string.icon_labels_hide) : res.getString(R.string.icon_labels_show);
setStateText(stateView,settingSwitch,state);
break;
case 2:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_HOMESCREEN_SCROLLING_WALLPAPER_SCROLL,R.bool.preferences_interface_homescreen_scrolling_wallpaper_scroll_default);
setSettingSwitch(stateView,settingSwitch,current);
break;
case 3:
updateDynamicGridSizeSettingsItem(v);
break;
default :
hideStates(stateView,settingSwitch);
}
break;
case OverviewSettingsPanel.DRAWER_SETTINGS_POSITION:
switch (position) {
case 0:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_DRAWER_HIDE_ICON_LABELS,R.bool.preferences_interface_drawer_hide_icon_labels_default);
state=current ? res.getString(R.string.icon_labels_hide) : res.getString(R.string.icon_labels_show);
setStateText(stateView,settingSwitch,state);
break;
case 1:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_DRAWER_STYLE_USE_COMPACT,R.bool.preferences_interface_drawer_compact_default);
state=current ? res.getString(R.string.app_drawer_style_compact) : res.getString(R.string.app_drawer_style_sections);
setStateText(stateView,settingSwitch,state);
break;
case 2:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_DRAWER_DARK,R.bool.preferences_interface_drawer_dark_default);
state=current ? res.getString(R.string.app_drawer_color_dark) : res.getString(R.string.app_drawer_color_light);
setStateText(stateView,settingSwitch,state);
break;
case 3:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_USE_SCROLLER,R.bool.preferences_interface_use_scroller_default);
setSettingSwitch(stateView,settingSwitch,current);
break;
case 4:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_USE_HORIZONTAL_SCRUBBER,R.bool.preferences_interface_use_horizontal_scrubber_default);
state=current ? res.getString(R.string.fast_scroller_type_horizontal) : res.getString(R.string.fast_scroller_type_vertical);
setStateText(stateView,settingSwitch,state);
break;
case 5:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_DRAWER_SEARCH,R.bool.preferences_interface_drawer_search_default);
setSettingSwitch(stateView,settingSwitch,current);
break;
default :
hideStates(stateView,settingSwitch);
}
break;
case OverviewSettingsPanel.APP_SETTINGS_POSITION:
switch (position) {
case 0:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_GENERAL_ICONS_LARGE,R.bool.preferences_interface_general_icons_large_default);
setSettingSwitch(stateView,settingSwitch,current);
break;
case 2:
current=SettingsProvider.getBoolean(mContext,SettingsProvider.SETTINGS_UI_ALLOW_ROTATION,R.bool.preferences_interface_allow_rotation);
setSettingSwitch(stateView,settingSwitch,current);
break;
default :
hideStates(stateView,settingSwitch);
}
}
v.setOnClickListener(mSettingsItemListener);
}
