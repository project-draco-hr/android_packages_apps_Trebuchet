{
  boolean wrap;
  int startX;
  int endX;
  int startY;
  int delay=0;
  float delayAmount=START_VIEW_REORDER_DELAY;
  int countX=getCountX();
  int emptyX=empty % getCountX();
  int emptyY=empty / countX;
  int targetX=target % countX;
  int targetY=target / countX;
  if (target > empty) {
    wrap=emptyX == countX - 1;
    startY=wrap ? emptyY + 1 : emptyY;
    for (int y=startY; y <= targetY; y++) {
      startX=y == emptyY ? emptyX + 1 : 0;
      endX=y < targetY ? countX - 1 : targetX;
      for (int x=startX; x <= endX; x++) {
        View v=getChildAt(x,y);
        if (animateChildToPosition(v,emptyX,emptyY,REORDER_ANIMATION_DURATION,delay,true,true)) {
          emptyX=x;
          emptyY=y;
          delay+=delayAmount;
          delayAmount*=VIEW_REORDER_DELAY_FACTOR;
        }
      }
    }
  }
 else {
    wrap=emptyX == 0;
    startY=wrap ? emptyY - 1 : emptyY;
    for (int y=startY; y >= targetY; y--) {
      startX=y == emptyY ? emptyX - 1 : countX - 1;
      endX=y > targetY ? 0 : targetX;
      for (int x=startX; x >= endX; x--) {
        View v=getChildAt(x,y);
        if (animateChildToPosition(v,emptyX,emptyY,REORDER_ANIMATION_DURATION,delay,true,true)) {
          emptyX=x;
          emptyY=y;
          delay+=delayAmount;
          delayAmount*=VIEW_REORDER_DELAY_FACTOR;
        }
      }
    }
  }
}
