{
  boolean hideIconLabels=SettingsProvider.getBoolean(mLauncher,SettingsProvider.SETTINGS_UI_DRAWER_HIDE_ICON_LABELS,R.bool.preferences_interface_drawer_hide_icon_labels_default);
switch (viewType) {
case SECTION_BREAK_VIEW_TYPE:
    return new ViewHolder(new View(parent.getContext()));
case ICON_VIEW_TYPE:
{
    BubbleTextView icon=(BubbleTextView)mLayoutInflater.inflate(R.layout.all_apps_icon,parent,false);
    if (hideIconLabels) {
      icon.setTextVisibility(!hideIconLabels);
    }
    icon.setOnTouchListener(mTouchListener);
    icon.setOnClickListener(mIconClickListener);
    icon.setOnLongClickListener(mIconLongClickListener);
    icon.setLongPressTimeout(ViewConfiguration.get(parent.getContext()).getLongPressTimeout());
    icon.setFocusable(true);
    FastScrollFocusApplicator.createApplicator(icon,FastScrollFocusable.FAST_SCROLL_FOCUS_DIMMABLE | FastScrollFocusable.FAST_SCROLL_FOCUS_SCALABLE);
    return new ViewHolder(icon);
  }
case PREDICTION_ICON_VIEW_TYPE:
{
  BubbleTextView icon=(BubbleTextView)mLayoutInflater.inflate(R.layout.all_apps_prediction_bar_icon,parent,false);
  if (hideIconLabels) {
    icon.setTextVisibility(!hideIconLabels);
  }
  icon.setOnTouchListener(mTouchListener);
  icon.setOnClickListener(mIconClickListener);
  icon.setOnLongClickListener(mIconLongClickListener);
  icon.setLongPressTimeout(ViewConfiguration.get(parent.getContext()).getLongPressTimeout());
  icon.setFocusable(true);
  FastScrollFocusApplicator.createApplicator(icon,FastScrollFocusable.FAST_SCROLL_FOCUS_DIMMABLE | FastScrollFocusable.FAST_SCROLL_FOCUS_SCALABLE);
  ViewHolder holder=new ViewHolder(icon);
  mRemoteFolderManager.onCreateViewHolder(holder,viewType);
  return holder;
}
case EMPTY_SEARCH_VIEW_TYPE:
return new ViewHolder(mLayoutInflater.inflate(R.layout.all_apps_empty_search,parent,false));
case SEARCH_MARKET_DIVIDER_VIEW_TYPE:
return new ViewHolder(mLayoutInflater.inflate(R.layout.all_apps_search_market_divider,parent,false));
case SEARCH_MARKET_VIEW_TYPE:
View searchMarketView=mLayoutInflater.inflate(R.layout.all_apps_search_market,parent,false);
searchMarketView.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
mLauncher.startSearchFromAllApps(v,mMarketSearchIntent,mLastSearchQuery);
}
}
);
return new ViewHolder(searchMarketView);
case CUSTOM_PREDICTED_APPS_HEADER_VIEW_TYPE:
{
View v=mLayoutInflater.inflate(R.layout.custom_predicted_apps_header,parent,false);
FastScrollFocusApplicator.createApplicator(v,FastScrollFocusable.FAST_SCROLL_FOCUS_DIMMABLE);
ViewHolder holder=new ViewHolder(v);
mRemoteFolderManager.onCreateViewHolder(holder,viewType);
return holder;
}
case CUSTOM_PREDICTED_APPS_FOOTER_VIEW_TYPE:
{
View v=mLayoutInflater.inflate(R.layout.custom_predicted_apps_footer,parent,false);
ViewHolder holder=new ViewHolder(v);
mRemoteFolderManager.onCreateViewHolder(holder,viewType);
return holder;
}
default :
throw new RuntimeException("Unexpected view type");
}
}
