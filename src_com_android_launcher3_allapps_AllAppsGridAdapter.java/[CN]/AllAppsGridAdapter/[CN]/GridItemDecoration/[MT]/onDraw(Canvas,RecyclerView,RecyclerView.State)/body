{
  if (mApps.hasFilter() || mAppsPerRow == 0) {
    return;
  }
  if (DEBUG_SECTION_MARGIN) {
    Paint p=new Paint();
    p.setColor(0x33ff0000);
    c.drawRect(mBackgroundPadding.left,0,mBackgroundPadding.left + mSectionNamesMargin,parent.getMeasuredHeight(),p);
  }
  List<AlphabeticalAppsList.AdapterItem> items=mApps.getAdapterItems();
  boolean hasDrawnPredictedAppsDivider=false;
  boolean showSectionNames=mSectionNamesMargin > 0;
  int childCount=parent.getChildCount();
  int lastSectionTop=0;
  int lastSectionHeight=0;
  for (int i=0; i < childCount; i++) {
    View child=parent.getChildAt(i);
    ViewHolder holder=(ViewHolder)parent.getChildViewHolder(child);
    if (!isValidHolderAndChild(holder,child,items)) {
      continue;
    }
    if (shouldDrawItemDivider(holder,items) && !hasDrawnPredictedAppsDivider) {
      int top=child.getTop() + child.getHeight() - mPredictionBarBottomPadding / 2;
      c.drawLine(mBackgroundPadding.left,top,parent.getWidth() - mBackgroundPadding.right,top,mPredictedAppsDividerPaint);
      hasDrawnPredictedAppsDivider=true;
    }
 else     if (showSectionNames && shouldDrawItemSection(holder,i,items)) {
      int viewTopOffset=(2 * child.getPaddingTop());
      int pos=holder.getPosition();
      AlphabeticalAppsList.AdapterItem item=items.get(pos);
      AlphabeticalAppsList.SectionInfo sectionInfo=item.sectionInfo;
      String lastSectionName=item.sectionName;
      for (int j=item.sectionAppIndex; j < sectionInfo.numApps; j++, pos++) {
        AlphabeticalAppsList.AdapterItem nextItem=items.get(pos);
        String sectionName=nextItem.sectionName;
        if (nextItem.sectionInfo != sectionInfo) {
          break;
        }
        if (j > item.sectionAppIndex && sectionName.equals(lastSectionName)) {
          continue;
        }
        PointF sectionBounds=getAndCacheSectionBounds(sectionName);
        int sectionBaseline=(int)(viewTopOffset + sectionBounds.y);
        int x=mIsRtl ? parent.getWidth() - mBackgroundPadding.left - mSectionNamesMargin : mBackgroundPadding.left;
        x+=(int)((mSectionNamesMargin - sectionBounds.x) / 2f);
        int y=child.getTop() + sectionBaseline;
        int appIndexInSection=items.get(pos).sectionAppIndex;
        int nextRowPos=Math.min(items.size() - 1,pos + mAppsPerRow - (appIndexInSection % mAppsPerRow));
        AlphabeticalAppsList.AdapterItem nextRowItem=items.get(nextRowPos);
        boolean fixedToRow=!sectionName.equals(nextRowItem.sectionName);
        if (!fixedToRow) {
          y=Math.max(sectionBaseline,y);
        }
        if (lastSectionHeight > 0 && y <= (lastSectionTop + lastSectionHeight)) {
          y+=lastSectionTop - y + lastSectionHeight;
        }
        if (FADE_OUT_SECTIONS) {
          int alpha=255;
          if (fixedToRow) {
            alpha=Math.min(255,(int)(255 * (Math.max(0,y) / (float)sectionBaseline)));
          }
          mSectionTextPaint.setAlpha(alpha);
        }
        c.drawText(sectionName,x,y,mSectionTextPaint);
        lastSectionTop=y;
        lastSectionHeight=(int)(sectionBounds.y + mSectionHeaderOffset);
        lastSectionName=sectionName;
      }
      i+=(sectionInfo.numApps - item.sectionAppIndex);
    }
  }
}
