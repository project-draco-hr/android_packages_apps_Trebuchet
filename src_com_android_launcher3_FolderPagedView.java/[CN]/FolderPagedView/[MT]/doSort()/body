{
  if (!mSortOperationPending) {
    return;
  }
  if (getNextPage() != 0) {
    snapToPage(0,SPAN_TO_PAGE_DURATION,new DecelerateInterpolator());
    return;
  }
  mSortOperationPending=false;
  ShortcutInfo[][] oldItems=new ShortcutInfo[mGridCountX][mGridCountY];
  CellLayout currentPage=getCurrentCellLayout();
  for (int x=0; x < mGridCountX; x++) {
    for (int y=0; y < mGridCountY; y++) {
      View v=currentPage.getChildAt(x,y);
      if (v != null) {
        oldItems[x][y]=(ShortcutInfo)v.getTag();
      }
    }
  }
  ArrayList<View> views=new ArrayList<View>(mFolder.getItemsInReadingOrder());
  Collections.sort(views,new ViewComparator());
  arrangeChildren(views,views.size());
  int delay=0;
  float delayAmount=START_VIEW_REORDER_DELAY;
  final Interpolator hideInterpolator=new DecelerateInterpolator(2);
  final Interpolator showInterpolator=new OvershootInterpolator(0.8f);
  currentPage=getCurrentCellLayout();
  for (int x=0; x < mGridCountX; x++) {
    for (int y=0; y < mGridCountY; y++) {
      final BubbleTextView v=(BubbleTextView)currentPage.getChildAt(x,y);
      if (v != null) {
        final ShortcutInfo info=(ShortcutInfo)v.getTag();
        final Runnable clearPending=new Runnable(){
          @Override public void run(){
            mPendingAnimations.remove(v);
            v.setScaleX(1);
            v.setScaleY(1);
          }
        }
;
        if (oldItems[x][y] == null) {
          v.setScaleX(0);
          v.setScaleY(0);
          v.animate().setDuration(SORT_ANIM_SHOW_DURATION).setStartDelay(SORT_ANIM_HIDE_DURATION + delay).scaleX(1).scaleY(1).setInterpolator(showInterpolator).withEndAction(clearPending);
          mPendingAnimations.put(v,clearPending);
        }
 else {
          v.applyFromShortcutInfo(oldItems[x][y],mIconCache,false);
          v.animate().setStartDelay(delay).setDuration(SORT_ANIM_HIDE_DURATION).scaleX(0).scaleY(0).setInterpolator(hideInterpolator).withEndAction(new Runnable(){
            @Override public void run(){
              v.applyFromShortcutInfo(info,mIconCache,false);
              v.animate().scaleX(1).scaleY(1).setDuration(SORT_ANIM_SHOW_DURATION).setStartDelay(0).setInterpolator(showInterpolator).withEndAction(clearPending);
            }
          }
);
          mPendingAnimations.put(v,new Runnable(){
            @Override public void run(){
              clearPending.run();
              v.applyFromShortcutInfo(info,mIconCache,false);
            }
          }
);
        }
        delay+=delayAmount;
        delayAmount*=VIEW_REORDER_DELAY_FACTOR;
      }
    }
  }
  setIsSorted(true,true);
}
