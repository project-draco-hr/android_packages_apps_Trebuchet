{
  if (!isScrollingIndicatorEnabled())   return;
  int numPages=getChildCount();
  int pageWidth=getMeasuredWidth();
  int maxPageWidth=(numPages * getMeasuredWidth()) + ((numPages - 1) * mPageSpacing);
  int trackWidth=pageWidth;
  int indicatorWidth=mScrollIndicator.getMeasuredWidth() - mScrollIndicator.getPaddingLeft() - mScrollIndicator.getPaddingRight();
  int paddingLeft=0;
  int paddingRight=0;
  getScrollingIndicatorTrack();
  if (mScrollTrack != null) {
    paddingLeft=mScrollTrack.getPaddingLeft();
    paddingRight=mScrollTrack.getPaddingRight();
    trackWidth=mScrollTrack.getMeasuredWidth() - paddingLeft - paddingRight;
  }
  float offset=(float)getScrollX() / maxPageWidth;
  int indicatorSpace=trackWidth / numPages;
  int indicatorPos=(int)(offset * trackWidth) + paddingLeft;
  if (hasElasticScrollIndicator()) {
    if (mScrollIndicator.getMeasuredWidth() != indicatorSpace) {
      mScrollIndicator.getLayoutParams().width=indicatorSpace;
      mScrollIndicator.requestLayout();
    }
  }
 else {
    int indicatorCenterOffset=indicatorSpace / 2 - indicatorWidth / 2;
    indicatorPos+=indicatorCenterOffset;
  }
  mScrollIndicator.setTranslationX(indicatorPos);
  mScrollIndicator.invalidate();
}
