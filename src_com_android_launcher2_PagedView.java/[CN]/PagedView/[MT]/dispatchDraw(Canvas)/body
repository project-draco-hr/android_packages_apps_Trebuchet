{
  int halfScreenSize=getMeasuredWidth() / 2;
  int screenCenter=mScrollX + halfScreenSize;
  if (screenCenter != mLastScreenCenter) {
    screenScrolled(screenCenter);
    updateAdjacentPagesAlpha();
    mLastScreenCenter=screenCenter;
  }
  final int pageCount=getChildCount();
  if (pageCount > 0) {
    final int pageWidth=getScaledMeasuredWidth(getPageAt(0));
    final int screenWidth=getMeasuredWidth();
    int x=getScaledRelativeChildOffset(0) + pageWidth;
    int leftScreen=0;
    int rightScreen=0;
    while (x <= mScrollX && leftScreen < pageCount - 1) {
      leftScreen++;
      x+=getScaledMeasuredWidth(getPageAt(leftScreen)) + mPageSpacing;
    }
    rightScreen=leftScreen;
    while (x < mScrollX + screenWidth && rightScreen < pageCount - 1) {
      rightScreen++;
      x+=getScaledMeasuredWidth(getPageAt(rightScreen)) + mPageSpacing;
    }
    rightScreen=Math.min(getChildCount() - 1,rightScreen);
    final long drawingTime=getDrawingTime();
    canvas.save();
    canvas.clipRect(mScrollX,mScrollY,mScrollX + mRight - mLeft,mScrollY + mBottom - mTop);
    for (int i=rightScreen; i >= leftScreen; i--) {
      drawChild(canvas,getPageAt(i),drawingTime);
    }
    canvas.restore();
  }
}
