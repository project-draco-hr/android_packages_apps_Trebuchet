{
  if (mFadeInAdjacentScreens) {
    if (mDirtyPageAlpha || (mTouchState == TOUCH_STATE_SCROLLING) || !mScroller.isFinished()) {
      int screenWidth=getMeasuredWidth() - mPaddingLeft - mPaddingRight;
      int halfScreenSize=screenWidth / 2;
      int screenCenter=mScrollX + halfScreenSize + mPaddingLeft;
      final int childCount=getChildCount();
      for (int i=0; i < childCount; ++i) {
        View layout=(View)getPageAt(i);
        int childWidth=getScaledMeasuredWidth(layout);
        int halfChildWidth=(childWidth / 2);
        int childCenter=getChildOffset(i) + halfChildWidth;
        if (childWidth <= 0) {
          childWidth=screenWidth;
          childCenter=(i * childWidth) + (childWidth / 2);
        }
        int d=halfChildWidth;
        int distanceFromScreenCenter=childCenter - screenCenter;
        if (distanceFromScreenCenter > 0) {
          if (i > 0) {
            d+=getScaledMeasuredWidth(getPageAt(i - 1)) / 2;
          }
 else {
            continue;
          }
        }
 else {
          if (i < childCount - 1) {
            d+=getScaledMeasuredWidth(getPageAt(i + 1)) / 2;
          }
 else {
            continue;
          }
        }
        d+=mPageSpacing;
        d=Math.max(1,d);
        float dimAlpha=(float)(Math.abs(distanceFromScreenCenter)) / d;
        dimAlpha=Math.max(0.0f,Math.min(1.0f,(dimAlpha * dimAlpha)));
        float alpha=1.0f - dimAlpha;
        if (alpha < ALPHA_QUANTIZE_LEVEL) {
          alpha=0.0f;
        }
 else         if (alpha > 1.0f - ALPHA_QUANTIZE_LEVEL) {
          alpha=1.0f;
        }
        layout.setAlpha(alpha);
      }
      mDirtyPageAlpha=false;
    }
  }
}
