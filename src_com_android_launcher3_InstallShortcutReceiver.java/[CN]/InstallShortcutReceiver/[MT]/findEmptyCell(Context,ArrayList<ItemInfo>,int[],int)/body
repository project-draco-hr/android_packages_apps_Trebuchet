{
  final int xCount=LauncherModel.getCellCountX();
  final int yCount=LauncherModel.getCellCountY();
  boolean[][] occupied=new boolean[xCount][yCount];
  ItemInfo item=null;
  int cellX, cellY, spanX, spanY;
  for (int i=0; i < items.size(); ++i) {
    item=items.get(i);
    if (item.container == LauncherSettings.Favorites.CONTAINER_DESKTOP) {
      if (item.screenId == screen) {
        cellX=item.cellX;
        cellY=item.cellY;
        spanX=item.spanX;
        spanY=item.spanY;
        for (int x=cellX; 0 <= x && x < cellX + spanX && x < xCount; x++) {
          for (int y=cellY; 0 <= y && y < cellY + spanY && y < yCount; y++) {
            occupied[x][y]=true;
          }
        }
      }
    }
  }
  return CellLayout.findVacantCell(xy,1,1,xCount,yCount,occupied);
}
