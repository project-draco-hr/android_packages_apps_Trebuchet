{
synchronized (sLock) {
    Set<String> strings=sharedPrefs.getStringSet(APPS_PENDING_INSTALL,null);
    if (DBG)     Log.d(TAG,"Getting and clearing APPS_PENDING_INSTALL: " + strings);
    if (strings == null) {
      return new ArrayList<PendingInstallShortcutInfo>();
    }
    ArrayList<PendingInstallShortcutInfo> infos=new ArrayList<PendingInstallShortcutInfo>();
    for (    String json : strings) {
      try {
        JSONObject object=(JSONObject)new JSONTokener(json).nextValue();
        Intent data=Intent.parseUri(object.getString(DATA_INTENT_KEY),0);
        Intent launchIntent=Intent.parseUri(object.getString(LAUNCH_INTENT_KEY),0);
        String name=object.getString(NAME_KEY);
        String iconBase64=object.optString(ICON_KEY);
        String iconResourceName=object.optString(ICON_RESOURCE_NAME_KEY);
        String iconResourcePackageName=object.optString(ICON_RESOURCE_PACKAGE_NAME_KEY);
        if (iconBase64 != null && !iconBase64.isEmpty()) {
          byte[] iconArray=Base64.decode(iconBase64,Base64.DEFAULT);
          Bitmap b=BitmapFactory.decodeByteArray(iconArray,0,iconArray.length);
          data.putExtra(Intent.EXTRA_SHORTCUT_ICON,b);
        }
 else         if (iconResourceName != null && !iconResourceName.isEmpty()) {
          Intent.ShortcutIconResource iconResource=new Intent.ShortcutIconResource();
          iconResource.resourceName=iconResourceName;
          iconResource.packageName=iconResourcePackageName;
          data.putExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE,iconResource);
        }
        data.putExtra(Intent.EXTRA_SHORTCUT_INTENT,launchIntent);
        PendingInstallShortcutInfo info=new PendingInstallShortcutInfo(data,name,launchIntent);
        infos.add(info);
      }
 catch (      org.json.JSONException e) {
        Log.d(TAG,"Exception reading shortcut to add: " + e);
      }
catch (      java.net.URISyntaxException e) {
        Log.d(TAG,"Exception reading shortcut to add: " + e);
      }
    }
    sharedPrefs.edit().putStringSet(APPS_PENDING_INSTALL,new HashSet<String>()).commit();
    return infos;
  }
}
