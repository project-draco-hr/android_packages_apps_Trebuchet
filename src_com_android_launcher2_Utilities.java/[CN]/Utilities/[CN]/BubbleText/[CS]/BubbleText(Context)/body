{
  final Resources resources=context.getResources();
  final float scale=resources.getDisplayMetrics().density;
  final float paddingLeft=5.0f * scale;
  final float paddingRight=5.0f * scale;
  final float cellWidth=resources.getDimension(R.dimen.workspace_cell_width);
  final float bubbleWidth=cellWidth - paddingLeft - paddingRight;
  mBubblePadding=3.0f * scale;
  RectF bubbleRect=mBubbleRect;
  bubbleRect.left=0;
  bubbleRect.top=0;
  bubbleRect.right=(int)(bubbleWidth + 0.5f);
  mTextWidth=bubbleWidth - mBubblePadding - mBubblePadding;
  Paint rectPaint=new Paint();
  rectPaint.setColor(0xff000000);
  rectPaint.setAntiAlias(true);
  TextPaint textPaint=mTextPaint=new TextPaint();
  textPaint.setTypeface(Typeface.DEFAULT);
  textPaint.setTextSize(13 * scale);
  textPaint.setColor(0xffffffff);
  textPaint.setAntiAlias(true);
  if (TEXT_BURN) {
    textPaint.setShadowLayer(8,0,0,0xff000000);
  }
  float ascent=-textPaint.ascent();
  float descent=textPaint.descent();
  float leading=0.0f;
  mLeading=(int)(leading + 0.5f);
  mFirstLineY=(int)(leading + ascent + 0.5f);
  mLineHeight=(int)(leading + ascent + descent+ 0.5f);
  mBitmapWidth=roundToPow2((int)(mBubbleRect.width() + 0.5f));
  mBitmapHeight=roundToPow2((int)((MAX_LINES * mLineHeight) + leading + 0.5f));
  mBubbleRect.offsetTo((mBitmapWidth - mBubbleRect.width()) / 2,0);
  if (false) {
    Log.d(TAG,"mBitmapWidth=" + mBitmapWidth + " mBitmapHeight="+ mBitmapHeight+ " w="+ ((int)(mBubbleRect.width() + 0.5f))+ " h="+ ((int)((MAX_LINES * mLineHeight) + leading + 0.5f)));
  }
}
