{
  if (VERBOSE)   Log.v(TAG,"onBackup");
  Journal in=readJournal(oldState);
  if (!launcherIsReady()) {
    dataChanged();
    writeJournal(newState,in);
    return;
  }
  lazyInitAppState(true);
  Log.v(TAG,"lastBackupTime = " + in.t);
  mKeys.clear();
  applyJournal(in);
  long newBackupTime=System.currentTimeMillis();
  mBackupDataWasUpdated=false;
  try {
    backupFavorites(data);
    backupScreens(data);
    backupIcons(data);
    backupWidgets(data);
    HashSet<String> validKeys=new HashSet<String>();
    for (    Key key : mKeys) {
      validKeys.add(keyToBackupKey(key));
    }
    mExistingKeys.removeAll(validKeys);
    for (    String deleted : mExistingKeys) {
      if (VERBOSE)       Log.v(TAG,"dropping deleted item " + deleted);
      data.writeEntityHeader(deleted,-1);
      mBackupDataWasUpdated=true;
    }
    mExistingKeys.clear();
    if (!mBackupDataWasUpdated) {
      mBackupDataWasUpdated=(in.profile == null) || !Arrays.equals(DeviceProfieData.toByteArray(in.profile),DeviceProfieData.toByteArray(getDeviceProfieData())) || (in.backupVersion != BACKUP_VERSION)|| (in.appVersion != getAppVersion());
    }
    if (mBackupDataWasUpdated) {
      mLastBackupRestoreTime=newBackupTime;
      Journal state=getCurrentStateJournal();
      writeRowToBackup(JOURNAL_KEY,state,data);
    }
 else {
      if (DEBUG)       Log.d(TAG,"Nothing was written during backup");
    }
  }
 catch (  IOException e) {
    Log.e(TAG,"launcher backup has failed",e);
  }
  writeNewStateDescription(newState);
}
