{
  Favorite favorite=unpackProto(new Favorite(),buffer,dataSize);
  ContentValues values=new ContentValues();
  values.put(Favorites._ID,favorite.id);
  values.put(Favorites.SCREEN,favorite.screen);
  values.put(Favorites.CONTAINER,favorite.container);
  values.put(Favorites.CELLX,favorite.cellX);
  values.put(Favorites.CELLY,favorite.cellY);
  values.put(Favorites.SPANX,favorite.spanX);
  values.put(Favorites.SPANY,favorite.spanY);
  values.put(Favorites.ICON_TYPE,favorite.iconType);
  if (favorite.iconType == Favorites.ICON_TYPE_RESOURCE) {
    values.put(Favorites.ICON_PACKAGE,favorite.iconPackage);
    values.put(Favorites.ICON_RESOURCE,favorite.iconResource);
  }
  if (favorite.iconType == Favorites.ICON_TYPE_BITMAP) {
    values.put(Favorites.ICON,favorite.icon);
  }
  if (!TextUtils.isEmpty(favorite.title)) {
    values.put(Favorites.TITLE,favorite.title);
  }
 else {
    values.put(Favorites.TITLE,"");
  }
  if (!TextUtils.isEmpty(favorite.intent)) {
    values.put(Favorites.INTENT,favorite.intent);
  }
  values.put(Favorites.ITEM_TYPE,favorite.itemType);
  UserHandleCompat myUserHandle=UserHandleCompat.myUserHandle();
  long userSerialNumber=UserManagerCompat.getInstance(mContext).getSerialNumberForUser(myUserHandle);
  values.put(LauncherSettings.Favorites.PROFILE_ID,userSerialNumber);
  DeviceProfieData currentProfile=getDeviceProfieData();
  if (favorite.itemType == Favorites.ITEM_TYPE_APPWIDGET) {
    if (!TextUtils.isEmpty(favorite.appWidgetProvider)) {
      values.put(Favorites.APPWIDGET_PROVIDER,favorite.appWidgetProvider);
    }
    values.put(Favorites.APPWIDGET_ID,favorite.appWidgetId);
    values.put(LauncherSettings.Favorites.RESTORED,LauncherAppWidgetInfo.FLAG_ID_NOT_VALID | LauncherAppWidgetInfo.FLAG_PROVIDER_NOT_READY | LauncherAppWidgetInfo.FLAG_UI_NOT_READY);
    if (((favorite.cellX + favorite.spanX) > currentProfile.desktopCols) || ((favorite.cellY + favorite.spanY) > currentProfile.desktopRows)) {
      restoreSuccessful=false;
      throw new InvalidBackupException("Widget not in screen bounds, aborting restore");
    }
  }
 else {
    if (isReplaceableHotseatItem(favorite) && favorite.targetType != Favorite.TARGET_NONE && favorite.targetType < CommonAppTypeParser.SUPPORTED_TYPE_COUNT) {
      Log.e(TAG,"Added item type flag");
      values.put(LauncherSettings.Favorites.RESTORED,1 | CommonAppTypeParser.encodeItemTypeToFlag(favorite.targetType));
    }
 else {
      values.put(LauncherSettings.Favorites.RESTORED,1);
    }
    if (favorite.container == Favorites.CONTAINER_HOTSEAT) {
      if ((favorite.screen >= currentProfile.hotseatCount) || (favorite.screen == currentProfile.allappsRank)) {
        restoreSuccessful=false;
        throw new InvalidBackupException("Item not in hotseat bounds, aborting restore");
      }
    }
 else {
      if ((favorite.cellX >= currentProfile.desktopCols) || (favorite.cellY >= currentProfile.desktopRows)) {
        restoreSuccessful=false;
        throw new InvalidBackupException("Item not in desktop bounds, aborting restore");
      }
    }
  }
  return values;
}
