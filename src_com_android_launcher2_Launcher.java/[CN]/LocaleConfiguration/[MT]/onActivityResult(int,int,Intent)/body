{
  boolean delayExitSpringLoadedMode=false;
  boolean isWidgetDrop=(requestCode == REQUEST_PICK_APPWIDGET || requestCode == REQUEST_CREATE_APPWIDGET);
  mWaitingForResult=false;
  if (isWidgetDrop) {
    int appWidgetId=data != null ? data.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID,-1) : -1;
    completeTwoStageWidgetDrop(resultCode,appWidgetId);
    return;
  }
  if (resultCode == RESULT_OK && mPendingAddInfo.container != ItemInfo.NO_ID) {
    final PendingAddArguments args=new PendingAddArguments();
    args.requestCode=requestCode;
    args.intent=data;
    args.container=mPendingAddInfo.container;
    args.screen=mPendingAddInfo.screen;
    args.cellX=mPendingAddInfo.cellX;
    args.cellY=mPendingAddInfo.cellY;
    if (isWorkspaceLocked()) {
      sPendingAddList.add(args);
    }
 else {
      delayExitSpringLoadedMode=completeAdd(args);
    }
  }
  mDragLayer.clearAnimatedView();
  exitSpringLoadedDragModeDelayed((resultCode != RESULT_CANCELED),delayExitSpringLoadedMode,null);
}
