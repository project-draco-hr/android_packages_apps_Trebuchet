{
  AppWidgetProviderInfo appWidgetInfo=mAppWidgetManager.getAppWidgetInfo(appWidgetId);
  CellLayout layout=(CellLayout)mWorkspace.getChildAt(cellInfo.screen);
  int[] spans=layout.rectToCell(appWidgetInfo.minWidth,appWidgetInfo.minHeight,null);
  final int[] xy=mCellCoordinates;
  final int[] xyTouch=null;
  boolean findNearestVacantAreaFailed=false;
  if (xyTouch != null) {
    CellLayout screen=(CellLayout)mWorkspace.getChildAt(cellInfo.screen);
    int[] result=screen.findNearestVacantArea(mAddItemCoordinates[0],mAddItemCoordinates[1],spans[0],spans[1],cellInfo,xy);
    findNearestVacantAreaFailed=(result == null);
  }
  if (findNearestVacantAreaFailed || (xyTouch == null && !findSlot(cellInfo,xy,spans[0],spans[1]))) {
    if (appWidgetId != -1)     mAppWidgetHost.deleteAppWidgetId(appWidgetId);
    return;
  }
  LauncherAppWidgetInfo launcherInfo=new LauncherAppWidgetInfo(appWidgetId);
  launcherInfo.spanX=spans[0];
  launcherInfo.spanY=spans[1];
  LauncherModel.addItemToDatabase(this,launcherInfo,LauncherSettings.Favorites.CONTAINER_DESKTOP,cellInfo.screen,xy[0],xy[1],false);
  if (!mRestoring) {
    mDesktopItems.add(launcherInfo);
    launcherInfo.hostView=mAppWidgetHost.createView(this,appWidgetId,appWidgetInfo);
    launcherInfo.hostView.setAppWidget(appWidgetId,appWidgetInfo);
    launcherInfo.hostView.setTag(launcherInfo);
    mWorkspace.addInScreen(launcherInfo.hostView,cellInfo.screen,xy[0],xy[1],launcherInfo.spanX,launcherInfo.spanY,isWorkspaceLocked());
  }
}
