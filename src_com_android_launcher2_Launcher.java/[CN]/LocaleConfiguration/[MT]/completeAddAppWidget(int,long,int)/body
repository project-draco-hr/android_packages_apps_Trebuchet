{
  AppWidgetProviderInfo appWidgetInfo=mAppWidgetManager.getAppWidgetInfo(appWidgetId);
  CellLayout layout=getCellLayout(container,screen);
  Padding padding=getPaddingForWidget(appWidgetInfo);
  int requiredWidth=appWidgetInfo.minWidth + padding.left + padding.right;
  int requiredHeight=appWidgetInfo.minHeight + padding.top + padding.bottom;
  int[] spanXY=layout.rectToCell(requiredWidth,requiredHeight,null);
  int[] cellXY=mTmpAddItemCellCoordinates;
  int[] touchXY=mPendingAddInfo.dropPos;
  boolean foundCellSpan=false;
  if (mPendingAddInfo.cellX >= 0 && mPendingAddInfo.cellY >= 0) {
    cellXY[0]=mPendingAddInfo.cellX;
    cellXY[1]=mPendingAddInfo.cellY;
    foundCellSpan=true;
  }
 else   if (touchXY != null) {
    int[] result=layout.findNearestVacantArea(touchXY[0],touchXY[1],spanXY[0],spanXY[1],cellXY);
    foundCellSpan=(result != null);
  }
 else {
    foundCellSpan=layout.findCellForSpan(cellXY,spanXY[0],spanXY[1]);
  }
  if (!foundCellSpan) {
    if (appWidgetId != -1) {
      new Thread("deleteAppWidgetId"){
        public void run(){
          mAppWidgetHost.deleteAppWidgetId(appWidgetId);
        }
      }
.start();
    }
    showOutOfSpaceMessage();
    return;
  }
  LauncherAppWidgetInfo launcherInfo=new LauncherAppWidgetInfo(appWidgetId);
  launcherInfo.spanX=spanXY[0];
  launcherInfo.spanY=spanXY[1];
  LauncherModel.addItemToDatabase(this,launcherInfo,container,screen,cellXY[0],cellXY[1],false);
  if (!mRestoring) {
    launcherInfo.hostView=mAppWidgetHost.createView(this,appWidgetId,appWidgetInfo);
    launcherInfo.hostView.setAppWidget(appWidgetId,appWidgetInfo);
    launcherInfo.hostView.setTag(launcherInfo);
    mWorkspace.addInScreen(launcherInfo.hostView,container,screen,cellXY[0],cellXY[1],launcherInfo.spanX,launcherInfo.spanY,isWorkspaceLocked());
    addWidgetToAutoAdvanceIfNeeded(launcherInfo.hostView,appWidgetInfo);
  }
}
