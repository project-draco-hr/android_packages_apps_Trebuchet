{
  final Resources res=getResources();
  final int duration=res.getInteger(R.integer.config_allAppsZoomInTime);
  final float scale=(float)res.getInteger(R.integer.config_allAppsZoomScaleFactor);
  final int height=toView.getHeight();
  final int startDelay=res.getInteger(R.integer.config_workspaceShrinkTime) - duration;
  Interpolator interp=new DecelerateInterpolator();
  toView.setPivotX(toView.getWidth() / 2.0f);
  final int margin=200;
  if (above) {
    toView.setPivotY(height + ((toView.getTop() + height) / scale) + margin);
  }
 else {
    toView.setPivotY(0.0f - (toView.getTop() / scale) - margin);
  }
  Animator scaleXAnim=new PropertyAnimator(duration,toView,"scaleX",scale,1.0f);
  scaleXAnim.setInterpolator(interp);
  scaleXAnim.addListener(new AnimatableListenerAdapter(){
    public void onAnimationStart(    Animatable animation){
      toView.setTranslationX(0.0f);
      toView.setTranslationY(0.0f);
      toView.setVisibility(View.VISIBLE);
    }
  }
);
  Animator scaleYAnim=new PropertyAnimator(duration,toView,"scaleY",scale,1.0f);
  scaleYAnim.setInterpolator(interp);
  Sequencer s=new Sequencer();
  s.playTogether(scaleXAnim,scaleYAnim);
  s.play(scaleXAnim).after(startDelay);
  s.start();
}
