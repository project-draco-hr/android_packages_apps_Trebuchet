{
  super.onCreate(savedInstanceState);
  if (LauncherApplication.isInPlaceRotationEnabled()) {
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
    this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
  }
  LauncherApplication app=((LauncherApplication)getApplication());
  mModel=app.setLauncher(this);
  mIconCache=app.getIconCache();
  mDragController=new DragController(this);
  mInflater=getLayoutInflater();
  mAppWidgetManager=AppWidgetManager.getInstance(this);
  mAppWidgetHost=new LauncherAppWidgetHost(this,APPWIDGET_HOST_ID);
  mAppWidgetHost.startListening();
  if (PROFILE_STARTUP) {
    android.os.Debug.startMethodTracing(Environment.getExternalStorageDirectory() + "/launcher");
  }
  loadHotseats();
  checkForLocaleChange();
  setContentView(R.layout.launcher);
  mHomeCustomizationDrawer=(TabHost)findViewById(R.id.customization_drawer);
  if (mHomeCustomizationDrawer != null) {
    mHomeCustomizationDrawer.setup();
    mCustomizePagedView=(CustomizePagedView)mInflater.inflate(R.layout.customization_drawer_tab_contents,mHomeCustomizationDrawer,false);
    TabContentFactory contentFactory=new TabContentFactory(){
      public View createTabContent(      String tag){
        return mCustomizePagedView;
      }
    }
;
    TextView tabView;
    TabWidget tabWidget=(TabWidget)mHomeCustomizationDrawer.findViewById(com.android.internal.R.id.tabs);
    tabView=(TextView)mInflater.inflate(R.layout.tab_widget_indicator,tabWidget,false);
    tabView.setText(getString(R.string.widgets_tab_label));
    mHomeCustomizationDrawer.addTab(mHomeCustomizationDrawer.newTabSpec(WIDGETS_TAG).setIndicator(tabView).setContent(contentFactory));
    tabView=(TextView)mInflater.inflate(R.layout.tab_widget_indicator,tabWidget,false);
    tabView.setText(getString(R.string.applications_tab_label));
    mHomeCustomizationDrawer.addTab(mHomeCustomizationDrawer.newTabSpec(APPLICATIONS_TAG).setIndicator(tabView).setContent(contentFactory));
    tabView=(TextView)mInflater.inflate(R.layout.tab_widget_indicator,tabWidget,false);
    tabView.setText(getString(R.string.wallpapers_tab_label));
    mHomeCustomizationDrawer.addTab(mHomeCustomizationDrawer.newTabSpec(WALLPAPERS_TAG).setIndicator(tabView).setContent(contentFactory));
    tabView=(TextView)mInflater.inflate(R.layout.tab_widget_indicator,tabWidget,false);
    tabView.setText(getString(R.string.shortcuts_tab_label));
    mHomeCustomizationDrawer.addTab(mHomeCustomizationDrawer.newTabSpec(SHORTCUTS_TAG).setIndicator(tabView).setContent(contentFactory));
    mHomeCustomizationDrawer.setOnTabChangedListener(new OnTabChangeListener(){
      public void onTabChanged(      String tabId){
        final CustomizePagedView.CustomizationType newType=getCustomizeFilterForTabTag(tabId);
        if (newType != mCustomizePagedView.getCustomizationFilter()) {
          final Resources res=getResources();
          final int duration=res.getInteger(R.integer.config_tabTransitionTime);
          final float alpha=mCustomizePagedView.getAlpha();
          ValueAnimator alphaAnim=ObjectAnimator.ofFloat(mCustomizePagedView,"alpha",alpha,0.0f);
          alphaAnim.setDuration(duration);
          alphaAnim.addListener(new AnimatorListenerAdapter(){
            @Override public void onAnimationEnd(            Animator animation){
              mCustomizePagedView.setCustomizationFilter(newType);
              final float alpha=mCustomizePagedView.getAlpha();
              ValueAnimator alphaAnim=ObjectAnimator.ofFloat(mCustomizePagedView,"alpha",alpha,1.0f);
              alphaAnim.setDuration(duration);
              alphaAnim.start();
            }
          }
);
          alphaAnim.start();
        }
      }
    }
);
  }
  setupViews();
  registerContentObservers();
  lockAllApps();
  mSavedState=savedInstanceState;
  restoreState(mSavedState);
  if (mCustomizePagedView != null) {
    mCustomizePagedView.update();
  }
  if (PROFILE_STARTUP) {
    android.os.Debug.stopMethodTracing();
  }
  if (!mRestoring) {
    mModel.startLoader(this,true);
  }
  mDefaultKeySsb=new SpannableStringBuilder();
  Selection.setSelection(mDefaultKeySsb,0);
  IntentFilter filter=new IntentFilter(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
  registerReceiver(mCloseSystemDialogsReceiver,filter);
  if (LauncherApplication.isScreenXLarge()) {
    if (sGlobalSearchIcon == null || sVoiceSearchIcon == null || sAppMarketIcon == null) {
      updateIconsAffectedByPackageManagerChanges();
    }
    if (sGlobalSearchIcon != null) {
      updateGlobalSearchIcon(sGlobalSearchIcon);
    }
    if (sVoiceSearchIcon != null) {
      updateVoiceSearchIcon(sVoiceSearchIcon);
    }
    if (sAppMarketIcon != null) {
      updateAppMarketIcon(sAppMarketIcon);
    }
  }
}
