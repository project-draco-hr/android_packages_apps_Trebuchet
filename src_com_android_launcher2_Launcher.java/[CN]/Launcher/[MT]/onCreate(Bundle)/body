{
  super.onCreate(savedInstanceState);
  if (LauncherApplication.isInPlaceRotationEnabled()) {
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
    this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
  }
  LauncherApplication app=((LauncherApplication)getApplication());
  mModel=app.setLauncher(this);
  mIconCache=app.getIconCache();
  mDragController=new DragController(this);
  mInflater=getLayoutInflater();
  mAppWidgetManager=AppWidgetManager.getInstance(this);
  mAppWidgetHost=new LauncherAppWidgetHost(this,APPWIDGET_HOST_ID);
  mAppWidgetHost.startListening();
  if (PROFILE_STARTUP) {
    android.os.Debug.startMethodTracing("/sdcard/launcher");
  }
  loadHotseats();
  checkForLocaleChange();
  setWallpaperDimension();
  setContentView(R.layout.launcher);
  mHomeCustomizationDrawer=(TabHost)findViewById(com.android.internal.R.id.tabhost);
  if (mHomeCustomizationDrawer != null) {
    mHomeCustomizationDrawer.setup();
    mCustomizePagedView=new CustomizePagedView(this);
    TabContentFactory contentFactory=new TabContentFactory(){
      public View createTabContent(      String tag){
        return mCustomizePagedView;
      }
    }
;
    String widgetsLabel=getString(R.string.widgets_tab_label);
    mHomeCustomizationDrawer.addTab(mHomeCustomizationDrawer.newTabSpec(WIDGETS_TAG).setIndicator(widgetsLabel).setContent(contentFactory));
    String foldersLabel=getString(R.string.folders_tab_label);
    mHomeCustomizationDrawer.addTab(mHomeCustomizationDrawer.newTabSpec(FOLDERS_TAG).setIndicator(foldersLabel).setContent(contentFactory));
    String shortcutsLabel=getString(R.string.shortcuts_tab_label);
    mHomeCustomizationDrawer.addTab(mHomeCustomizationDrawer.newTabSpec(SHORTCUTS_TAG).setIndicator(shortcutsLabel).setContent(contentFactory));
    String wallpapersLabel=getString(R.string.wallpapers_tab_label);
    mHomeCustomizationDrawer.addTab(mHomeCustomizationDrawer.newTabSpec(WALLPAPERS_TAG).setIndicator(wallpapersLabel).setContent(contentFactory));
    TabWidget tabWidget=mHomeCustomizationDrawer.getTabWidget();
    for (int i=0; i < tabWidget.getChildCount(); ++i) {
      RelativeLayout tab=(RelativeLayout)tabWidget.getChildTabViewAt(i);
      TextView text=(TextView)tab.getChildAt(1);
      text.setTextSize(20.0f);
      text.setPadding(20,0,20,0);
      text.setShadowLayer(1.0f,0.0f,1.0f,Color.BLACK);
      tab.setBackgroundDrawable(null);
    }
    mHomeCustomizationDrawer.setOnTabChangedListener(new OnTabChangeListener(){
      public void onTabChanged(      String tabId){
        final int duration=150;
        final float alpha=mCustomizePagedView.getAlpha();
        Animator alphaAnim=new PropertyAnimator(duration,mCustomizePagedView,"alpha",alpha,0.0f);
        alphaAnim.addListener(new AnimatableListenerAdapter(){
          public void onAnimationEnd(          Animatable animation){
            String tag=mHomeCustomizationDrawer.getCurrentTabTag();
            if (tag == WIDGETS_TAG) {
              mCustomizePagedView.setCustomizationFilter(CustomizePagedView.CustomizationType.WidgetCustomization);
            }
 else             if (tag == FOLDERS_TAG) {
              mCustomizePagedView.setCustomizationFilter(CustomizePagedView.CustomizationType.FolderCustomization);
            }
 else             if (tag == SHORTCUTS_TAG) {
              mCustomizePagedView.setCustomizationFilter(CustomizePagedView.CustomizationType.ShortcutCustomization);
            }
 else             if (tag == WALLPAPERS_TAG) {
              mCustomizePagedView.setCustomizationFilter(CustomizePagedView.CustomizationType.WallpaperCustomization);
            }
            final float alpha=mCustomizePagedView.getAlpha();
            Animator alphaAnim=new PropertyAnimator(duration,mCustomizePagedView,"alpha",alpha,1.0f);
            alphaAnim.start();
          }
        }
);
        alphaAnim.start();
      }
    }
);
    mHomeCustomizationDrawer.setCurrentTab(0);
  }
  setupViews();
  registerContentObservers();
  lockAllApps();
  mSavedState=savedInstanceState;
  restoreState(mSavedState);
  if (PROFILE_STARTUP) {
    android.os.Debug.stopMethodTracing();
  }
  if (!mRestoring) {
    mModel.startLoader(this,true);
  }
  mDefaultKeySsb=new SpannableStringBuilder();
  Selection.setSelection(mDefaultKeySsb,0);
  IntentFilter filter=new IntentFilter(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
  registerReceiver(mCloseSystemDialogsReceiver,filter);
}
