{
  final AppWidgetProviderInfo pInfo=info.info;
  final Bundle options=getDefaultOptionsForWidget(mLauncher,info);
  if (pInfo.configure != null) {
    info.bindOptions=options;
    return;
  }
  mWidgetCleanupState=WIDGET_PRELOAD_PENDING;
  mBindWidgetRunnable=new Runnable(){
    @Override public void run(){
      mWidgetLoadingId=mLauncher.getAppWidgetHost().allocateAppWidgetId();
      if (options == null) {
        if (AppWidgetManager.getInstance(mLauncher).bindAppWidgetIdIfAllowed(mWidgetLoadingId,info.componentName)) {
          mWidgetCleanupState=WIDGET_BOUND;
        }
      }
 else {
        if (AppWidgetManager.getInstance(mLauncher).bindAppWidgetIdIfAllowed(mWidgetLoadingId,info.componentName,options)) {
          mWidgetCleanupState=WIDGET_BOUND;
        }
      }
    }
  }
;
  post(mBindWidgetRunnable);
  mInflateWidgetRunnable=new Runnable(){
    @Override public void run(){
      if (mWidgetCleanupState != WIDGET_BOUND) {
        return;
      }
      AppWidgetHostView hostView=mLauncher.getAppWidgetHost().createView(getContext(),mWidgetLoadingId,pInfo);
      info.boundWidget=hostView;
      mWidgetCleanupState=WIDGET_INFLATED;
      hostView.setVisibility(INVISIBLE);
      int[] unScaledSize=mLauncher.getWorkspace().estimateItemSize(info.spanX,info.spanY,info,false);
      DragLayer.LayoutParams lp=new DragLayer.LayoutParams(unScaledSize[0],unScaledSize[1]);
      lp.x=lp.y=0;
      lp.customPosition=true;
      hostView.setLayoutParams(lp);
      mLauncher.getDragLayer().addView(hostView);
    }
  }
;
  post(mInflateWidgetRunnable);
}
