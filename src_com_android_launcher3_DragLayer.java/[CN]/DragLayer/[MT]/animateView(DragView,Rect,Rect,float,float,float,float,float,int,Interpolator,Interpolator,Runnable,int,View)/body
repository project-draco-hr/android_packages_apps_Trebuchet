{
  final float dist=(float)Math.sqrt(Math.pow(to.left - from.left,2) + Math.pow(to.top - from.top,2));
  final Resources res=getResources();
  final float maxDist=(float)res.getInteger(R.integer.config_dropAnimMaxDist);
  if (duration < 0) {
    duration=res.getInteger(R.integer.config_dropAnimMaxDuration);
    if (dist < maxDist) {
      duration*=mCubicEaseOutInterpolator.getInterpolation(dist / maxDist);
    }
    duration=Math.max(duration,res.getInteger(R.integer.config_dropAnimMinDuration));
  }
  TimeInterpolator interpolator=null;
  if (alphaInterpolator == null || motionInterpolator == null) {
    interpolator=mCubicEaseOutInterpolator;
  }
  final float initAlpha=view.getAlpha();
  final float dropViewScale=view.getScaleX();
  AnimatorUpdateListener updateCb=new AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      final float percent=(Float)animation.getAnimatedValue();
      final int width=view.getMeasuredWidth();
      final int height=view.getMeasuredHeight();
      float alphaPercent=alphaInterpolator == null ? percent : alphaInterpolator.getInterpolation(percent);
      float motionPercent=motionInterpolator == null ? percent : motionInterpolator.getInterpolation(percent);
      float initialScaleX=initScaleX * dropViewScale;
      float initialScaleY=initScaleY * dropViewScale;
      float scaleX=finalScaleX * percent + initialScaleX * (1 - percent);
      float scaleY=finalScaleY * percent + initialScaleY * (1 - percent);
      float alpha=finalAlpha * alphaPercent + initAlpha * (1 - alphaPercent);
      float fromLeft=from.left + (initialScaleX - 1f) * width / 2;
      float fromTop=from.top + (initialScaleY - 1f) * height / 2;
      int x=(int)(fromLeft + Math.round(((to.left - fromLeft) * motionPercent)));
      int y=(int)(fromTop + Math.round(((to.top - fromTop) * motionPercent)));
      int anchorAdjust=mAnchorView == null ? 0 : (int)(mAnchorView.getScaleX() * (mAnchorViewInitialScrollX - mAnchorView.getScrollX()));
      int xPos=x - mDropView.getScrollX() + anchorAdjust;
      int yPos=y - mDropView.getScrollY();
      mDropView.setTranslationX(xPos);
      mDropView.setTranslationY(yPos);
      mDropView.setScaleX(scaleX);
      mDropView.setScaleY(scaleY);
      mDropView.setAlpha(alpha);
    }
  }
;
  animateView(view,updateCb,duration,interpolator,onCompleteRunnable,animationEndStyle,anchorView);
}
