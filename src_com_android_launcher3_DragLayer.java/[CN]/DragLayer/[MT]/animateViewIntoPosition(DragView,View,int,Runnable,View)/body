{
  ShortcutAndWidgetContainer parentChildren=(ShortcutAndWidgetContainer)child.getParent();
  CellLayout.LayoutParams lp=(CellLayout.LayoutParams)child.getLayoutParams();
  parentChildren.measureChild(child);
  Rect r=new Rect();
  getViewRectRelativeToSelf(dragView,r);
  int coord[]=new int[2];
  float childScale=child.getScaleX();
  coord[0]=lp.x + (int)(child.getMeasuredWidth() * (1 - childScale) / 2);
  coord[1]=lp.y + (int)(child.getMeasuredHeight() * (1 - childScale) / 2);
  float scale=getDescendantCoordRelativeToSelf((View)child.getParent(),coord);
  scale*=childScale;
  int toX=coord[0];
  int toY=coord[1];
  float toScale=scale;
  if (child instanceof TextView) {
    TextView tv=(TextView)child;
    toScale=scale / dragView.getIntrinsicIconScaleFactor();
    toY+=Math.round(toScale * tv.getPaddingTop());
    toY-=dragView.getMeasuredHeight() * (1 - toScale) / 2;
    if (dragView.getDragVisualizeOffset() != null) {
      toY-=Math.round(toScale * dragView.getDragVisualizeOffset().y);
    }
    toX-=(dragView.getMeasuredWidth() - Math.round(scale * child.getMeasuredWidth())) / 2;
  }
 else   if (child instanceof FolderIcon) {
    toY+=Math.round(scale * (child.getPaddingTop() - dragView.getDragRegionTop()));
    toY-=scale * Workspace.DRAG_BITMAP_PADDING / 2;
    toY-=(1 - scale) * dragView.getMeasuredHeight() / 2;
    toX-=(dragView.getMeasuredWidth() - Math.round(scale * child.getMeasuredWidth())) / 2;
  }
 else {
    toY-=(Math.round(scale * (dragView.getHeight() - child.getMeasuredHeight()))) / 2;
    toX-=(Math.round(scale * (dragView.getMeasuredWidth() - child.getMeasuredWidth()))) / 2;
  }
  final int fromX=r.left;
  final int fromY=r.top;
  child.setVisibility(INVISIBLE);
  Runnable onCompleteRunnable=new Runnable(){
    public void run(){
      child.setVisibility(VISIBLE);
      if (onFinishAnimationRunnable != null) {
        onFinishAnimationRunnable.run();
      }
    }
  }
;
  animateViewIntoPosition(dragView,fromX,fromY,toX,toY,1,1,1,toScale,toScale,onCompleteRunnable,ANIMATION_END_DISAPPEAR,duration,anchorView);
}
