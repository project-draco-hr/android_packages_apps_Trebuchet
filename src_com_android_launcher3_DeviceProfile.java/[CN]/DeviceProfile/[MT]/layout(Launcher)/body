{
  FrameLayout.LayoutParams lp;
  boolean hasVerticalBarLayout=isVerticalBarLayout();
  final boolean isLayoutRtl=Utilities.isRtl(launcher.getResources());
  View searchBar=launcher.getSearchBar();
  lp=(FrameLayout.LayoutParams)searchBar.getLayoutParams();
  if (hasVerticalBarLayout) {
    lp.gravity=Gravity.LEFT;
    lp.width=searchBarSpaceHeightPx;
    LinearLayout targets=(LinearLayout)searchBar.findViewById(R.id.drag_target_bar);
    targets.setOrientation(LinearLayout.VERTICAL);
    FrameLayout.LayoutParams targetsLp=(FrameLayout.LayoutParams)targets.getLayoutParams();
    targetsLp.gravity=Gravity.TOP;
    targetsLp.height=LayoutParams.WRAP_CONTENT;
  }
 else {
    lp.gravity=Gravity.TOP;
    lp.height=searchBarSpaceHeightPx;
    LinearLayout targets=(LinearLayout)searchBar.findViewById(R.id.drag_target_bar);
    targets.getLayoutParams().width=searchBarSpaceWidthPx;
  }
  searchBar.setLayoutParams(lp);
  PagedView workspace=(PagedView)launcher.findViewById(R.id.workspace);
  lp=(FrameLayout.LayoutParams)workspace.getLayoutParams();
  lp.gravity=Gravity.CENTER;
  Rect padding=getWorkspacePadding(isLayoutRtl);
  workspace.setLayoutParams(lp);
  workspace.setPadding(padding.left,padding.top,padding.right,padding.bottom);
  workspace.setPageSpacing(getWorkspacePageSpacing(isLayoutRtl));
  View hotseat=launcher.findViewById(R.id.hotseat);
  lp=(FrameLayout.LayoutParams)hotseat.getLayoutParams();
  if (hasVerticalBarLayout) {
    lp.gravity=Gravity.END;
    lp.width=hotseatBarHeightPx;
    lp.height=LayoutParams.MATCH_PARENT;
    hotseat.findViewById(R.id.layout).setPadding(0,2 * edgeMarginPx,0,2 * edgeMarginPx);
  }
 else   if (isTablet) {
    lp.gravity=Gravity.BOTTOM;
    lp.width=LayoutParams.MATCH_PARENT;
    lp.height=hotseatBarHeightPx;
    hotseat.setPadding(edgeMarginPx + padding.left,0,edgeMarginPx + padding.right,2 * edgeMarginPx);
  }
 else {
    lp.gravity=Gravity.BOTTOM;
    lp.width=LayoutParams.MATCH_PARENT;
    lp.height=hotseatBarHeightPx;
    hotseat.findViewById(R.id.layout).setPadding(2 * edgeMarginPx,0,2 * edgeMarginPx,0);
  }
  hotseat.setLayoutParams(lp);
  View pageIndicator=launcher.findViewById(R.id.page_indicator);
  if (pageIndicator != null) {
    if (hasVerticalBarLayout) {
      pageIndicator.setVisibility(View.GONE);
    }
 else {
      lp=(FrameLayout.LayoutParams)pageIndicator.getLayoutParams();
      lp.gravity=Gravity.CENTER_HORIZONTAL | Gravity.BOTTOM;
      lp.width=LayoutParams.WRAP_CONTENT;
      lp.height=LayoutParams.WRAP_CONTENT;
      lp.bottomMargin=hotseatBarHeightPx;
      pageIndicator.setLayoutParams(lp);
    }
  }
  ViewGroup overviewMode=launcher.getOverviewPanel();
  if (overviewMode != null) {
    Rect r=getOverviewModeButtonBarRect();
    lp=(FrameLayout.LayoutParams)overviewMode.getLayoutParams();
    lp.gravity=Gravity.CENTER_HORIZONTAL | Gravity.BOTTOM;
    int visibleChildCount=getVisibleChildCount(overviewMode);
    int totalItemWidth=visibleChildCount * overviewModeBarItemWidthPx;
    int maxWidth=totalItemWidth + (visibleChildCount - 1) * overviewModeBarSpacerWidthPx;
    lp.width=Math.min(availableWidthPx,maxWidth);
    lp.height=r.height();
    overviewMode.setLayoutParams(lp);
    if (lp.width > totalItemWidth && visibleChildCount > 1) {
      int margin=(lp.width - totalItemWidth) / (visibleChildCount - 1);
      View lastChild=null;
      for (int i=0; i < visibleChildCount; i++) {
        if (lastChild != null) {
          MarginLayoutParams clp=(MarginLayoutParams)lastChild.getLayoutParams();
          if (isLayoutRtl) {
            clp.leftMargin=margin;
          }
 else {
            clp.rightMargin=margin;
          }
          lastChild.setLayoutParams(clp);
          lastChild=null;
        }
        View thisChild=overviewMode.getChildAt(i);
        if (thisChild.getVisibility() != View.GONE) {
          lastChild=thisChild;
        }
      }
    }
  }
}
