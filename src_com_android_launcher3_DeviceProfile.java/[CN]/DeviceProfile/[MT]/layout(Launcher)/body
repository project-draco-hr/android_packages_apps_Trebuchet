{
  FrameLayout.LayoutParams lp;
  Resources res=launcher.getResources();
  boolean hasVerticalBarLayout=isVerticalBarLayout();
  View searchBar=launcher.getSearchBar();
  lp=(FrameLayout.LayoutParams)searchBar.getLayoutParams();
  if (hasVerticalBarLayout) {
    lp.gravity=Gravity.TOP | Gravity.LEFT;
    lp.width=searchBarSpaceHeightPx;
    lp.height=LayoutParams.WRAP_CONTENT;
    searchBar.setPadding(0,2 * edgeMarginPx,0,2 * edgeMarginPx);
    LinearLayout targets=(LinearLayout)searchBar.findViewById(R.id.drag_target_bar);
    targets.setOrientation(LinearLayout.VERTICAL);
  }
 else {
    lp.gravity=Gravity.TOP | Gravity.CENTER_HORIZONTAL;
    lp.width=searchBarSpaceWidthPx;
    lp.height=searchBarSpaceHeightPx;
    searchBar.setPadding(2 * edgeMarginPx,getSearchBarTopOffset(),2 * edgeMarginPx,0);
  }
  searchBar.setLayoutParams(lp);
  View voiceButtonProxy=launcher.findViewById(R.id.voice_button_proxy);
  if (voiceButtonProxy != null) {
    if (hasVerticalBarLayout) {
    }
 else {
      lp=(FrameLayout.LayoutParams)voiceButtonProxy.getLayoutParams();
      lp.gravity=Gravity.TOP | Gravity.END;
      lp.width=(widthPx - searchBarSpaceWidthPx) / 2 + 2 * iconSizePx;
      lp.height=searchBarSpaceHeightPx;
    }
  }
  PagedView workspace=(PagedView)launcher.findViewById(R.id.workspace);
  lp=(FrameLayout.LayoutParams)workspace.getLayoutParams();
  lp.gravity=Gravity.CENTER;
  int orientation=isLandscape ? CellLayout.LANDSCAPE : CellLayout.PORTRAIT;
  Rect padding=getWorkspacePadding(orientation);
  workspace.setLayoutParams(lp);
  workspace.setPadding(padding.left,padding.top,padding.right,padding.bottom);
  workspace.setPageSpacing(getWorkspacePageSpacing(orientation));
  View hotseat=launcher.findViewById(R.id.hotseat);
  lp=(FrameLayout.LayoutParams)hotseat.getLayoutParams();
  if (hasVerticalBarLayout) {
    lp.gravity=Gravity.END;
    lp.width=hotseatBarHeightPx;
    lp.height=LayoutParams.MATCH_PARENT;
    hotseat.findViewById(R.id.layout).setPadding(0,2 * edgeMarginPx,0,2 * edgeMarginPx);
  }
 else   if (isTablet()) {
    lp.gravity=Gravity.BOTTOM;
    lp.width=LayoutParams.MATCH_PARENT;
    lp.height=hotseatBarHeightPx;
    hotseat.setPadding(edgeMarginPx + padding.left,0,edgeMarginPx + padding.right,2 * edgeMarginPx);
  }
 else {
    lp.gravity=Gravity.BOTTOM;
    lp.width=LayoutParams.MATCH_PARENT;
    lp.height=hotseatBarHeightPx;
    hotseat.findViewById(R.id.layout).setPadding(2 * edgeMarginPx,0,2 * edgeMarginPx,0);
  }
  hotseat.setLayoutParams(lp);
  View pageIndicator=launcher.findViewById(R.id.page_indicator);
  if (pageIndicator != null) {
    if (hasVerticalBarLayout) {
      pageIndicator.setVisibility(View.GONE);
    }
 else {
      lp=(FrameLayout.LayoutParams)pageIndicator.getLayoutParams();
      lp.gravity=Gravity.CENTER_HORIZONTAL | Gravity.BOTTOM;
      lp.width=LayoutParams.WRAP_CONTENT;
      lp.height=LayoutParams.WRAP_CONTENT;
      lp.bottomMargin=hotseatBarHeightPx;
      pageIndicator.setLayoutParams(lp);
    }
  }
  AppsCustomizeTabHost host=(AppsCustomizeTabHost)launcher.findViewById(R.id.apps_customize_pane);
  if (host != null) {
    int pageIndicatorHeight=(int)(pageIndicatorHeightPx * Math.min(1f,(allAppsIconSizePx / DynamicGrid.DEFAULT_ICON_SIZE_PX)));
    pageIndicator=host.findViewById(R.id.apps_customize_page_indicator);
    if (pageIndicator != null) {
      LinearLayout.LayoutParams lllp=(LinearLayout.LayoutParams)pageIndicator.getLayoutParams();
      lllp.width=LayoutParams.WRAP_CONTENT;
      lllp.height=pageIndicatorHeight;
      pageIndicator.setLayoutParams(lllp);
    }
    AppsCustomizePagedView pagedView=(AppsCustomizePagedView)host.findViewById(R.id.apps_customize_pane_content);
    padding=new Rect();
    if (pagedView != null) {
      int paddingLR=(availableWidthPx - (allAppsCellWidthPx * allAppsNumCols)) / (2 * (allAppsNumCols + 1));
      int paddingTB=(availableHeightPx - (allAppsCellHeightPx * allAppsNumRows)) / (2 * (allAppsNumRows + 1));
      paddingLR=Math.min(paddingLR,(int)((paddingLR + paddingTB) * 0.75f));
      paddingTB=Math.min(paddingTB,(int)((paddingLR + paddingTB) * 0.75f));
      int maxAllAppsWidth=(allAppsNumCols * (allAppsCellWidthPx + 2 * paddingLR));
      int gridPaddingLR=(availableWidthPx - maxAllAppsWidth) / 2;
      if ((isTablet() || isLandscape) && gridPaddingLR > (allAppsCellWidthPx / 4)) {
        padding.left=padding.right=gridPaddingLR;
      }
      padding.bottom=Math.max(0,pageIndicatorHeight - paddingTB);
      pagedView.setAllAppsPadding(padding);
      pagedView.setWidgetsPageIndicatorPadding(pageIndicatorHeight);
      int pagedViewPadding=res.getDimensionPixelSize(R.dimen.apps_customize_horizontal_padding);
      pagedView.setPadding(pagedViewPadding,0,pagedViewPadding,0);
    }
  }
  ViewGroup overviewMode=launcher.getOverviewPanel();
  if (overviewMode != null) {
    Rect r=getOverviewModeButtonBarRect();
    lp=(FrameLayout.LayoutParams)overviewMode.getLayoutParams();
    lp.gravity=Gravity.CENTER_HORIZONTAL | Gravity.BOTTOM;
    lp.width=Math.min(availableWidthPx,calculateOverviewModeWidth(getVisibleChildCount(overviewMode)));
    lp.height=r.height();
    overviewMode.setLayoutParams(lp);
  }
}
