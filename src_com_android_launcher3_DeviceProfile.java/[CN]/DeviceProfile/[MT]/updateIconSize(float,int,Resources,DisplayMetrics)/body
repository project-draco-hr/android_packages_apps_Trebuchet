{
  iconSizePx=(int)(DynamicGrid.pxFromDp(iconSize,dm) * scale);
  iconTextSizePx=(int)(DynamicGrid.pxFromSp(iconTextSize,dm) * scale);
  iconDrawablePaddingPx=drawablePadding;
  hotseatIconSizePx=(int)(DynamicGrid.pxFromDp(hotseatIconSize,dm) * scale);
  searchBarSpaceMaxWidthPx=resources.getDimensionPixelSize(R.dimen.dynamic_grid_search_bar_max_width);
  searchBarHeightPx=resources.getDimensionPixelSize(R.dimen.dynamic_grid_search_bar_height);
  searchBarSpaceWidthPx=Math.min(searchBarSpaceMaxWidthPx,widthPx);
  searchBarSpaceHeightPx=searchBarHeightPx + getSearchBarTopOffset();
  Paint textPaint=new Paint();
  textPaint.setTextSize(iconTextSizePx);
  FontMetrics fm=textPaint.getFontMetrics();
  cellWidthPx=iconSizePx;
  cellHeightPx=iconSizePx + iconDrawablePaddingPx + (int)Math.ceil(fm.bottom - fm.top);
  hotseatBarHeightPx=iconSizePx + 4 * edgeMarginPx;
  hotseatCellWidthPx=iconSizePx;
  hotseatCellHeightPx=iconSizePx;
  folderCellWidthPx=cellWidthPx + 3 * edgeMarginPx;
  folderCellHeightPx=cellHeightPx + edgeMarginPx;
  folderBackgroundOffset=-edgeMarginPx;
  folderIconSizePx=iconSizePx + 2 * -folderBackgroundOffset;
  Rect padding=getWorkspacePadding(isLandscape ? CellLayout.LANDSCAPE : CellLayout.PORTRAIT);
  int pageIndicatorOffset=resources.getDimensionPixelSize(R.dimen.apps_customize_page_indicator_offset);
  allAppsCellWidthPx=allAppsIconSizePx;
  allAppsCellHeightPx=allAppsIconSizePx + drawablePadding + iconTextSizePx;
  int maxLongEdgeCellCount=resources.getInteger(R.integer.config_dynamic_grid_max_long_edge_cell_count);
  int maxShortEdgeCellCount=resources.getInteger(R.integer.config_dynamic_grid_max_short_edge_cell_count);
  int minEdgeCellCount=resources.getInteger(R.integer.config_dynamic_grid_min_edge_cell_count);
  int maxRows=(isLandscape ? maxShortEdgeCellCount : maxLongEdgeCellCount);
  int maxCols=(isLandscape ? maxLongEdgeCellCount : maxShortEdgeCellCount);
  allAppsNumRows=(availableHeightPx - pageIndicatorHeightPx) / (allAppsCellHeightPx + allAppsCellPaddingPx);
  allAppsNumRows=Math.max(minEdgeCellCount,Math.min(maxRows,allAppsNumRows));
  allAppsNumCols=(availableWidthPx) / (allAppsCellWidthPx + allAppsCellPaddingPx);
  allAppsNumCols=Math.max(minEdgeCellCount,Math.min(maxCols,allAppsNumCols));
}
