{
  CellLayout.LayoutParams lp=(CellLayout.LayoutParams)host.getLayoutParams();
  CellLayout layout=(CellLayout)host.getParent().getParent();
  layout.markCellsAsUnoccupiedForView(host);
  if (action == R.string.action_increase_width) {
    if (((host.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL) && layout.isRegionVacant(info.cellX - 1,info.cellY,1,info.spanY)) || !layout.isRegionVacant(info.cellX + info.spanX,info.cellY,1,info.spanY)) {
      lp.cellX--;
      info.cellX--;
    }
    lp.cellHSpan++;
    info.spanX++;
  }
 else   if (action == R.string.action_decrease_width) {
    lp.cellHSpan--;
    info.spanX--;
  }
 else   if (action == R.string.action_increase_height) {
    if (!layout.isRegionVacant(info.cellX,info.cellY + info.spanY,info.spanX,1)) {
      lp.cellY--;
      info.cellY--;
    }
    lp.cellVSpan++;
    info.spanY++;
  }
 else   if (action == R.string.action_decrease_height) {
    lp.cellVSpan--;
    info.spanY--;
  }
  layout.markCellsAsOccupiedForView(host);
  Rect sizeRange=new Rect();
  AppWidgetResizeFrame.getWidgetSizeRanges(mLauncher,info.spanX,info.spanY,sizeRange);
  ((LauncherAppWidgetHostView)host).updateAppWidgetSize(null,sizeRange.left,sizeRange.top,sizeRange.right,sizeRange.bottom);
  host.requestLayout();
  LauncherModel.updateItemInDatabase(mLauncher,info);
  announceConfirmation(mLauncher.getString(R.string.widget_resized,info.spanX,info.spanY));
}
