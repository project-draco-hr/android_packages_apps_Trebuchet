{
  float weights=0;
  InvariantDeviceProfile p=points.get(0);
  if (dist(width,height,p.minWidthDps,p.minHeightDps) == 0) {
    return p;
  }
  InvariantDeviceProfile out=new InvariantDeviceProfile();
  for (int i=0; i < points.size() && i < KNEARESTNEIGHBOR; ++i) {
    p=new InvariantDeviceProfile(points.get(i));
    float w=weight(width,height,p.minWidthDps,p.minHeightDps,WEIGHT_POWER);
    weights+=w;
    out.add(p.multiply(w));
  }
  return out.multiply(1.0f / weights);
}
