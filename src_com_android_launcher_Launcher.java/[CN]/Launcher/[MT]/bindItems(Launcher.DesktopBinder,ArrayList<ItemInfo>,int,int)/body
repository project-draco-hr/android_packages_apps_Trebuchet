{
  final Workspace workspace=mWorkspace;
  final boolean desktopLocked=mDesktopLocked;
  final int end=Math.min(start + DesktopBinder.ITEMS_COUNT,count);
  int i=start;
  for (; i < end; i++) {
    final ItemInfo item=shortcuts.get(i);
switch (item.itemType) {
case LauncherSettings.Favorites.ITEM_TYPE_APPLICATION:
case LauncherSettings.Favorites.ITEM_TYPE_SHORTCUT:
      final View shortcut=createShortcut((ApplicationInfo)item);
    workspace.addInScreen(shortcut,item.screen,item.cellX,item.cellY,1,1,!desktopLocked);
  break;
case LauncherSettings.Favorites.ITEM_TYPE_USER_FOLDER:
final FolderIcon newFolder=FolderIcon.fromXml(R.layout.folder_icon,this,(ViewGroup)workspace.getChildAt(workspace.getCurrentScreen()),(UserFolderInfo)item);
workspace.addInScreen(newFolder,item.screen,item.cellX,item.cellY,1,1,!desktopLocked);
break;
case LauncherSettings.Favorites.ITEM_TYPE_LIVE_FOLDER:
final FolderIcon newLiveFolder=LiveFolderIcon.fromXml(R.layout.live_folder_icon,this,(ViewGroup)workspace.getChildAt(workspace.getCurrentScreen()),(LiveFolderInfo)item);
workspace.addInScreen(newLiveFolder,item.screen,item.cellX,item.cellY,1,1,!desktopLocked);
break;
case LauncherSettings.Favorites.ITEM_TYPE_WIDGET_SEARCH:
final int screen=workspace.getCurrentScreen();
final View view=mInflater.inflate(R.layout.widget_search,(ViewGroup)workspace.getChildAt(screen),false);
final Widget widget=(Widget)item;
view.setTag(widget);
workspace.addWidget(view,widget,!desktopLocked);
break;
}
}
workspace.requestLayout();
if (end >= count) {
finishBindDesktopItems();
binder.startBindingAppWidgetsWhenIdle();
}
 else {
binder.obtainMessage(DesktopBinder.MESSAGE_BIND_ITEMS,i,count).sendToTarget();
}
}
