{
  super.onNewIntent(intent);
  if (Intent.ACTION_MAIN.equals(intent.getAction())) {
    getWindow().closeAllPanels();
    mIsNewIntent=true;
    try {
      dismissDialog(DIALOG_CREATE_SHORTCUT);
      mWorkspace.unlock();
    }
 catch (    Exception e) {
    }
    try {
      dismissDialog(DIALOG_RENAME_FOLDER);
      mWorkspace.unlock();
    }
 catch (    Exception e) {
    }
    if ((intent.getFlags() & Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT) != Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT) {
      final SharedPreferences preferences=getSharedPreferences(GesturesActivity.PREFERENCES_NAME,MODE_PRIVATE);
      final boolean homeKey=preferences.getBoolean(GesturesActivity.PREFERENCES_HOME_KEY,false);
      if (!homeKey) {
        if (!mWorkspace.isDefaultScreenShowing()) {
          mWorkspace.moveToDefaultScreen();
        }
        if (mGesturesWindow == null || mGesturesWindow.isShowing()) {
          hideGesturesPanel();
        }
      }
 else {
        if (mGesturesPanel != null && mDragLayer.getWindowVisibility() == View.VISIBLE && (mDragLayer.hasWindowFocus() || (mGesturesWindow != null && mGesturesWindow.isShowing()))) {
          SearchManager searchManager=(SearchManager)getSystemService(Context.SEARCH_SERVICE);
          if (!searchManager.isVisible()) {
            onHomeKeyPressed();
          }
        }
      }
      closeDrawer();
      final View v=getWindow().peekDecorView();
      if (v != null && v.getWindowToken() != null) {
        InputMethodManager imm=(InputMethodManager)getSystemService(INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(v.getWindowToken(),0);
      }
    }
 else {
      closeDrawer(false);
    }
  }
}
