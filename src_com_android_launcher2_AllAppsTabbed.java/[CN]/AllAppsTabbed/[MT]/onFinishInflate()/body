{
  try {
    mAllApps2D=(AllApps2D)findViewById(R.id.all_apps_2d);
    if (mAllApps2D == null)     throw new Resources.NotFoundException();
  }
 catch (  Resources.NotFoundException e) {
    Log.e(TAG,"Can't find necessary layout elements for AllAppsTabbed");
  }
  setup();
  TabContentFactory contentFactory=new TabContentFactory(){
    public View createTabContent(    String tag){
      return mAllApps2D;
    }
  }
;
  String label=mContext.getString(R.string.all_apps_tab_all);
  addTab(newTabSpec(TAG_ALL).setIndicator(label).setContent(contentFactory));
  label=mContext.getString(R.string.all_apps_tab_apps);
  addTab(newTabSpec(TAG_APPS).setIndicator(label).setContent(contentFactory));
  label=mContext.getString(R.string.all_apps_tab_games);
  addTab(newTabSpec(TAG_GAMES).setIndicator(label).setContent(contentFactory));
  label=mContext.getString(R.string.all_apps_tab_downloaded);
  addTab(newTabSpec(TAG_DOWNLOADED).setIndicator(label).setContent(contentFactory));
  setOnTabChangedListener(new OnTabChangeListener(){
    public void onTabChanged(    String tabId){
      String tag=getCurrentTabTag();
      if (tag == TAG_ALL) {
        mAllApps2D.filterApps(AllApps2D.AppType.ALL);
      }
 else       if (tag == TAG_APPS) {
        mAllApps2D.filterApps(AllApps2D.AppType.APP);
      }
 else       if (tag == TAG_GAMES) {
        mAllApps2D.filterApps(AllApps2D.AppType.GAME);
      }
 else       if (tag == TAG_DOWNLOADED) {
        mAllApps2D.filterApps(AllApps2D.AppType.DOWNLOADED);
      }
    }
  }
);
  setCurrentTab(0);
  setVisibility(INVISIBLE);
}
