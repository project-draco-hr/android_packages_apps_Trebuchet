{
  Runnable r=new Runnable(){
    public void run(){
      bindItems(shortcuts,start,end,forceAnimateIcons);
    }
  }
;
  if (waitUntilResume(r)) {
    return;
  }
  final AnimatorSet anim=LauncherAnimUtils.createAnimatorSet();
  final Collection<Animator> bounceAnims=new ArrayList<Animator>();
  final boolean animateIcons=forceAnimateIcons && canRunNewAppsAnimation();
  Workspace workspace=mWorkspace;
  long newShortcutsScreenId=-1;
  for (int i=start; i < end; i++) {
    final ItemInfo item=shortcuts.get(i);
    if (item.container == LauncherSettings.Favorites.CONTAINER_HOTSEAT && mHotseat == null) {
      continue;
    }
    final View view;
switch (item.itemType) {
case LauncherSettings.Favorites.ITEM_TYPE_APPLICATION:
case LauncherSettings.Favorites.ITEM_TYPE_SHORTCUT:
      ShortcutInfo info=(ShortcutInfo)item;
    view=createShortcut(info);
  if (item.container == LauncherSettings.Favorites.CONTAINER_DESKTOP) {
    CellLayout cl=mWorkspace.getScreenWithId(item.screenId);
    if (cl != null && cl.isOccupied(item.cellX,item.cellY)) {
      View v=cl.getChildAt(item.cellX,item.cellY);
      Object tag=v.getTag();
      String desc="Collision while binding workspace item: " + item + ". Collides with "+ tag;
      if (LauncherAppState.isDogfoodBuild()) {
        throw (new RuntimeException(desc));
      }
 else {
        Log.d(TAG,desc);
      }
    }
  }
break;
case LauncherSettings.Favorites.ITEM_TYPE_FOLDER:
view=FolderIcon.fromXml(R.layout.folder_icon,this,(ViewGroup)workspace.getChildAt(workspace.getCurrentPage()),(FolderInfo)item,mIconCache);
((FolderIcon)view).setTextVisible(!mHideIconLabels);
break;
default :
throw new RuntimeException("Invalid Item Type");
}
workspace.addInScreenFromBind(view,item.container,item.screenId,item.cellX,item.cellY,1,1);
if (animateIcons) {
view.setAlpha(0f);
view.setScaleX(0f);
view.setScaleY(0f);
bounceAnims.add(createNewAppBounceAnimation(view,i));
newShortcutsScreenId=item.screenId;
}
}
if (animateIcons) {
if (newShortcutsScreenId > -1) {
long currentScreenId=mWorkspace.getScreenIdForPageIndex(mWorkspace.getNextPage());
final int newScreenIndex=mWorkspace.getPageIndexForScreenId(newShortcutsScreenId);
final Runnable startBounceAnimRunnable=new Runnable(){
public void run(){
anim.playTogether(bounceAnims);
anim.start();
}
}
;
if (newShortcutsScreenId != currentScreenId) {
mWorkspace.postDelayed(new Runnable(){
public void run(){
if (mWorkspace != null) {
mWorkspace.snapToPage(newScreenIndex);
mWorkspace.postDelayed(startBounceAnimRunnable,NEW_APPS_ANIMATION_DELAY);
}
}
}
,NEW_APPS_PAGE_MOVE_DELAY);
}
 else {
mWorkspace.postDelayed(startBounceAnimRunnable,NEW_APPS_ANIMATION_DELAY);
}
}
}
workspace.requestLayout();
}
