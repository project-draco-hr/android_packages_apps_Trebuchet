{
  try {
    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    boolean useLaunchAnimation=(v != null) && !intent.hasExtra(INTENT_EXTRA_IGNORE_LAUNCH_ANIMATION);
    LauncherAppsCompat launcherApps=LauncherAppsCompat.getInstance(this);
    UserManagerCompat userManager=UserManagerCompat.getInstance(this);
    UserHandleCompat user=null;
    if (intent.hasExtra(AppInfo.EXTRA_PROFILE)) {
      long serialNumber=intent.getLongExtra(AppInfo.EXTRA_PROFILE,-1);
      user=userManager.getUserForSerialNumber(serialNumber);
    }
    Bundle optsBundle=null;
    if (useLaunchAnimation) {
      ActivityOptions opts=null;
      if (Utilities.ATLEAST_MARSHMALLOW) {
        int left=0, top=0;
        int width=v.getMeasuredWidth(), height=v.getMeasuredHeight();
        if (v instanceof TextView) {
          Drawable icon=Workspace.getTextViewIcon((TextView)v);
          if (icon != null) {
            Rect bounds=icon.getBounds();
            left=(width - bounds.width()) / 2;
            top=v.getPaddingTop();
            width=bounds.width();
            height=bounds.height();
          }
        }
        opts=ActivityOptions.makeClipRevealAnimation(v,left,top,width,height);
      }
 else       if (!Utilities.ATLEAST_LOLLIPOP) {
        opts=ActivityOptions.makeScaleUpAnimation(v,0,0,v.getMeasuredWidth(),v.getMeasuredHeight());
      }
 else       if (Utilities.ATLEAST_LOLLIPOP_MR1) {
        opts=ActivityOptions.makeCustomAnimation(this,R.anim.task_open_enter,R.anim.no_anim);
      }
      optsBundle=opts != null ? opts.toBundle() : null;
    }
    if (user == null || user.equals(UserHandleCompat.myUserHandle())) {
      startActivity(intent,optsBundle);
    }
 else {
      launcherApps.startActivityForProfile(intent.getComponent(),user,intent.getSourceBounds(),optsBundle);
    }
    return true;
  }
 catch (  SecurityException|NullPointerException e) {
    if (Utilities.ATLEAST_MARSHMALLOW && tag instanceof ItemInfo) {
      if (intent.getComponent() == null && Intent.ACTION_CALL.equals(intent.getAction()) && checkSelfPermission(Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {
        sPendingAddItem=preparePendingAddArgs(REQUEST_PERMISSION_CALL_PHONE,intent,0,(ItemInfo)tag);
        requestPermissions(new String[]{Manifest.permission.CALL_PHONE},REQUEST_PERMISSION_CALL_PHONE);
        return false;
      }
    }
    Toast.makeText(this,R.string.activity_not_found,Toast.LENGTH_SHORT).show();
    Log.e(TAG,"Launcher does not have the permission to launch " + intent + ". Make sure to create a MAIN intent-filter for the corresponding activity "+ "or use the exported attribute for this activity. "+ "tag="+ tag+ " intent="+ intent,e);
  }
  return false;
}
