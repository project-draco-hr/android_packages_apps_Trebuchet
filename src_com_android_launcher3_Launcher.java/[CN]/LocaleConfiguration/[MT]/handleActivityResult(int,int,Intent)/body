{
  setWaitingForResult(false);
  final int pendingAddWidgetId=mPendingAddWidgetId;
  mPendingAddWidgetId=-1;
  Runnable exitSpringLoaded=new Runnable(){
    @Override public void run(){
      exitSpringLoadedDragModeDelayed((resultCode != RESULT_CANCELED),EXIT_SPRINGLOADED_MODE_SHORT_TIMEOUT,null);
    }
  }
;
  if (requestCode == REQUEST_BIND_APPWIDGET) {
    final int appWidgetId=data != null ? data.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID,-1) : -1;
    if (resultCode == RESULT_CANCELED) {
      completeTwoStageWidgetDrop(RESULT_CANCELED,appWidgetId);
      mWorkspace.removeExtraEmptyScreenDelayed(true,exitSpringLoaded,ON_ACTIVITY_RESULT_ANIMATION_DELAY,false);
    }
 else     if (resultCode == RESULT_OK) {
      addAppWidgetImpl(appWidgetId,mPendingAddInfo,null,mPendingAddWidgetInfo,ON_ACTIVITY_RESULT_ANIMATION_DELAY);
    }
    return;
  }
 else   if (requestCode == REQUEST_PICK_WALLPAPER) {
    if (resultCode == RESULT_OK && mWorkspace.isInOverviewMode()) {
      showWorkspace(false);
    }
    return;
  }
  boolean isWidgetDrop=(requestCode == REQUEST_PICK_APPWIDGET || requestCode == REQUEST_CREATE_APPWIDGET || requestCode == REQUEST_CREATE_SHORTCUT);
  final boolean workspaceLocked=isWorkspaceLocked();
  if (isWidgetDrop) {
    final int appWidgetId;
    int widgetId=data != null ? data.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID,-1) : -1;
    if (widgetId < 0) {
      appWidgetId=pendingAddWidgetId;
    }
 else {
      appWidgetId=widgetId;
    }
    final int result;
    if (appWidgetId < 0 || resultCode == RESULT_CANCELED) {
      Log.e(TAG,"Error: appWidgetId (EXTRA_APPWIDGET_ID) was not " + "returned from the widget configuration activity.");
      result=RESULT_CANCELED;
      completeTwoStageWidgetDrop(result,appWidgetId);
      final Runnable onComplete=new Runnable(){
        @Override public void run(){
          exitSpringLoadedDragModeDelayed(false,0,null);
        }
      }
;
      if (workspaceLocked) {
        mWorkspace.postDelayed(onComplete,ON_ACTIVITY_RESULT_ANIMATION_DELAY);
      }
 else {
        mWorkspace.removeExtraEmptyScreenDelayed(true,onComplete,ON_ACTIVITY_RESULT_ANIMATION_DELAY,false);
      }
    }
 else {
      if (!workspaceLocked) {
        if (mPendingAddInfo.container == LauncherSettings.Favorites.CONTAINER_DESKTOP) {
          mPendingAddInfo.screenId=ensurePendingDropLayoutExists(mPendingAddInfo.screenId);
        }
        final CellLayout dropLayout=mWorkspace.getScreenWithId(mPendingAddInfo.screenId);
        dropLayout.setDropPending(true);
        final Runnable onComplete=new Runnable(){
          @Override public void run(){
            completeTwoStageWidgetDrop(resultCode,appWidgetId);
            dropLayout.setDropPending(false);
          }
        }
;
        mWorkspace.removeExtraEmptyScreenDelayed(true,onComplete,ON_ACTIVITY_RESULT_ANIMATION_DELAY,false);
      }
 else {
        PendingAddArguments args=preparePendingAddArgs(requestCode,data,appWidgetId,mPendingAddInfo);
        sPendingAddItem=args;
      }
    }
    return;
  }
  if (requestCode == REQUEST_RECONFIGURE_APPWIDGET) {
    if (resultCode == RESULT_OK) {
      PendingAddArguments args=preparePendingAddArgs(requestCode,data,pendingAddWidgetId,mPendingAddInfo);
      if (workspaceLocked) {
        sPendingAddItem=args;
      }
 else {
        completeAdd(args);
      }
    }
    return;
  }
  if (resultCode == RESULT_OK && mPendingAddInfo.container != ItemInfo.NO_ID) {
    final PendingAddArguments args=preparePendingAddArgs(requestCode,data,-1,mPendingAddInfo);
    if (isWorkspaceLocked()) {
      sPendingAddItem=args;
    }
 else {
      completeAdd(args);
      mWorkspace.removeExtraEmptyScreenDelayed(true,exitSpringLoaded,ON_ACTIVITY_RESULT_ANIMATION_DELAY,false);
    }
  }
 else   if (resultCode == RESULT_CANCELED) {
    mWorkspace.removeExtraEmptyScreenDelayed(true,exitSpringLoaded,ON_ACTIVITY_RESULT_ANIMATION_DELAY,false);
  }
  mDragLayer.clearAnimatedView();
}
