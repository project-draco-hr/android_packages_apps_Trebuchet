{
  final DragController dragController=mDragController;
  mLauncherView=findViewById(R.id.launcher);
  mFocusHandler=(FocusIndicatorView)findViewById(R.id.focus_indicator);
  mDragLayer=(DragLayer)findViewById(R.id.drag_layer);
  mWorkspace=(Workspace)mDragLayer.findViewById(R.id.workspace);
  mWorkspace.setPageSwitchListener(this);
  mPageIndicators=mDragLayer.findViewById(R.id.page_indicator);
  mLauncherView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION);
  mWorkspaceBackgroundDrawable=getResources().getDrawable(R.drawable.workspace_bg);
  mDragLayer.setup(this,dragController);
  mHotseat=(Hotseat)findViewById(R.id.hotseat);
  if (mHotseat != null) {
    mHotseat.setup(this);
    mHotseat.setOnLongClickListener(this);
  }
  mOverviewPanel=(ViewGroup)findViewById(R.id.overview_panel);
  View widgetButton=findViewById(R.id.widget_button);
  widgetButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View arg0){
      if (!mWorkspace.isSwitchingState()) {
        onClickAddWidgetButton(arg0);
      }
    }
  }
);
  widgetButton.setOnTouchListener(getHapticFeedbackTouchListener());
  View wallpaperButton=findViewById(R.id.wallpaper_button);
  wallpaperButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View arg0){
      if (!mWorkspace.isSwitchingState()) {
        onClickWallpaperPicker(arg0);
      }
    }
  }
);
  wallpaperButton.setOnTouchListener(getHapticFeedbackTouchListener());
  View settingsButton=findViewById(R.id.settings_button);
  if (hasSettings()) {
    settingsButton.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View arg0){
        if (!mWorkspace.isSwitchingState()) {
          onClickSettingsButton(arg0);
        }
      }
    }
);
    settingsButton.setOnTouchListener(getHapticFeedbackTouchListener());
  }
 else {
    settingsButton.setVisibility(View.GONE);
    FrameLayout.LayoutParams lp=(FrameLayout.LayoutParams)widgetButton.getLayoutParams();
    lp.gravity=Gravity.END | Gravity.TOP;
    widgetButton.requestLayout();
  }
  mOverviewPanel.setAlpha(0f);
  mWorkspace.setHapticFeedbackEnabled(false);
  mWorkspace.setOnLongClickListener(this);
  mWorkspace.setup(dragController);
  dragController.addDragListener(mWorkspace);
  mSearchDropTargetBar=(SearchDropTargetBar)mDragLayer.findViewById(R.id.search_drop_target_bar);
  mAppsCustomizeTabHost=(AppsCustomizeTabHost)findViewById(R.id.apps_customize_pane);
  mAppsCustomizeContent=(AppsCustomizePagedView)mAppsCustomizeTabHost.findViewById(R.id.apps_customize_pane_content);
  mAppsCustomizeContent.setup(this,dragController);
  dragController.setDragScoller(mWorkspace);
  dragController.setScrollView(mDragLayer);
  dragController.setMoveTarget(mWorkspace);
  dragController.addDropTarget(mWorkspace);
  if (mSearchDropTargetBar != null) {
    mSearchDropTargetBar.setup(this,dragController);
  }
  if (getResources().getBoolean(R.bool.debug_memory_enabled)) {
    Log.v(TAG,"adding WeightWatcher");
    mWeightWatcher=new WeightWatcher(this);
    mWeightWatcher.setAlpha(0.5f);
    ((FrameLayout)mLauncherView).addView(mWeightWatcher,new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.WRAP_CONTENT,Gravity.BOTTOM));
    boolean show=shouldShowWeightWatcher();
    mWeightWatcher.setVisibility(show ? View.VISIBLE : View.GONE);
  }
}
