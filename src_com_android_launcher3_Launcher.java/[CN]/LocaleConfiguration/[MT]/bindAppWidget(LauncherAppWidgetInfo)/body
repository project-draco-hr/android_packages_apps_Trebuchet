{
  Runnable r=new Runnable(){
    public void run(){
      bindAppWidget(item);
    }
  }
;
  if (waitUntilResume(r)) {
    return;
  }
  final long start=DEBUG_WIDGETS ? SystemClock.uptimeMillis() : 0;
  if (DEBUG_WIDGETS) {
    Log.d(TAG,"bindAppWidget: " + item);
  }
  final Workspace workspace=mWorkspace;
  final AppWidgetProviderInfo appWidgetInfo;
  if (item.restoreStatus == LauncherAppWidgetInfo.RESTORE_COMPLETED) {
    final int appWidgetId=item.appWidgetId;
    appWidgetInfo=mAppWidgetManager.getAppWidgetInfo(appWidgetId);
    if (DEBUG_WIDGETS) {
      Log.d(TAG,"bindAppWidget: id=" + item.appWidgetId + " belongs to component "+ appWidgetInfo.provider);
    }
    item.hostView=mAppWidgetHost.createView(this,appWidgetId,appWidgetInfo);
  }
 else {
    appWidgetInfo=null;
    item.hostView=new LauncherAppWidgetHostView(this,false);
    item.hostView.updateAppWidget(null);
  }
  item.hostView.setTag(item);
  item.onBindAppWidget(this);
  workspace.addInScreen(item.hostView,item.container,item.screenId,item.cellX,item.cellY,item.spanX,item.spanY,false);
  addWidgetToAutoAdvanceIfNeeded(item.hostView,appWidgetInfo);
  workspace.requestLayout();
  if (DEBUG_WIDGETS) {
    Log.d(TAG,"bound widget id=" + item.appWidgetId + " in "+ (SystemClock.uptimeMillis() - start)+ "ms");
  }
}
