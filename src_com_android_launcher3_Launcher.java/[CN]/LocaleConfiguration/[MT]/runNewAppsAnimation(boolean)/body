{
  AnimatorSet anim=LauncherAnimUtils.createAnimatorSet();
  Collection<Animator> bounceAnims=new ArrayList<Animator>();
  Collections.sort(mNewShortcutAnimateViews,new Comparator<View>(){
    @Override public int compare(    View a,    View b){
      CellLayout.LayoutParams alp=(CellLayout.LayoutParams)a.getLayoutParams();
      CellLayout.LayoutParams blp=(CellLayout.LayoutParams)b.getLayoutParams();
      int cellCountX=LauncherModel.getCellCountX();
      return (alp.cellY * cellCountX + alp.cellX) - (blp.cellY * cellCountX + blp.cellX);
    }
  }
);
  if (immediate) {
    for (    View v : mNewShortcutAnimateViews) {
      v.setAlpha(1f);
      v.setScaleX(1f);
      v.setScaleY(1f);
    }
  }
 else {
    for (int i=0; i < mNewShortcutAnimateViews.size(); ++i) {
      View v=mNewShortcutAnimateViews.get(i);
      bounceAnims.add(createNewAppBounceAnimation(v,i));
    }
    anim.playTogether(bounceAnims);
    anim.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator animation){
        if (mWorkspace != null) {
          mWorkspace.postDelayed(mBuildLayersRunnable,500);
        }
      }
    }
);
    anim.start();
  }
  mNewShortcutAnimateScreenId=-1;
  mNewShortcutAnimateViews.clear();
  new Thread("clearNewAppsThread"){
    public void run(){
      mSharedPrefs.edit().putInt(InstallShortcutReceiver.NEW_APPS_PAGE_KEY,-1).putStringSet(InstallShortcutReceiver.NEW_APPS_LIST_KEY,null).commit();
    }
  }
.start();
}
