{
  long startTime=0;
  if (DEBUG_RESUME_TIME) {
    startTime=System.currentTimeMillis();
  }
  super.onNewIntent(intent);
  if (Intent.ACTION_MAIN.equals(intent.getAction())) {
    closeSystemDialogs();
    final boolean alreadyOnHome=((intent.getFlags() & Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT) != Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);
    Runnable processIntent=new Runnable(){
      public void run(){
        if (mWorkspace == null) {
          return;
        }
        Folder openFolder=mWorkspace.getOpenFolder();
        mWorkspace.exitWidgetResizeMode();
        if (alreadyOnHome && mState == State.WORKSPACE && !mWorkspace.isTouchActive() && openFolder == null) {
          mWorkspace.moveToDefaultScreen(true);
        }
        closeFolder();
        exitSpringLoadedDragMode();
        if (alreadyOnHome) {
          showWorkspaceAndExitOverviewMode(true);
        }
 else {
          mOnResumeState=State.WORKSPACE;
        }
        final View v=getWindow().peekDecorView();
        if (v != null && v.getWindowToken() != null) {
          InputMethodManager imm=(InputMethodManager)getSystemService(INPUT_METHOD_SERVICE);
          imm.hideSoftInputFromWindow(v.getWindowToken(),0);
        }
        if (!alreadyOnHome && mAppsCustomizeTabHost != null) {
          mAppsCustomizeTabHost.reset();
        }
      }
    }
;
    if (alreadyOnHome && !mWorkspace.hasWindowFocus()) {
      mWorkspace.postDelayed(processIntent,350);
    }
 else {
      processIntent.run();
    }
  }
  if (DEBUG_RESUME_TIME) {
    Log.d(TAG,"Time spent in onNewIntent: " + (System.currentTimeMillis() - startTime));
  }
}
