{
  if (waitUntilResume(new Runnable(){
    public void run(){
      bindItems(shortcuts,start,end,forceAnimateIcons);
    }
  }
)) {
    return;
  }
  Set<String> newApps=new HashSet<String>();
  newApps=mSharedPrefs.getStringSet(InstallShortcutReceiver.NEW_APPS_LIST_KEY,newApps);
  final AnimatorSet anim=LauncherAnimUtils.createAnimatorSet();
  final Collection<Animator> bounceAnims=new ArrayList<Animator>();
  Workspace workspace=mWorkspace;
  for (int i=start; i < end; i++) {
    final ItemInfo item=shortcuts.get(i);
    if (item.container == LauncherSettings.Favorites.CONTAINER_HOTSEAT && mHotseat == null) {
      continue;
    }
switch (item.itemType) {
case LauncherSettings.Favorites.ITEM_TYPE_APPLICATION:
case LauncherSettings.Favorites.ITEM_TYPE_SHORTCUT:
      ShortcutInfo info=(ShortcutInfo)item;
    String uri=info.intent.toUri(0).toString();
  View shortcut=createShortcut(info);
if (item.container == LauncherSettings.Favorites.CONTAINER_DESKTOP) {
  CellLayout cl=mWorkspace.getScreenWithId(item.screenId);
  if (cl != null && cl.isOccupied(item.cellX,item.cellY)) {
    throw new RuntimeException("OCCUPIED");
  }
}
workspace.addInScreenFromBind(shortcut,item.container,item.screenId,item.cellX,item.cellY,1,1);
boolean animateIconUp=false;
synchronized (newApps) {
if (newApps.contains(uri)) {
animateIconUp=newApps.remove(uri);
}
}
if (forceAnimateIcons) {
shortcut.setAlpha(0f);
shortcut.setScaleX(0f);
shortcut.setScaleY(0f);
bounceAnims.add(createNewAppBounceAnimation(shortcut,i));
}
 else if (animateIconUp) {
shortcut.setAlpha(0f);
shortcut.setScaleX(0f);
shortcut.setScaleY(0f);
mNewShortcutAnimateScreenId=item.screenId;
if (!mNewShortcutAnimateViews.contains(shortcut)) {
mNewShortcutAnimateViews.add(shortcut);
}
}
break;
case LauncherSettings.Favorites.ITEM_TYPE_FOLDER:
FolderIcon newFolder=FolderIcon.fromXml(R.layout.folder_icon,this,(ViewGroup)workspace.getChildAt(workspace.getCurrentPage()),(FolderInfo)item,mIconCache);
workspace.addInScreenFromBind(newFolder,item.container,item.screenId,item.cellX,item.cellY,1,1);
break;
}
}
if (forceAnimateIcons) {
mWorkspace.postDelayed(new Runnable(){
public void run(){
anim.playTogether(bounceAnims);
anim.start();
}
}
,NEW_APPS_ANIMATION_DELAY);
}
workspace.requestLayout();
}
