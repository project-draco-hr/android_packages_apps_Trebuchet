{
  final int widthMode=MeasureSpec.getMode(widthMeasureSpec);
  final int widthSize=MeasureSpec.getSize(widthMeasureSpec);
  final int heightMode=MeasureSpec.getMode(heightMeasureSpec);
  final int heightSize=MeasureSpec.getSize(heightMeasureSpec);
  if (widthMode != MeasureSpec.EXACTLY) {
    throw new IllegalStateException("Width must have an exact value or MATCH_PARENT");
  }
 else   if (heightMode != MeasureSpec.EXACTLY) {
    throw new IllegalStateException("Height must have an exact value or MATCH_PARENT");
  }
  int layoutHeight=heightSize - getPaddingTop() - getPaddingBottom();
  int panelHeight=mPanelHeight;
  final int childCount=getChildCount();
  if (childCount > 2) {
    Log.e(TAG,"onMeasure: More than two child views are not supported.");
  }
 else   if (getChildAt(1) != null && getChildAt(1).getVisibility() == GONE) {
    panelHeight=0;
  }
  mSlideableView=null;
  mCanSlide=false;
  for (int i=0; i < childCount; i++) {
    final View child=getChildAt(i);
    final LayoutParams lp=(LayoutParams)child.getLayoutParams();
    int height=layoutHeight;
    if (child.getVisibility() == GONE) {
      lp.dimWhenOffset=false;
      continue;
    }
    if (i == 1) {
      lp.slideable=true;
      lp.dimWhenOffset=true;
      mSlideableView=child;
      mCanSlide=true;
    }
 else {
      if (!mOverlayContent) {
        height-=panelHeight;
      }
      mMainView=child;
    }
    int childWidthSpec;
    if (lp.width == LayoutParams.WRAP_CONTENT) {
      childWidthSpec=MeasureSpec.makeMeasureSpec(widthSize,MeasureSpec.AT_MOST);
    }
 else     if (lp.width == LayoutParams.MATCH_PARENT) {
      childWidthSpec=MeasureSpec.makeMeasureSpec(widthSize,MeasureSpec.EXACTLY);
    }
 else {
      childWidthSpec=MeasureSpec.makeMeasureSpec(lp.width,MeasureSpec.EXACTLY);
    }
    int childHeightSpec;
    if (lp.height == LayoutParams.WRAP_CONTENT) {
      childHeightSpec=MeasureSpec.makeMeasureSpec(height,MeasureSpec.AT_MOST);
    }
 else     if (lp.height == LayoutParams.MATCH_PARENT) {
      childHeightSpec=MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY);
    }
 else {
      childHeightSpec=MeasureSpec.makeMeasureSpec(lp.height,MeasureSpec.EXACTLY);
    }
    child.measure(childWidthSpec,childHeightSpec);
  }
  setMeasuredDimension(widthSize,heightSize);
}
