{
  if (!mIsDataReady || getChildCount() == 0) {
    super.onMeasure(widthMeasureSpec,heightMeasureSpec);
    return;
  }
  int widthMode=MeasureSpec.getMode(widthMeasureSpec);
  int widthSize=MeasureSpec.getSize(widthMeasureSpec);
  int heightMode=MeasureSpec.getMode(heightMeasureSpec);
  int heightSize=MeasureSpec.getSize(heightMeasureSpec);
  DisplayMetrics dm=getResources().getDisplayMetrics();
  int maxSize=Math.max(dm.widthPixels,dm.heightPixels + mInsets.top + mInsets.bottom);
  int parentWidthSize, parentHeightSize;
  int scaledWidthSize, scaledHeightSize;
  if (mUseMinScale) {
    parentWidthSize=(int)(1.5f * maxSize);
    parentHeightSize=maxSize;
    scaledWidthSize=(int)(parentWidthSize / mMinScale);
    scaledHeightSize=(int)(parentHeightSize / mMinScale);
  }
 else {
    scaledWidthSize=widthSize;
    scaledHeightSize=heightSize;
  }
  mViewport.set(0,0,widthSize,heightSize);
  if (widthMode == MeasureSpec.UNSPECIFIED || heightMode == MeasureSpec.UNSPECIFIED) {
    super.onMeasure(widthMeasureSpec,heightMeasureSpec);
    return;
  }
  if (widthSize <= 0 || heightSize <= 0) {
    super.onMeasure(widthMeasureSpec,heightMeasureSpec);
    return;
  }
  final int verticalPadding=getPaddingTop() + getPaddingBottom();
  final int horizontalPadding=getPaddingLeft() + getPaddingRight();
  if (DEBUG)   Log.d(TAG,"PagedView.onMeasure(): " + widthSize + ", "+ heightSize);
  if (DEBUG)   Log.d(TAG,"PagedView.scaledSize: " + scaledWidthSize + ", "+ scaledHeightSize);
  if (DEBUG)   Log.d(TAG,"PagedView.parentSize: " + parentWidthSize + ", "+ parentHeightSize);
  if (DEBUG)   Log.d(TAG,"PagedView.horizontalPadding: " + horizontalPadding);
  if (DEBUG)   Log.d(TAG,"PagedView.verticalPadding: " + verticalPadding);
  final int childCount=getChildCount();
  for (int i=0; i < childCount; i++) {
    final View child=getPageAt(i);
    if (child.getVisibility() != GONE) {
      final LayoutParams lp=(LayoutParams)child.getLayoutParams();
      int childWidthMode;
      int childHeightMode;
      int childWidth;
      int childHeight;
      if (!lp.isFullScreenPage) {
        if (lp.width == LayoutParams.WRAP_CONTENT) {
          childWidthMode=MeasureSpec.AT_MOST;
        }
 else {
          childWidthMode=MeasureSpec.EXACTLY;
        }
        if (lp.height == LayoutParams.WRAP_CONTENT) {
          childHeightMode=MeasureSpec.AT_MOST;
        }
 else {
          childHeightMode=MeasureSpec.EXACTLY;
        }
        childWidth=widthSize - horizontalPadding;
        childHeight=heightSize - verticalPadding - mInsets.top- mInsets.bottom;
        mNormalChildHeight=childHeight;
      }
 else {
        childWidthMode=MeasureSpec.EXACTLY;
        childHeightMode=MeasureSpec.EXACTLY;
        if (mUseMinScale) {
          childWidth=getViewportWidth();
          childHeight=getViewportHeight();
        }
 else {
          childWidth=widthSize - getPaddingLeft() - getPaddingRight();
          childHeight=heightSize - getPaddingTop() - getPaddingBottom();
        }
      }
      final int childWidthMeasureSpec=MeasureSpec.makeMeasureSpec(childWidth,childWidthMode);
      final int childHeightMeasureSpec=MeasureSpec.makeMeasureSpec(childHeight,childHeightMode);
      child.measure(childWidthMeasureSpec,childHeightMeasureSpec);
    }
  }
  setMeasuredDimension(scaledWidthSize,scaledHeightSize);
}
