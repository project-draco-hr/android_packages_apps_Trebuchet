{
  if (mPressedOrFocusedBackground != null && (isPressed() || isFocused())) {
    canvas.save(Canvas.CLIP_SAVE_FLAG);
    int padding=HolographicOutlineHelper.MAX_OUTER_BLUR_RADIUS / 2;
    canvas.clipRect(-padding + mScrollX,-padding + mScrollY,getWidth() + padding + mScrollX,getHeight() + padding + mScrollY,Region.Op.REPLACE);
    canvas.drawBitmap(mPressedOrFocusedBackground,mScrollX - padding,mScrollY - padding,mTempPaint);
    canvas.restore();
  }
  if (isBuildingCache()) {
    this.setShadowLayer(SHADOW_LARGE_RADIUS,0.0f,SHADOW_Y_OFFSET,SHADOW_LARGE_COLOUR);
    super.draw(canvas);
    this.setShadowLayer(SHADOW_SMALL_RADIUS,0.0f,0.0f,SHADOW_SMALL_COLOUR);
    super.draw(canvas);
  }
 else {
    final Drawable background=mBackground;
    if (background != null) {
      final int scrollX=mScrollX;
      final int scrollY=mScrollY;
      if (mBackgroundSizeChanged) {
        background.setBounds(0,0,mRight - mLeft,mBottom - mTop);
        mBackgroundSizeChanged=false;
      }
      if ((scrollX | scrollY) == 0) {
        background.draw(canvas);
      }
 else {
        canvas.translate(scrollX,scrollY);
        background.draw(canvas);
        canvas.translate(-scrollX,-scrollY);
      }
    }
    super.draw(canvas);
  }
}
