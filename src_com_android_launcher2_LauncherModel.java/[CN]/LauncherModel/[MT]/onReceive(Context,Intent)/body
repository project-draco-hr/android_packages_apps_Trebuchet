{
  if (DEBUG_LOADERS)   Log.d(TAG,"onReceive intent=" + intent);
  final String action=intent.getAction();
  if (Intent.ACTION_PACKAGE_CHANGED.equals(action) || Intent.ACTION_PACKAGE_REMOVED.equals(action) || Intent.ACTION_PACKAGE_ADDED.equals(action)) {
    final String packageName=intent.getData().getSchemeSpecificPart();
    final boolean replacing=intent.getBooleanExtra(Intent.EXTRA_REPLACING,false);
    int op=PackageUpdatedTask.OP_NONE;
    if (packageName == null || packageName.length() == 0) {
      return;
    }
    if (Intent.ACTION_PACKAGE_CHANGED.equals(action)) {
      op=PackageUpdatedTask.OP_UPDATE;
    }
 else     if (Intent.ACTION_PACKAGE_REMOVED.equals(action)) {
      if (!replacing) {
        op=PackageUpdatedTask.OP_REMOVE;
      }
    }
 else     if (Intent.ACTION_PACKAGE_ADDED.equals(action)) {
      if (!replacing) {
        op=PackageUpdatedTask.OP_ADD;
      }
 else {
        op=PackageUpdatedTask.OP_UPDATE;
      }
    }
    if (op != PackageUpdatedTask.OP_NONE) {
      enqueuePackageUpdated(new PackageUpdatedTask(op,new String[]{packageName}));
    }
  }
 else   if (Intent.ACTION_EXTERNAL_APPLICATIONS_AVAILABLE.equals(action)) {
    String[] packages=intent.getStringArrayExtra(Intent.EXTRA_CHANGED_PACKAGE_LIST);
    enqueuePackageUpdated(new PackageUpdatedTask(PackageUpdatedTask.OP_ADD,packages));
    startLoader(mApp,false);
  }
 else   if (Intent.ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE.equals(action)) {
    String[] packages=intent.getStringArrayExtra(Intent.EXTRA_CHANGED_PACKAGE_LIST);
    enqueuePackageUpdated(new PackageUpdatedTask(PackageUpdatedTask.OP_UNAVAILABLE,packages));
  }
}
