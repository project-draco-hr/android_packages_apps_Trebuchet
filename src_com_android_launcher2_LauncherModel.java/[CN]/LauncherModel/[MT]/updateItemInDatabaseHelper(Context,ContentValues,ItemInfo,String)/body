{
  final long itemId=item.id;
  final Uri uri=LauncherSettings.Favorites.getContentUri(itemId,false);
  final ContentResolver cr=context.getContentResolver();
  final StackTraceElement[] stackTrace=new Throwable().getStackTrace();
  Runnable r=new Runnable(){
    public void run(){
      cr.update(uri,values,null,null);
      ItemInfo modelItem=sBgItemsIdMap.get(itemId);
      if (item != modelItem) {
        String msg="item: " + ((item != null) ? item.toString() : "null") + "modelItem: "+ ((modelItem != null) ? modelItem.toString() : "null")+ "Error: ItemInfo passed to "+ callingFunction+ " doesn't match original";
        throw new RuntimeException(msg);
      }
      if (item.container != LauncherSettings.Favorites.CONTAINER_DESKTOP && item.container != LauncherSettings.Favorites.CONTAINER_HOTSEAT) {
        if (!sBgFolders.containsKey(item.container)) {
          String msg="item: " + item + " container being set to: "+ item.container+ ", not in the list of folders";
          RuntimeException e=new RuntimeException(msg);
          e.setStackTrace(stackTrace);
          Launcher.dumpDebugLogsToConsole();
          throw e;
        }
      }
      if (modelItem.container == LauncherSettings.Favorites.CONTAINER_DESKTOP || modelItem.container == LauncherSettings.Favorites.CONTAINER_HOTSEAT) {
        if (!sBgWorkspaceItems.contains(modelItem)) {
          sBgWorkspaceItems.add(modelItem);
        }
      }
 else {
        sBgWorkspaceItems.remove(modelItem);
      }
    }
  }
;
  if (sWorkerThread.getThreadId() == Process.myTid()) {
    r.run();
  }
 else {
    sWorker.post(r);
  }
}
