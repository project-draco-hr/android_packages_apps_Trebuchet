{
  LauncherAppState app=LauncherAppState.getInstance();
  DeviceProfile grid=app.getDynamicGrid().getDeviceProfile();
  int x=(int)ev.getX();
  int y=(int)ev.getY();
switch (ev.getAction()) {
case MotionEvent.ACTION_DOWN:
    mPredictionIconTouchDownPos.set(x,y);
  mPredictionIconUnderTouch=findPredictedAppAtCoordinate(x,y);
if (mPredictionIconUnderTouch != null) {
  mPredictionIconCheckForLongPress=new CheckLongPressHelper(mPredictionIconUnderTouch,this);
  mPredictionIconCheckForLongPress.postCheckForLongPress();
}
if (!mFixedBounds.isEmpty()) {
Rect tmpRect=new Rect(mFixedBounds);
tmpRect.inset(-grid.allAppsIconSizePx / 2,0);
if (ev.getX() < tmpRect.left || ev.getX() > tmpRect.right) {
  mBoundsCheckLastTouchDownPos.set(x,y);
  return true;
}
}
 else {
if (ev.getX() < getPaddingLeft() || ev.getX() > (getWidth() - getPaddingRight())) {
  mBoundsCheckLastTouchDownPos.set(x,y);
  return true;
}
}
break;
case MotionEvent.ACTION_UP:
if (mBoundsCheckLastTouchDownPos.x > -1) {
ViewConfiguration viewConfig=ViewConfiguration.get(getContext());
float dx=ev.getX() - mBoundsCheckLastTouchDownPos.x;
float dy=ev.getY() - mBoundsCheckLastTouchDownPos.y;
float distance=(float)Math.hypot(dx,dy);
if (distance < viewConfig.getScaledTouchSlop()) {
Launcher launcher=(Launcher)getContext();
launcher.showWorkspace(true);
return true;
}
}
if (mPredictionIconUnderTouch != null && !mPredictionIconCheckForLongPress.hasPerformedLongPress()) {
mLauncher.onClick(mPredictionIconUnderTouch);
}
case MotionEvent.ACTION_CANCEL:
mBoundsCheckLastTouchDownPos.set(-1,-1);
mPredictionIconTouchDownPos.set(-1,-1);
if (mPredictionIconCheckForLongPress != null) {
mPredictionIconCheckForLongPress.cancelLongPress();
mPredictionIconCheckForLongPress=null;
}
mPredictionIconUnderTouch=null;
break;
}
return false;
}
