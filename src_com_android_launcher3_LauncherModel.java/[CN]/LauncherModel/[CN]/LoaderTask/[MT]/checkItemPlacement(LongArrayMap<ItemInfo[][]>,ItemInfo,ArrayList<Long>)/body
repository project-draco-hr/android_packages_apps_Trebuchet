{
  LauncherAppState app=LauncherAppState.getInstance();
  InvariantDeviceProfile profile=app.getInvariantDeviceProfile();
  final int countX=profile.numColumns;
  final int countY=profile.numRows;
  long containerIndex=item.screenId;
  if (item.container == LauncherSettings.Favorites.CONTAINER_HOTSEAT) {
    if (mCallbacks == null || mCallbacks.get().isAllAppsButtonRank((int)item.screenId)) {
      Log.e(TAG,"Error loading shortcut into hotseat " + item + " into position ("+ item.screenId+ ":"+ item.cellX+ ","+ item.cellY+ ") occupied by all apps");
      return false;
    }
    final ItemInfo[][] hotseatItems=occupied.get((long)LauncherSettings.Favorites.CONTAINER_HOTSEAT);
    if (item.screenId >= profile.numHotseatIcons) {
      Log.e(TAG,"Error loading shortcut " + item + " into hotseat position "+ item.screenId+ ", position out of bounds: (0 to "+ (profile.numHotseatIcons - 1)+ ")");
      return false;
    }
    if (hotseatItems != null) {
      if (hotseatItems[(int)item.screenId][0] != null) {
        Log.e(TAG,"Error loading shortcut into hotseat " + item + " into position ("+ item.screenId+ ":"+ item.cellX+ ","+ item.cellY+ ") occupied by "+ occupied.get(LauncherSettings.Favorites.CONTAINER_HOTSEAT)[(int)item.screenId][0]);
        return false;
      }
 else {
        hotseatItems[(int)item.screenId][0]=item;
        return true;
      }
    }
 else {
      final ItemInfo[][] items=new ItemInfo[(int)profile.numHotseatIcons][1];
      items[(int)item.screenId][0]=item;
      occupied.put((long)LauncherSettings.Favorites.CONTAINER_HOTSEAT,items);
      return true;
    }
  }
 else   if (item.container == LauncherSettings.Favorites.CONTAINER_DESKTOP) {
    if (!workspaceScreens.contains((Long)item.screenId)) {
      return false;
    }
  }
 else {
    return true;
  }
  if (!occupied.containsKey(item.screenId)) {
    ItemInfo[][] items=new ItemInfo[countX + 1][countY + 1];
    occupied.put(item.screenId,items);
  }
  final ItemInfo[][] screens=occupied.get(item.screenId);
  if (item.container == LauncherSettings.Favorites.CONTAINER_DESKTOP && item.cellX < 0 || item.cellY < 0 || item.cellX + item.spanX > countX || item.cellY + item.spanY > countY) {
    Log.e(TAG,"Error loading shortcut " + item + " into cell ("+ containerIndex+ "-"+ item.screenId+ ":"+ item.cellX+ ","+ item.cellY+ ") out of screen bounds ( "+ countX+ "x"+ countY+ ")");
    return false;
  }
  for (int x=item.cellX; x < (item.cellX + item.spanX); x++) {
    for (int y=item.cellY; y < (item.cellY + item.spanY); y++) {
      if (screens[x][y] != null) {
        Log.e(TAG,"Error loading shortcut " + item + " into cell ("+ containerIndex+ "-"+ item.screenId+ ":"+ x+ ","+ y+ ") occupied by "+ screens[x][y]);
        return false;
      }
    }
  }
  for (int x=item.cellX; x < (item.cellX + item.spanX); x++) {
    for (int y=item.cellY; y < (item.cellY + item.spanY); y++) {
      screens[x][y]=item;
    }
  }
  return true;
}
