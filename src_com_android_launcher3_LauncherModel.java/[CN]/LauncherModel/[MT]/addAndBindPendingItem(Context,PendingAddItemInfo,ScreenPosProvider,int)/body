{
  final Callbacks callbacks=getCallback();
  Runnable r=new Runnable(){
    public void run(){
      final ArrayList<Long> addedWorkspaceScreensFinal=new ArrayList<Long>();
      ArrayList<Long> workspaceScreens=new ArrayList<Long>();
      TreeMap<Integer,Long> orderedScreens=loadWorkspaceScreensDb(context);
      for (      Integer i : orderedScreens.keySet()) {
        long screenId=orderedScreens.get(i);
        workspaceScreens.add(screenId);
      }
      Pair<Long,int[]> coords=findSpaceForItem(context,preferredScreen,fallbackStartScreen,workspaceScreens,addedWorkspaceScreensFinal,addInfo.spanX,addInfo.spanY);
      final long screenId=coords.first;
      final int[] cordinates=coords.second;
      updateWorkspaceScreenOrder(context,workspaceScreens);
      runOnMainThread(new Runnable(){
        public void run(){
          Callbacks cb=getCallback();
          if (callbacks == cb && cb != null) {
            cb.bindAddScreens(addedWorkspaceScreensFinal);
            cb.bindAddPendingItem(addInfo,LauncherSettings.Favorites.CONTAINER_DESKTOP,screenId,cordinates,addInfo.spanX,addInfo.spanY);
          }
        }
      }
);
    }
  }
;
  runOnWorkerThread(r);
}
