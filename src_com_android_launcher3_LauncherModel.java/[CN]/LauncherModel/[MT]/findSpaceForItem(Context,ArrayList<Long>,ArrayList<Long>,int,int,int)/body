{
  LongSparseArray<ArrayList<ItemInfo>> screenItems=new LongSparseArray<>();
  assertWorkspaceLoaded();
synchronized (sBgLock) {
    for (    ItemInfo info : sBgItemsIdMap) {
      if (info.container == LauncherSettings.Favorites.CONTAINER_DESKTOP) {
        ArrayList<ItemInfo> items=screenItems.get(info.screenId);
        if (items == null) {
          items=new ArrayList<>();
          screenItems.put(info.screenId,items);
        }
        items.add(info);
      }
    }
  }
  boolean hasZero=false;
  if (!workspaceScreens.isEmpty() && workspaceScreens.get(0) == 0) {
    hasZero=true;
  }
  long screenId=0;
  int[] cordinates=new int[2];
  boolean found=false;
  int screenCount=workspaceScreens.size();
  if (preferredScreenIndex < screenCount) {
    screenId=workspaceScreens.get(preferredScreenIndex);
    found=findNextAvailableIconSpaceInScreen(screenItems.get(screenId),cordinates,spanX,spanY);
  }
  if (!found) {
    int firstScreen=hasZero ? 1 : 0;
    for (int screen=firstScreen; screen < screenCount; screen++) {
      screenId=workspaceScreens.get(screen);
      if (findNextAvailableIconSpaceInScreen(screenItems.get(screenId),cordinates,spanX,spanY)) {
        found=true;
        break;
      }
    }
  }
  if (!found) {
    screenId=LauncherAppState.getLauncherProvider().generateNewScreenId();
    workspaceScreens.add(screenId);
    addedWorkspaceScreensFinal.add(screenId);
    if (!findNextAvailableIconSpaceInScreen(screenItems.get(screenId),cordinates,spanX,spanY)) {
      throw new RuntimeException("Can't find space to add the item");
    }
  }
  return Pair.create(screenId,cordinates);
}
