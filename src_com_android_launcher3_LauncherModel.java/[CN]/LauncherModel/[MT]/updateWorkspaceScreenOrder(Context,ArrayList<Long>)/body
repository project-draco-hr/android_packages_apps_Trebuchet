{
  final ArrayList<Long> screensCopy=new ArrayList<Long>(screens);
  final ContentResolver cr=context.getContentResolver();
  final Uri uri=LauncherSettings.WorkspaceScreens.CONTENT_URI;
  Iterator<Long> iter=screensCopy.iterator();
  while (iter.hasNext()) {
    long id=iter.next();
    if (id < 0) {
      iter.remove();
    }
  }
  Runnable r=new Runnable(){
    @Override public void run(){
      ArrayList<ContentProviderOperation> ops=new ArrayList<ContentProviderOperation>();
      ops.add(ContentProviderOperation.newDelete(uri).build());
      int count=screensCopy.size();
      for (int i=0; i < count; i++) {
        ContentValues v=new ContentValues();
        long screenId=screensCopy.get(i);
        v.put(LauncherSettings.WorkspaceScreens._ID,screenId);
        v.put(LauncherSettings.WorkspaceScreens.SCREEN_RANK,i);
        ops.add(ContentProviderOperation.newInsert(uri).withValues(v).build());
      }
      try {
        cr.applyBatch(LauncherProvider.AUTHORITY,ops);
      }
 catch (      Exception ex) {
        throw new RuntimeException(ex);
      }
synchronized (sBgLock) {
        sBgWorkspaceScreens.clear();
        sBgWorkspaceScreens.addAll(screensCopy);
        savePageCount(context);
      }
    }
  }
;
  runOnWorkerThread(r);
}
