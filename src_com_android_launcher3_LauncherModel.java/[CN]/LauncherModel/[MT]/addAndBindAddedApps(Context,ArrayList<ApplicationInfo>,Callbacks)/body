{
  Runnable r=new Runnable(){
    public void run(){
      final ArrayList<ItemInfo> addedShortcutsFinal=new ArrayList<ItemInfo>();
      final ArrayList<Long> addedWorkspaceScreensFinal=new ArrayList<Long>();
synchronized (sBgLock) {
        Iterator<ApplicationInfo> iter=added.iterator();
        while (iter.hasNext()) {
          ApplicationInfo a=iter.next();
          final String name=a.title.toString();
          final Intent launchIntent=a.intent;
          if (LauncherModel.shortcutExists(context,name,launchIntent)) {
            continue;
          }
          Pair<Long,int[]> coords=LauncherModel.findNextAvailableIconSpace(context,name,launchIntent);
          if (coords == null) {
            LauncherAppState appState=LauncherAppState.getInstance();
            LauncherProvider lp=appState.getLauncherProvider();
            long screenId=lp.generateNewScreenId();
            sBgWorkspaceScreens.add(screenId);
            updateWorkspaceScreenOrder(context,sBgWorkspaceScreens);
            addedWorkspaceScreensFinal.add(screenId);
            coords=LauncherModel.findNextAvailableIconSpace(context,a.title.toString(),a.intent);
          }
          if (coords == null) {
            throw new RuntimeException("Coordinates should not be null");
          }
          final ShortcutInfo shortcutInfo=a.makeShortcut();
          addItemToDatabase(context,shortcutInfo,LauncherSettings.Favorites.CONTAINER_DESKTOP,coords.first,coords.second[0],coords.second[1],false);
          addedShortcutsFinal.add(shortcutInfo);
        }
      }
      runOnMainThread(new Runnable(){
        public void run(){
          Callbacks cb=mCallbacks != null ? mCallbacks.get() : null;
          if (callbacks == cb && cb != null) {
            callbacks.bindAddScreens(addedWorkspaceScreensFinal);
            callbacks.bindItems(addedShortcutsFinal,0,addedShortcutsFinal.size(),true);
          }
        }
      }
);
    }
  }
;
  runOnWorkerThread(r);
}
