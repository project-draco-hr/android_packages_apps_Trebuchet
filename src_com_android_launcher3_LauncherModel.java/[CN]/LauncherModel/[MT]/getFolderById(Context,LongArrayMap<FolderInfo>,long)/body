{
  final ContentResolver cr=context.getContentResolver();
  Cursor c=cr.query(LauncherSettings.Favorites.CONTENT_URI,null,"_id=? and (itemType=? or itemType=?)",new String[]{String.valueOf(id),String.valueOf(LauncherSettings.Favorites.ITEM_TYPE_FOLDER)},null);
  try {
    if (c.moveToFirst()) {
      final int itemTypeIndex=c.getColumnIndexOrThrow(LauncherSettings.Favorites.ITEM_TYPE);
      final int titleIndex=c.getColumnIndexOrThrow(LauncherSettings.Favorites.TITLE);
      final int containerIndex=c.getColumnIndexOrThrow(LauncherSettings.Favorites.CONTAINER);
      final int screenIndex=c.getColumnIndexOrThrow(LauncherSettings.Favorites.SCREEN);
      final int cellXIndex=c.getColumnIndexOrThrow(LauncherSettings.Favorites.CELLX);
      final int cellYIndex=c.getColumnIndexOrThrow(LauncherSettings.Favorites.CELLY);
      final int optionsIndex=c.getColumnIndexOrThrow(LauncherSettings.Favorites.OPTIONS);
      final int hiddenIndex=c.getColumnIndexOrThrow(LauncherSettings.Favorites.HIDDEN);
      final int subType=c.getColumnIndexOrThrow(LauncherSettings.Favorites.SUBTYPE);
      FolderInfo folderInfo=null;
switch (c.getInt(itemTypeIndex)) {
case LauncherSettings.Favorites.ITEM_TYPE_FOLDER:
        folderInfo=findOrMakeFolder(folderList,id);
      break;
  }
  folderInfo.title=c.getString(titleIndex);
  folderInfo.id=id;
  folderInfo.container=c.getInt(containerIndex);
  folderInfo.screenId=c.getInt(screenIndex);
  folderInfo.cellX=c.getInt(cellXIndex);
  folderInfo.cellY=c.getInt(cellYIndex);
  folderInfo.options=c.getInt(optionsIndex);
  folderInfo.hidden=c.getInt(hiddenIndex) > 0;
  folderInfo.subType=subType;
  return folderInfo;
}
}
  finally {
c.close();
}
return null;
}
