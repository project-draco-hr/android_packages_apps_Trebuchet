{
  final AnimatorSet animation=LauncherAnimUtils.createAnimatorSet();
  final Resources res=mLauncher.getResources();
  final boolean material=Utilities.ATLEAST_LOLLIPOP;
  final int revealDuration=res.getInteger(R.integer.config_overlayRevealTime);
  final int itemsAlphaStagger=res.getInteger(R.integer.config_overlayItemsAlphaStagger);
  final View toView=mLauncher.getWorkspace();
  final HashMap<View,Integer> layerViews=new HashMap<>();
  boolean initialized=buttonView != null;
  cancelAnimation();
  Animator workspaceAnim=mLauncher.startWorkspaceStateChangeAnimation(toWorkspaceState,toWorkspacePage,animated,layerViews);
  startWorkspaceSearchBarAnimation(animation,fromWorkspaceState,toWorkspaceState,animated ? revealDuration : 0,overlaySearchBarView);
  if (animated && initialized) {
    if (workspaceAnim != null) {
      animation.play(workspaceAnim);
    }
    if (fromView.getVisibility() == View.VISIBLE) {
      int width=revealView.getMeasuredWidth();
      int height=revealView.getMeasuredHeight();
      float revealRadius=(float)Math.hypot(width / 2,height / 2);
      revealView.setVisibility(View.VISIBLE);
      revealView.setAlpha(1f);
      revealView.setTranslationY(0);
      layerViews.put(revealView,BUILD_AND_SET_LAYER);
      final float revealViewToXDrift;
      final float revealViewToYDrift;
      if (material) {
        int[] buttonViewToPanelDelta=Utilities.getCenterDeltaInScreenSpace(revealView,buttonView,null);
        revealViewToYDrift=buttonViewToPanelDelta[1];
        revealViewToXDrift=buttonViewToPanelDelta[0];
      }
 else {
        revealViewToYDrift=2 * height / 3;
        revealViewToXDrift=0;
      }
      TimeInterpolator decelerateInterpolator=material ? new LogDecelerateInterpolator(100,0) : new DecelerateInterpolator(1f);
      ObjectAnimator panelDriftY=ObjectAnimator.ofFloat(revealView,"translationY",0,revealViewToYDrift);
      panelDriftY.setDuration(revealDuration - SINGLE_FRAME_DELAY);
      panelDriftY.setStartDelay(itemsAlphaStagger + SINGLE_FRAME_DELAY);
      panelDriftY.setInterpolator(decelerateInterpolator);
      animation.play(panelDriftY);
      ObjectAnimator panelDriftX=ObjectAnimator.ofFloat(revealView,"translationX",0,revealViewToXDrift);
      panelDriftX.setDuration(revealDuration - SINGLE_FRAME_DELAY);
      panelDriftX.setStartDelay(itemsAlphaStagger + SINGLE_FRAME_DELAY);
      panelDriftX.setInterpolator(decelerateInterpolator);
      animation.play(panelDriftX);
      final float revealViewToAlpha=!material ? 0f : pCb.getMaterialRevealViewFinalAlpha(revealView);
      if (revealViewToAlpha != 1f) {
        ObjectAnimator panelAlpha=ObjectAnimator.ofFloat(revealView,"alpha",1f,revealViewToAlpha);
        panelAlpha.setDuration(material ? revealDuration : 150);
        panelAlpha.setStartDelay(material ? 0 : itemsAlphaStagger + SINGLE_FRAME_DELAY);
        panelAlpha.setInterpolator(decelerateInterpolator);
        animation.play(panelAlpha);
      }
      layerViews.put(contentView,BUILD_AND_SET_LAYER);
      ObjectAnimator pageDrift=ObjectAnimator.ofFloat(contentView,"translationY",0,revealViewToYDrift);
      contentView.setTranslationY(0);
      pageDrift.setDuration(revealDuration - SINGLE_FRAME_DELAY);
      pageDrift.setInterpolator(decelerateInterpolator);
      pageDrift.setStartDelay(itemsAlphaStagger + SINGLE_FRAME_DELAY);
      animation.play(pageDrift);
      contentView.setAlpha(1f);
      ObjectAnimator itemsAlpha=ObjectAnimator.ofFloat(contentView,"alpha",1f,0f);
      itemsAlpha.setDuration(100);
      itemsAlpha.setInterpolator(decelerateInterpolator);
      animation.play(itemsAlpha);
      if (overlaySearchBarView != null) {
        overlaySearchBarView.setAlpha(1f);
        ObjectAnimator searchAlpha=ObjectAnimator.ofFloat(overlaySearchBarView,"alpha",1f,0f);
        searchAlpha.setDuration(material ? 100 : 150);
        searchAlpha.setInterpolator(decelerateInterpolator);
        searchAlpha.setStartDelay(material ? 0 : itemsAlphaStagger + SINGLE_FRAME_DELAY);
        layerViews.put(overlaySearchBarView,BUILD_AND_SET_LAYER);
        animation.play(searchAlpha);
      }
      if (material) {
        float finalRadius=pCb.getMaterialRevealViewStartFinalRadius();
        AnimatorListenerAdapter listener=pCb.getMaterialRevealViewAnimatorListener(revealView,buttonView);
        Animator reveal=UiThreadCircularReveal.createCircularReveal(revealView,width / 2,height / 2,revealRadius,finalRadius);
        reveal.setInterpolator(new LogDecelerateInterpolator(100,0));
        reveal.setDuration(revealDuration);
        reveal.setStartDelay(itemsAlphaStagger);
        if (listener != null) {
          reveal.addListener(listener);
        }
        animation.play(reveal);
      }
      dispatchOnLauncherTransitionPrepare(fromView,animated,true);
      dispatchOnLauncherTransitionPrepare(toView,animated,true);
    }
    animation.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator animation){
        fromView.setVisibility(View.GONE);
        dispatchOnLauncherTransitionEnd(fromView,animated,true);
        dispatchOnLauncherTransitionEnd(toView,animated,true);
        if (onCompleteRunnable != null) {
          onCompleteRunnable.run();
        }
        for (        View v : layerViews.keySet()) {
          if (layerViews.get(v) == BUILD_AND_SET_LAYER) {
            v.setLayerType(View.LAYER_TYPE_NONE,null);
          }
        }
        if (contentView != null) {
          contentView.setTranslationX(0);
          contentView.setTranslationY(0);
          contentView.setAlpha(1);
        }
        if (overlaySearchBarView != null) {
          overlaySearchBarView.setAlpha(1f);
        }
        cleanupAnimation();
        pCb.onTransitionComplete();
      }
    }
);
    final AnimatorSet stateAnimation=animation;
    final Runnable startAnimRunnable=new Runnable(){
      public void run(){
        if (mCurrentAnimation != stateAnimation)         return;
        dispatchOnLauncherTransitionStart(fromView,animated,false);
        dispatchOnLauncherTransitionStart(toView,animated,false);
        for (        View v : layerViews.keySet()) {
          if (layerViews.get(v) == BUILD_AND_SET_LAYER) {
            v.setLayerType(View.LAYER_TYPE_HARDWARE,null);
          }
          if (Utilities.ATLEAST_LOLLIPOP && Utilities.isViewAttachedToWindow(v)) {
            v.buildLayer();
          }
        }
        stateAnimation.start();
      }
    }
;
    fromView.post(startAnimRunnable);
    return animation;
  }
 else {
    fromView.setVisibility(View.GONE);
    dispatchOnLauncherTransitionPrepare(fromView,animated,true);
    dispatchOnLauncherTransitionStart(fromView,animated,true);
    dispatchOnLauncherTransitionEnd(fromView,animated,true);
    dispatchOnLauncherTransitionPrepare(toView,animated,true);
    dispatchOnLauncherTransitionStart(toView,animated,true);
    dispatchOnLauncherTransitionEnd(toView,animated,true);
    pCb.onTransitionComplete();
    if (onCompleteRunnable != null) {
      onCompleteRunnable.run();
    }
    return null;
  }
}
