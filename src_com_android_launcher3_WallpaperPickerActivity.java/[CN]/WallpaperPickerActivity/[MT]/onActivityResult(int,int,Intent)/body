{
  if (requestCode == IMAGE_PICK && resultCode == RESULT_OK) {
    Uri uri=data.getData();
    LinearLayout wallpapers=(LinearLayout)findViewById(R.id.wallpaper_list);
    FrameLayout pickedImageThumbnail=(FrameLayout)getLayoutInflater().inflate(R.layout.wallpaper_picker_item,wallpapers,false);
    setWallpaperItemPaddingToZero(pickedImageThumbnail);
    ImageView image=(ImageView)pickedImageThumbnail.findViewById(R.id.wallpaper_image);
    Resources res=getResources();
    int width=res.getDimensionPixelSize(R.dimen.wallpaperThumbnailWidth);
    int height=res.getDimensionPixelSize(R.dimen.wallpaperThumbnailHeight);
    BitmapCropTask cropTask=new BitmapCropTask(uri,null,width,height,false,true,null);
    Point bounds=cropTask.getImageBounds();
    RectF cropRect=WallpaperCropActivity.getMaxCropRect(bounds.x,bounds.y,width,height);
    cropTask.setCropBounds(cropRect);
    if (cropTask.cropBitmap()) {
      image.setImageBitmap(cropTask.getCroppedBitmap());
      Drawable thumbDrawable=image.getDrawable();
      thumbDrawable.setDither(true);
    }
 else {
      Log.e(TAG,"Error loading thumbnail for uri=" + uri);
    }
    wallpapers.addView(pickedImageThumbnail,0);
    ThumbnailMetaData meta=new ThumbnailMetaData();
    meta.mGalleryImageUri=uri;
    pickedImageThumbnail.setTag(meta);
    pickedImageThumbnail.setOnClickListener(mThumbnailOnClickListener);
    mThumbnailOnClickListener.onClick(pickedImageThumbnail);
  }
 else   if (requestCode == PICK_WALLPAPER_THIRD_PARTY_ACTIVITY) {
    setResult(RESULT_OK);
    finish();
  }
}
