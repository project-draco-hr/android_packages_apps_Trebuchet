{
  Sampler.Builder sb=new Sampler.Builder(mRS);
  sb.setMin(Sampler.Value.LINEAR);
  sb.setMag(Sampler.Value.LINEAR);
  sb.setWrapS(Sampler.Value.CLAMP);
  sb.setWrapT(Sampler.Value.CLAMP);
  mSampler=sb.create();
  sb.setMin(Sampler.Value.NEAREST);
  sb.setMag(Sampler.Value.NEAREST);
  mSamplerText=sb.create();
  ProgramFragment.Builder dbg=new ProgramFragment.Builder(mRS,null,null);
  mPFDebug=dbg.create();
  mPFDebug.setName("PFDebug");
  ProgramFragment.Builder bf=new ProgramFragment.Builder(mRS,null,null);
  bf.setTexEnable(true,0);
  bf.setTexEnvMode(ProgramFragment.EnvMode.MODULATE,0);
  mPFImages=bf.create();
  mPFImages.setName("PF");
  mPFImages.bindSampler(mSampler,0);
  bf.setTexEnvMode(ProgramFragment.EnvMode.MODULATE,0);
  mPFText=bf.create();
  mPFText.setName("PFText");
  mPFText.bindSampler(mSamplerText,0);
  ProgramStore.Builder bs=new ProgramStore.Builder(mRS,null,null);
  bs.setDepthFunc(ProgramStore.DepthFunc.LESS);
  bs.setDitherEnable(false);
  bs.setDepthMask(true);
  bs.setBlendFunc(ProgramStore.BlendSrcFunc.SRC_ALPHA,ProgramStore.BlendDstFunc.ONE_MINUS_SRC_ALPHA);
  mPSBackground=bs.create();
  mPSBackground.setName("PFS");
  bs.setDepthFunc(ProgramStore.DepthFunc.ALWAYS);
  bs.setDepthMask(false);
  bs.setBlendFunc(ProgramStore.BlendSrcFunc.SRC_ALPHA,ProgramStore.BlendDstFunc.ONE_MINUS_SRC_ALPHA);
  mPSText=bs.create();
  mPSText.setName("PFSText");
  mPVAlloc=new ProgramVertex.MatrixAllocation(mRS);
  mPVAlloc.setupProjectionNormalized(mWidth,mHeight);
  ProgramVertex.Builder pvb=new ProgramVertex.Builder(mRS,null,null);
  mPV=pvb.create();
  mPV.setName("PV");
  mPV.bindAllocation(mPVAlloc);
  mPVOrthoAlloc=new ProgramVertex.MatrixAllocation(mRS);
  mPVOrthoAlloc.setupOrthoWindow(mWidth,mHeight);
  pvb.setTextureMatrixEnable(true);
  mPVOrtho=pvb.create();
  mPVOrtho.setName("PVOrtho");
  mPVOrtho.bindAllocation(mPVOrthoAlloc);
  mRS.contextBindProgramVertex(mPV);
  mAllocScratchBuf=new int[32];
  mAllocScratch=Allocation.createSized(mRS,Element.USER_I32,mAllocScratchBuf.length);
  mAllocScratch.data(mAllocScratchBuf);
  Log.e("rs","Done loading named");
}
