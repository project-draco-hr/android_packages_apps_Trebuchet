{
  ShortcutAndWidgetContainer parent=(ShortcutAndWidgetContainer)v.getParent();
  final CellLayout layout=(CellLayout)parent.getParent();
  final Workspace workspace=(Workspace)layout.getParent();
  final ViewGroup launcher=(ViewGroup)workspace.getParent();
  final ViewGroup tabs=(ViewGroup)launcher.findViewById(R.id.search_drop_target_bar);
  final ViewGroup hotseat=(ViewGroup)launcher.findViewById(R.id.hotseat);
  int pageIndex=workspace.indexOfChild(layout);
  int pageCount=workspace.getChildCount();
  final int action=e.getAction();
  final boolean handleKeyEvent=(action != KeyEvent.ACTION_UP);
  boolean wasHandled=false;
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_LEFT:
    if (handleKeyEvent) {
      View newIcon=getIconInDirection(layout,parent,v,-1);
      if (newIcon != null) {
        newIcon.requestFocus();
        v.playSoundEffect(SoundEffectConstants.NAVIGATION_LEFT);
      }
 else {
        if (pageIndex > 0) {
          parent=getCellLayoutChildrenForIndex(workspace,pageIndex - 1);
          newIcon=getIconInDirection(layout,parent,parent.getChildCount(),-1);
          if (newIcon != null) {
            newIcon.requestFocus();
          }
 else {
            workspace.snapToPage(pageIndex - 1);
          }
          v.playSoundEffect(SoundEffectConstants.NAVIGATION_LEFT);
        }
      }
    }
  wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_RIGHT:
if (handleKeyEvent) {
View newIcon=getIconInDirection(layout,parent,v,1);
if (newIcon != null) {
  newIcon.requestFocus();
  v.playSoundEffect(SoundEffectConstants.NAVIGATION_RIGHT);
}
 else {
  if (pageIndex < (pageCount - 1)) {
    parent=getCellLayoutChildrenForIndex(workspace,pageIndex + 1);
    newIcon=getIconInDirection(layout,parent,-1,1);
    if (newIcon != null) {
      newIcon.requestFocus();
    }
 else {
      workspace.snapToPage(pageIndex + 1);
    }
    v.playSoundEffect(SoundEffectConstants.NAVIGATION_RIGHT);
  }
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_UP:
if (handleKeyEvent) {
View newIcon=getClosestIconOnLine(layout,parent,v,-1);
if (newIcon != null) {
newIcon.requestFocus();
wasHandled=true;
}
 else {
tabs.requestFocus();
}
v.playSoundEffect(SoundEffectConstants.NAVIGATION_UP);
}
break;
case KeyEvent.KEYCODE_DPAD_DOWN:
if (handleKeyEvent) {
View newIcon=getClosestIconOnLine(layout,parent,v,1);
if (newIcon != null) {
newIcon.requestFocus();
v.playSoundEffect(SoundEffectConstants.NAVIGATION_DOWN);
wasHandled=true;
}
 else if (hotseat != null) {
hotseat.requestFocus();
v.playSoundEffect(SoundEffectConstants.NAVIGATION_DOWN);
}
}
break;
case KeyEvent.KEYCODE_PAGE_UP:
if (handleKeyEvent) {
if (pageIndex > 0) {
parent=getCellLayoutChildrenForIndex(workspace,pageIndex - 1);
View newIcon=getIconInDirection(layout,parent,-1,1);
if (newIcon != null) {
newIcon.requestFocus();
}
 else {
workspace.snapToPage(pageIndex - 1);
}
v.playSoundEffect(SoundEffectConstants.NAVIGATION_UP);
}
 else {
View newIcon=getIconInDirection(layout,parent,-1,1);
if (newIcon != null) {
newIcon.requestFocus();
v.playSoundEffect(SoundEffectConstants.NAVIGATION_UP);
}
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_PAGE_DOWN:
if (handleKeyEvent) {
if (pageIndex < (pageCount - 1)) {
parent=getCellLayoutChildrenForIndex(workspace,pageIndex + 1);
View newIcon=getIconInDirection(layout,parent,-1,1);
if (newIcon != null) {
newIcon.requestFocus();
}
 else {
workspace.snapToPage(pageIndex + 1);
}
v.playSoundEffect(SoundEffectConstants.NAVIGATION_DOWN);
}
 else {
View newIcon=getIconInDirection(layout,parent,parent.getChildCount(),-1);
if (newIcon != null) {
newIcon.requestFocus();
v.playSoundEffect(SoundEffectConstants.NAVIGATION_DOWN);
}
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_MOVE_HOME:
if (handleKeyEvent) {
View newIcon=getIconInDirection(layout,parent,-1,1);
if (newIcon != null) {
newIcon.requestFocus();
v.playSoundEffect(SoundEffectConstants.NAVIGATION_UP);
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_MOVE_END:
if (handleKeyEvent) {
View newIcon=getIconInDirection(layout,parent,parent.getChildCount(),-1);
if (newIcon != null) {
newIcon.requestFocus();
v.playSoundEffect(SoundEffectConstants.NAVIGATION_DOWN);
}
}
wasHandled=true;
break;
default :
break;
}
return wasHandled;
}
