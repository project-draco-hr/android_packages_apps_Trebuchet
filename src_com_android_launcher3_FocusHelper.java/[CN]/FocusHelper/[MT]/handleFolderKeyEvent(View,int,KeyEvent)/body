{
  boolean consume=FocusLogic.shouldConsume(keyCode);
  if (e.getAction() == KeyEvent.ACTION_UP || !consume) {
    return consume;
  }
  if (DEBUG) {
    Log.v(TAG,String.format("Handle FOLDER keyevent=[%s].",KeyEvent.keyCodeToString(keyCode)));
  }
  ShortcutAndWidgetContainer parent=(ShortcutAndWidgetContainer)v.getParent();
  final CellLayout layout=(CellLayout)parent.getParent();
  final ScrollView scrollView=(ScrollView)layout.getParent();
  final Folder folder=(Folder)scrollView.getParent();
  View title=folder.mFolderName;
  Workspace workspace=(Workspace)v.getRootView().findViewById(R.id.workspace);
  final int countX=layout.getCountX();
  final int countY=layout.getCountY();
  final int iconIndex=findIndexOfView(parent,v);
  int pageIndex=workspace.indexOfChild(layout);
  int pageCount=workspace.getChildCount();
  int[][] map=FocusLogic.createFullMatrix(countX,countY,true);
  int newIconIndex=FocusLogic.handleKeyEvent(keyCode,countX,countY,map,iconIndex,pageIndex,pageCount);
  View newIcon=null;
switch (newIconIndex) {
case FocusLogic.NOOP:
    if (keyCode == KeyEvent.KEYCODE_DPAD_DOWN) {
      newIcon=title;
    }
  break;
case FocusLogic.PREVIOUS_PAGE_FIRST_ITEM:
case FocusLogic.PREVIOUS_PAGE_LAST_ITEM:
case FocusLogic.NEXT_PAGE_FIRST_ITEM:
case FocusLogic.CURRENT_PAGE_FIRST_ITEM:
case FocusLogic.CURRENT_PAGE_LAST_ITEM:
if (DEBUG) {
  Log.v(TAG,"Page advance handling not supported on folder icons.");
}
break;
default :
newIcon=parent.getChildAt(newIconIndex);
break;
}
if (newIcon != null) {
newIcon.requestFocus();
playSoundEffect(keyCode,v);
}
return consume;
}
