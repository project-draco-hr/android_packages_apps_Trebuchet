{
  ShortcutAndWidgetContainer parent=(ShortcutAndWidgetContainer)v.getParent();
  final CellLayout layout=(CellLayout)parent.getParent();
  final int action=e.getAction();
  final boolean handleKeyEvent=(action != KeyEvent.ACTION_UP);
  boolean wasHandled=false;
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_LEFT:
    if (handleKeyEvent) {
      ArrayList<View> views=getCellLayoutChildrenSortedSpatially(layout,parent);
      int myIndex=views.indexOf(v);
      if (myIndex > 0) {
        views.get(myIndex - 1).requestFocus();
        v.playSoundEffect(SoundEffectConstants.NAVIGATION_LEFT);
      }
    }
  wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_RIGHT:
if (handleKeyEvent) {
ArrayList<View> views=getCellLayoutChildrenSortedSpatially(layout,parent);
int myIndex=views.indexOf(v);
if (myIndex < views.size() - 1) {
  views.get(myIndex + 1).requestFocus();
  v.playSoundEffect(SoundEffectConstants.NAVIGATION_RIGHT);
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_UP:
if (handleKeyEvent) {
final Workspace workspace=(Workspace)v.getRootView().findViewById(R.id.workspace);
if (workspace != null) {
int pageIndex=workspace.getCurrentPage();
CellLayout topLayout=(CellLayout)workspace.getChildAt(pageIndex);
if (topLayout == null) {
return wasHandled;
}
ShortcutAndWidgetContainer children=topLayout.getShortcutsAndWidgets();
final View newIcon=getIconInDirection(layout,children,-1,1);
if (newIcon != null) {
newIcon.requestFocus();
v.playSoundEffect(SoundEffectConstants.NAVIGATION_UP);
}
 else {
workspace.requestFocus();
}
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_DOWN:
wasHandled=true;
break;
default :
break;
}
return wasHandled;
}
