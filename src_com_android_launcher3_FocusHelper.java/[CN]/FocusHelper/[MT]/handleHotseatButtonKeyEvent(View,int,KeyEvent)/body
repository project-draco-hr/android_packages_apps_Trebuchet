{
  boolean consume=FocusLogic.shouldConsume(keyCode);
  if (e.getAction() == KeyEvent.ACTION_UP || !consume) {
    return consume;
  }
  DeviceProfile profile=LauncherAppState.getInstance().getDynamicGrid().getDeviceProfile();
  if (DEBUG) {
    Log.v(TAG,String.format("Handle HOTSEAT BUTTONS keyevent=[%s] on hotseat buttons, isVertical=%s",KeyEvent.keyCodeToString(keyCode),profile.isVerticalBarLayout()));
  }
  final ShortcutAndWidgetContainer hotseatParent=(ShortcutAndWidgetContainer)v.getParent();
  final CellLayout hotseatLayout=(CellLayout)hotseatParent.getParent();
  Hotseat hotseat=(Hotseat)hotseatLayout.getParent();
  Workspace workspace=(Workspace)v.getRootView().findViewById(R.id.workspace);
  int pageIndex=workspace.getCurrentPage();
  int pageCount=workspace.getChildCount();
  int countX=-1;
  int countY=-1;
  int iconIndex=findIndexOfView(hotseatParent,v);
  int iconRank=((CellLayout.LayoutParams)hotseatLayout.getShortcutsAndWidgets().getChildAt(iconIndex).getLayoutParams()).cellX;
  final CellLayout iconLayout=(CellLayout)workspace.getChildAt(pageIndex);
  final ViewGroup iconParent=iconLayout.getShortcutsAndWidgets();
  ViewGroup parent=null;
  int[][] matrix=null;
  if (keyCode == KeyEvent.KEYCODE_DPAD_UP && !profile.isVerticalBarLayout()) {
    matrix=FocusLogic.createSparseMatrix(iconLayout,hotseatLayout,true,hotseat.getAllAppsButtonRank(),iconRank == hotseat.getAllAppsButtonRank());
    iconIndex+=iconParent.getChildCount();
    countX=iconLayout.getCountX();
    countY=iconLayout.getCountY() + hotseatLayout.getCountY();
    parent=iconParent;
  }
 else   if (keyCode == KeyEvent.KEYCODE_DPAD_LEFT && profile.isVerticalBarLayout()) {
    matrix=FocusLogic.createSparseMatrix(iconLayout,hotseatLayout,false,hotseat.getAllAppsButtonRank(),iconRank == hotseat.getAllAppsButtonRank());
    iconIndex+=iconParent.getChildCount();
    countX=iconLayout.getCountX() + hotseatLayout.getCountX();
    countY=iconLayout.getCountY();
    parent=iconParent;
  }
 else   if (keyCode == KeyEvent.KEYCODE_DPAD_RIGHT && profile.isVerticalBarLayout()) {
    keyCode=KeyEvent.KEYCODE_PAGE_DOWN;
  }
 else {
    matrix=FocusLogic.createSparseMatrix(hotseatLayout);
    countX=hotseatLayout.getCountX();
    countY=hotseatLayout.getCountY();
    parent=hotseatParent;
  }
  int newIconIndex=FocusLogic.handleKeyEvent(keyCode,countX,countY,matrix,iconIndex,pageIndex,pageCount);
  View newIcon=null;
  if (newIconIndex == FocusLogic.NEXT_PAGE_FIRST_ITEM) {
    parent=getCellLayoutChildrenForIndex(workspace,pageIndex + 1);
    newIcon=parent.getChildAt(0);
    workspace.snapToPage(pageIndex + 1);
  }
  if (parent == iconParent && newIconIndex >= iconParent.getChildCount()) {
    newIconIndex-=iconParent.getChildCount();
  }
  if (parent != null) {
    if (newIcon == null && newIconIndex >= 0) {
      newIcon=parent.getChildAt(newIconIndex);
    }
    if (newIcon != null) {
      newIcon.requestFocus();
      playSoundEffect(keyCode,v);
    }
  }
  return consume;
}
