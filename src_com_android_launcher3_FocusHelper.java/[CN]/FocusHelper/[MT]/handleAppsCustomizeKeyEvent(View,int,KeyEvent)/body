{
  ViewGroup parentLayout;
  ViewGroup itemContainer;
  int countX;
  int countY;
  if (v.getParent() instanceof PagedViewCellLayoutChildren) {
    itemContainer=(ViewGroup)v.getParent();
    parentLayout=(ViewGroup)itemContainer.getParent();
    countX=((PagedViewCellLayout)parentLayout).getCellCountX();
    countY=((PagedViewCellLayout)parentLayout).getCellCountY();
  }
 else {
    itemContainer=parentLayout=(ViewGroup)v.getParent();
    countX=((PagedViewGridLayout)parentLayout).getCellCountX();
    countY=((PagedViewGridLayout)parentLayout).getCellCountY();
  }
  final PagedView container=(PagedView)parentLayout.getParent();
  final TabHost tabHost=findTabHostParent(container);
  final TabWidget tabs=tabHost.getTabWidget();
  final int iconIndex=itemContainer.indexOfChild(v);
  final int itemCount=itemContainer.getChildCount();
  final int pageIndex=((PagedView)container).indexToPage(container.indexOfChild(parentLayout));
  final int pageCount=container.getChildCount();
  final int x=iconIndex % countX;
  final int y=iconIndex / countX;
  final int action=e.getAction();
  final boolean handleKeyEvent=(action != KeyEvent.ACTION_UP);
  ViewGroup newParent=null;
  View child=null;
  boolean wasHandled=false;
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_LEFT:
    if (handleKeyEvent) {
      if (iconIndex > 0) {
        itemContainer.getChildAt(iconIndex - 1).requestFocus();
      }
 else {
        if (pageIndex > 0) {
          newParent=getAppsCustomizePage(container,pageIndex - 1);
          if (newParent != null) {
            container.snapToPage(pageIndex - 1);
            child=newParent.getChildAt(newParent.getChildCount() - 1);
            if (child != null)             child.requestFocus();
          }
        }
      }
    }
  wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_RIGHT:
if (handleKeyEvent) {
if (iconIndex < (itemCount - 1)) {
  itemContainer.getChildAt(iconIndex + 1).requestFocus();
}
 else {
  if (pageIndex < (pageCount - 1)) {
    newParent=getAppsCustomizePage(container,pageIndex + 1);
    if (newParent != null) {
      container.snapToPage(pageIndex + 1);
      child=newParent.getChildAt(0);
      if (child != null)       child.requestFocus();
    }
  }
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_UP:
if (handleKeyEvent) {
if (y > 0) {
int newiconIndex=((y - 1) * countX) + x;
itemContainer.getChildAt(newiconIndex).requestFocus();
}
 else {
tabs.requestFocus();
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_DPAD_DOWN:
if (handleKeyEvent) {
if (y < (countY - 1)) {
int newiconIndex=Math.min(itemCount - 1,((y + 1) * countX) + x);
itemContainer.getChildAt(newiconIndex).requestFocus();
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_ENTER:
case KeyEvent.KEYCODE_DPAD_CENTER:
if (handleKeyEvent) {
View.OnClickListener clickListener=(View.OnClickListener)container;
clickListener.onClick(v);
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_PAGE_UP:
if (handleKeyEvent) {
if (pageIndex > 0) {
newParent=getAppsCustomizePage(container,pageIndex - 1);
if (newParent != null) {
container.snapToPage(pageIndex - 1);
child=newParent.getChildAt(0);
if (child != null) child.requestFocus();
}
}
 else {
itemContainer.getChildAt(0).requestFocus();
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_PAGE_DOWN:
if (handleKeyEvent) {
if (pageIndex < (pageCount - 1)) {
newParent=getAppsCustomizePage(container,pageIndex + 1);
if (newParent != null) {
container.snapToPage(pageIndex + 1);
child=newParent.getChildAt(0);
if (child != null) child.requestFocus();
}
}
 else {
itemContainer.getChildAt(itemCount - 1).requestFocus();
}
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_MOVE_HOME:
if (handleKeyEvent) {
itemContainer.getChildAt(0).requestFocus();
}
wasHandled=true;
break;
case KeyEvent.KEYCODE_MOVE_END:
if (handleKeyEvent) {
itemContainer.getChildAt(itemCount - 1).requestFocus();
}
wasHandled=true;
break;
default :
break;
}
return wasHandled;
}
