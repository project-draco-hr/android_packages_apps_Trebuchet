{
  mDragObject.dragView.move(x,y);
  final int[] coordinates=mCoordinatesTemp;
  DropTarget dropTarget=findDropTarget(x,y,coordinates);
  mDragObject.x=coordinates[0];
  mDragObject.y=coordinates[1];
  if (dropTarget != null) {
    DropTarget delegate=dropTarget.getDropTargetDelegate(mDragObject);
    if (delegate != null) {
      dropTarget=delegate;
    }
    if (mLastDropTarget != dropTarget) {
      if (mLastDropTarget != null) {
        mLastDropTarget.onDragExit(mDragObject);
      }
      dropTarget.onDragEnter(mDragObject);
    }
    dropTarget.onDragOver(mDragObject);
  }
 else {
    if (mLastDropTarget != null) {
      mLastDropTarget.onDragExit(mDragObject);
    }
  }
  mLastDropTarget=dropTarget;
  final int slop=ViewConfiguration.get(mLauncher).getScaledWindowTouchSlop();
  mDistanceSinceScroll+=Math.sqrt(Math.pow(mLastTouch[0] - x,2) + Math.pow(mLastTouch[1] - y,2));
  mLastTouch[0]=x;
  mLastTouch[1]=y;
  if (x < mScrollZone) {
    if (mScrollState == SCROLL_OUTSIDE_ZONE && mDistanceSinceScroll > slop) {
      mScrollState=SCROLL_WAITING_IN_ZONE;
      if (mDragScroller.onEnterScrollArea(x,y,SCROLL_LEFT)) {
        mScrollRunnable.setDirection(SCROLL_LEFT);
        mHandler.postDelayed(mScrollRunnable,SCROLL_DELAY);
      }
    }
  }
 else   if (x > mScrollView.getWidth() - mScrollZone) {
    if (mScrollState == SCROLL_OUTSIDE_ZONE && mDistanceSinceScroll > slop) {
      mScrollState=SCROLL_WAITING_IN_ZONE;
      if (mDragScroller.onEnterScrollArea(x,y,SCROLL_RIGHT)) {
        mScrollRunnable.setDirection(SCROLL_RIGHT);
        mHandler.postDelayed(mScrollRunnable,SCROLL_DELAY);
      }
    }
  }
 else {
    if (mScrollState == SCROLL_WAITING_IN_ZONE) {
      mScrollState=SCROLL_OUTSIDE_ZONE;
      mScrollRunnable.setDirection(SCROLL_RIGHT);
      mHandler.removeCallbacks(mScrollRunnable);
      mDragScroller.onExitScrollArea();
    }
  }
}
