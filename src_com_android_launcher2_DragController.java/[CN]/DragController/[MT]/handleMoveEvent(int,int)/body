{
  mDragView.move(x,y);
  final int[] coordinates=mCoordinatesTemp;
  DropTarget dropTarget=findDropTarget(x,y,coordinates);
  if (dropTarget != null) {
    DropTarget delegate=dropTarget.getDropTargetDelegate(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
    if (delegate != null) {
      dropTarget=delegate;
    }
    if (mLastDropTarget != dropTarget) {
      if (mLastDropTarget != null) {
        mLastDropTarget.onDragExit(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
      }
      dropTarget.onDragEnter(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
    }
    dropTarget.onDragOver(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
  }
 else {
    if (mLastDropTarget != null) {
      mLastDropTarget.onDragExit(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
    }
  }
  mLastDropTarget=dropTarget;
  boolean inDeleteRegion=false;
  if (mDeleteRegion != null) {
    inDeleteRegion=mDeleteRegion.contains(x,y);
  }
  if (!inDeleteRegion && x < SCROLL_ZONE) {
    if (mScrollState == SCROLL_OUTSIDE_ZONE) {
      mScrollState=SCROLL_WAITING_IN_ZONE;
      mScrollRunnable.setDirection(SCROLL_LEFT);
      mHandler.postDelayed(mScrollRunnable,SCROLL_DELAY);
    }
  }
 else   if (!inDeleteRegion && x > mScrollView.getWidth() - SCROLL_ZONE) {
    if (mScrollState == SCROLL_OUTSIDE_ZONE) {
      mScrollState=SCROLL_WAITING_IN_ZONE;
      mScrollRunnable.setDirection(SCROLL_RIGHT);
      mHandler.postDelayed(mScrollRunnable,SCROLL_DELAY);
    }
  }
 else {
    if (mScrollState == SCROLL_WAITING_IN_ZONE) {
      mScrollState=SCROLL_OUTSIDE_ZONE;
      mScrollRunnable.setDirection(SCROLL_RIGHT);
      mHandler.removeCallbacks(mScrollRunnable);
    }
  }
}
