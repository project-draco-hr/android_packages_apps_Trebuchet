{
  View scrollView=mScrollView;
  if (!mDragging) {
    return false;
  }
  final int action=ev.getAction();
  final int screenX=clamp((int)ev.getRawX(),0,mDisplayMetrics.widthPixels);
  final int screenY=clamp((int)ev.getRawY(),0,mDisplayMetrics.heightPixels);
switch (action) {
case MotionEvent.ACTION_DOWN:
    mMotionDownX=screenX;
  mMotionDownY=screenY;
if ((screenX < SCROLL_ZONE) || (screenX > scrollView.getWidth() - SCROLL_ZONE)) {
  mScrollState=SCROLL_WAITING_IN_ZONE;
  mHandler.postDelayed(mScrollRunnable,SCROLL_DELAY);
}
 else {
  mScrollState=SCROLL_OUTSIDE_ZONE;
}
break;
case MotionEvent.ACTION_MOVE:
mDragView.move((int)ev.getRawX(),(int)ev.getRawY());
final int[] coordinates=mCoordinatesTemp;
DropTarget dropTarget=findDropTarget(screenX,screenY,coordinates);
if (dropTarget != null) {
DropTarget delegate=dropTarget.getDropTargetDelegate(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
if (delegate != null) {
dropTarget=delegate;
}
if (mLastDropTarget == dropTarget) {
dropTarget.onDragOver(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
}
 else {
if (mLastDropTarget != null) {
mLastDropTarget.onDragExit(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
}
dropTarget.onDragEnter(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
}
}
 else {
if (mLastDropTarget != null) {
mLastDropTarget.onDragExit(mDragSource,coordinates[0],coordinates[1],(int)mTouchOffsetX,(int)mTouchOffsetY,mDragView,mDragInfo);
}
}
mLastDropTarget=dropTarget;
boolean inDeleteRegion=false;
if (mDeleteRegion != null) {
inDeleteRegion=mDeleteRegion.contains(screenX,screenY);
}
if (!inDeleteRegion && screenX < SCROLL_ZONE) {
if (mScrollState == SCROLL_OUTSIDE_ZONE) {
mScrollState=SCROLL_WAITING_IN_ZONE;
mScrollRunnable.setDirection(SCROLL_LEFT);
mHandler.postDelayed(mScrollRunnable,SCROLL_DELAY);
}
}
 else if (!inDeleteRegion && screenX > scrollView.getWidth() - SCROLL_ZONE) {
if (mScrollState == SCROLL_OUTSIDE_ZONE) {
mScrollState=SCROLL_WAITING_IN_ZONE;
mScrollRunnable.setDirection(SCROLL_RIGHT);
mHandler.postDelayed(mScrollRunnable,SCROLL_DELAY);
}
}
 else {
if (mScrollState == SCROLL_WAITING_IN_ZONE) {
mScrollState=SCROLL_OUTSIDE_ZONE;
mScrollRunnable.setDirection(SCROLL_RIGHT);
mHandler.removeCallbacks(mScrollRunnable);
}
}
break;
case MotionEvent.ACTION_UP:
mHandler.removeCallbacks(mScrollRunnable);
if (mDragging) {
drop(screenX,screenY);
}
endDrag();
break;
case MotionEvent.ACTION_CANCEL:
cancelDrag();
}
return true;
}
