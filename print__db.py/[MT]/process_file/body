def process_file(fn):
    print ('process_file: ' + fn)
    conn = sqlite3.connect(fn)
    (columns, rows) = get_favorites(conn)
    data = [dict(zip(columns, row)) for row in rows]
    out = file(INDEX_FILE, 'w')
    out.write('<html>\n<head>\n<style type="text/css">\n.intent {\n  font-style: italic;\n}\n</style>\n</head>\n<body>\n')
    out.write('<b>Favorites table</b><br/>\n')
    out.write('<html>\n<table border=1 cellspacing=0 cellpadding=4>\n<tr>\n')
    print_functions = []
    for col in columns:
        print_functions.append(FUNCTIONS.get(col, print_cell))
    for i in range(0, len(columns)):
        col = columns[i]
        out.write(('  <th>%s</th>\n' % col))
    out.write('\n</tr>\n')
    for row in rows:
        out.write('<tr>\n')
        for i in range(0, len(row)):
            cell = row[i]
            out.write('  <td>')
            print_functions[i](out, row[0], row, cell)
            out.write('</td>\n')
        out.write('</tr>\n')
    out.write('</table>\n')
    hotseat = []
    for i in range(0, HOTSEAT_SIZE):
        hotseat.append(None)
    for row in data:
        if (row['container'] != (-101)):
            continue
        screen = row['screen']
        hotseat[screen] = row
    out.write('<br/><b>Hotseat</b><br/>\n')
    out.write('<table class=layout border=1 cellspacing=0 cellpadding=4>\n')
    for cell in hotseat:
        render_cell_info(out, cell, None)
    out.write('</table>\n')
    screens = []
    for i in range(0, SCREENS):
        screen = []
        for j in range(0, ROWS):
            m = []
            for k in range(0, COLUMNS):
                m.append(None)
            screen.append(m)
        screens.append(screen)
    occupied = 'occupied'
    for row in data:
        screen = screens[row['screen']]
        if (row['container'] != (-100)):
            continue
        cellX = row['cellX']
        cellY = row['cellY']
        spanX = row['spanX']
        spanY = row['spanY']
        for j in range(cellY, (cellY + spanY)):
            for k in range(cellX, (cellX + spanX)):
                screen[j][k] = occupied
        screen[cellY][cellX] = row
    i = 0
    for screen in screens:
        out.write(('<br/><b>Screen %d</b><br/>\n' % i))
        out.write('<table class=layout border=1 cellspacing=0 cellpadding=4>\n')
        for m in screen:
            out.write('  <tr>\n')
            for cell in m:
                render_cell_info(out, cell, occupied)
            out.write('</tr>\n')
        out.write('</table>\n')
        i = (i + 1)
    out.write('\n</body>\n</html>\n')
    out.close()
