{
  final int hotseatAllAppsRank=LauncherAppState.getInstance().getDynamicGrid().getDeviceProfile().hotseatAllAppsRank;
  XmlResourceParser parser=res.getXml(layoutId);
  beginDocument(parser,TAG_WORKSPACE);
  final int depth=parser.getDepth();
  int type;
  HashMap<String,TagParser> tagParserMap=getLayoutElementsMap();
  int count=0;
  while (((type=parser.next()) != XmlPullParser.END_TAG || parser.getDepth() > depth) && type != XmlPullParser.END_DOCUMENT) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    mValues.clear();
    final int container;
    final long screenId;
    if (HOTSEAT_CONTAINER_NAME.equals(getAttributeValue(parser,ATTR_CONTAINER))) {
      container=Favorites.CONTAINER_HOTSEAT;
      long rank=Long.parseLong(getAttributeValue(parser,ATTR_RANK));
      screenId=(rank < hotseatAllAppsRank) ? rank : (rank + 1);
    }
 else {
      container=Favorites.CONTAINER_DESKTOP;
      screenId=Long.parseLong(getAttributeValue(parser,ATTR_SCREEN));
      mValues.put(Favorites.CELLX,getAttributeValue(parser,ATTR_X));
      mValues.put(Favorites.CELLY,getAttributeValue(parser,ATTR_Y));
    }
    mValues.put(Favorites.CONTAINER,container);
    mValues.put(Favorites.SCREEN,screenId);
    TagParser tagParser=tagParserMap.get(parser.getName());
    if (tagParser == null) {
      if (LOGD)       Log.d(TAG,"Ignoring unknown element tag: " + parser.getName());
      continue;
    }
    long newElementId=tagParser.parseAndAdd(parser,res);
    if (newElementId >= 0) {
      if (!screenIds.contains(screenId) && container == Favorites.CONTAINER_DESKTOP) {
        screenIds.add(screenId);
      }
      count++;
    }
  }
  return count;
}
