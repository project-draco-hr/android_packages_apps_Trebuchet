{
  if (mDeferDropAfterUninstall) {
    Log.d(TAG,"Deferred handling drop because waiting for uninstall.");
    mDeferredAction=new Runnable(){
      public void run(){
        onDropCompleted(target,d,isFlingToDelete,success);
        mDeferredAction=null;
      }
    }
;
    return;
  }
  boolean beingCalledAfterUninstall=mDeferredAction != null;
  boolean successfulDrop=success && (!beingCalledAfterUninstall || mUninstallSuccessful);
  if (successfulDrop) {
    if (mDeleteFolderOnDropCompleted && !mItemAddedBackToSelfViaIcon && target != this) {
      replaceFolderWithFinalItem();
    }
  }
 else {
    ShortcutInfo info=(ShortcutInfo)d.dragInfo;
    View icon=(mCurrentDragView != null && mCurrentDragView.getTag() == info) ? mCurrentDragView : mContent.createNewView(info);
    ArrayList<View> views=getItemsInReadingOrder();
    views.add(info.rank,icon);
    mContent.arrangeChildren(views,views.size());
    mItemsInvalidated=true;
    mSuppressOnAdd=true;
    mFolderIcon.onDrop(d);
    mSuppressOnAdd=false;
  }
  if (target != this) {
    if (mOnExitAlarm.alarmPending()) {
      mOnExitAlarm.cancelAlarm();
      if (!successfulDrop) {
        mSuppressFolderDeletion=true;
      }
      mScrollPauseAlarm.cancelAlarm();
      completeDragExit();
    }
  }
  mDeleteFolderOnDropCompleted=false;
  mDragInProgress=false;
  mItemAddedBackToSelfViaIcon=false;
  mCurrentDragInfo=null;
  mCurrentDragView=null;
  mSuppressOnAdd=false;
  updateItemLocationsInDatabaseBatch();
}
