{
  super.onFinishInflate();
  mContentWrapper=findViewById(R.id.folder_content_wrapper);
  mContent=(FolderPagedView)findViewById(R.id.folder_content);
  mContent.setFolder(this);
  int measureSpec=MeasureSpec.UNSPECIFIED;
  mFolderName=(ExtendedEditText)findViewById(R.id.folder_name);
  mFolderName.setOnBackKeyListener(new ExtendedEditText.OnBackKeyListener(){
    @Override public boolean onBackKey(){
      doneEditingFolderName(true);
      return false;
    }
  }
);
  mFolderName.setOnFocusChangeListener(this);
  mFolderName.setCustomSelectionActionModeCallback(mActionModeCallback);
  mFolderName.setOnEditorActionListener(this);
  mFolderName.setSelectAllOnFocus(true);
  mFolderName.setInputType(mFolderName.getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS | InputType.TYPE_TEXT_FLAG_CAP_WORDS);
  boolean hideLabels=SettingsProvider.getBoolean(mLauncher,SettingsProvider.SETTINGS_UI_HOMESCREEN_HIDE_ICON_LABELS,R.bool.preferences_interface_homescreen_hide_icon_labels_default);
  if (hideLabels) {
    mFolderName.setVisibility(View.GONE);
  }
  mFolderLock=(ImageView)findViewById(R.id.folder_lock);
  mFolderLock.measure(measureSpec,measureSpec);
  mFolderLock.setOnClickListener(this);
  mFolderLockHeight=mFolderLock.getMeasuredHeight();
  mFooter=findViewById(R.id.folder_footer);
  mFooter.measure(measureSpec,measureSpec);
  mFooterHeight=mFooter.getMeasuredHeight();
}
