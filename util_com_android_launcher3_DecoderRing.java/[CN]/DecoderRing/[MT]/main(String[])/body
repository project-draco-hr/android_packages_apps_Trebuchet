{
  Class defaultType=null;
  boolean extractImages=false;
  boolean fromLogs=false;
  int skip=0;
  List<File> files=new LinkedList<File>();
  boolean verbose=false;
  for (int i=0; i < args.length; i++) {
    if ("-k".equals(args[i])) {
      defaultType=Key.class;
    }
 else     if ("-f".equals(args[i])) {
      defaultType=Favorite.class;
    }
 else     if ("-j".equals(args[i])) {
      defaultType=Journal.class;
    }
 else     if ("-i".equals(args[i])) {
      defaultType=Resource.class;
    }
 else     if ("-s".equals(args[i])) {
      defaultType=Screen.class;
    }
 else     if ("-w".equals(args[i])) {
      defaultType=Widget.class;
    }
 else     if ("-S".equals(args[i])) {
      if ((i + 1) < args.length) {
        skip=Integer.valueOf(args[++i]);
      }
 else {
        usage(args);
      }
    }
 else     if ("-x".equals(args[i])) {
      extractImages=true;
    }
 else     if ("-v".equals(args[i])) {
      verbose=true;
    }
 else     if ("-L".equals(args[i])) {
      fromLogs=true;
    }
 else     if (args[i] != null && !args[i].startsWith("-")) {
      files.add(new File(args[i]));
    }
 else {
      System.err.println("Unsupported flag: " + args[i]);
      usage(args);
    }
  }
  if (defaultType == null && files.isEmpty()) {
    usage(args);
  }
  if (files.size() > 1 && defaultType != null) {
    System.err.println("Explicit type ignored for multiple files.");
    defaultType=null;
  }
  if (files.isEmpty()) {
    files.add(new File(STANDARD_IN));
  }
  for (  File source : files) {
    Class type=null;
    if (defaultType == null) {
      Key key=decodeKey(source.getName().getBytes(),fromLogs);
      if (key != null) {
        type=TYPES[key.type];
        if (verbose) {
          System.err.println(source.getName() + " is a " + type.getSimpleName());
          System.out.println(key.toString());
        }
      }
    }
 else {
      type=defaultType;
    }
    ByteArrayOutputStream byteStream=new ByteArrayOutputStream();
    BufferedInputStream input=null;
    if (source.getName() == STANDARD_IN) {
      input=new BufferedInputStream(System.in);
    }
 else {
      try {
        input=new BufferedInputStream(new FileInputStream(source));
      }
 catch (      FileNotFoundException e) {
        System.err.println("failed to open file: " + source + ", "+ e);
        System.exit(1);
      }
    }
    byte[] buffer=new byte[1024];
    try {
      while (input.available() > 0) {
        int n=input.read(buffer);
        int offset=0;
        if (skip > 0) {
          offset=Math.min(skip,n);
          n-=offset;
          skip-=offset;
        }
        if (n > 0) {
          byteStream.write(buffer,offset,n);
        }
      }
    }
 catch (    IOException e) {
      System.err.println("failed to read input: " + e);
      System.exit(1);
    }
    MessageNano proto=null;
    byte[] payload=byteStream.toByteArray();
    if (type == Key.class) {
      proto=decodeKey(payload,fromLogs);
    }
 else     if (type != null) {
      proto=decodeBackupData(payload,type,fromLogs);
    }
    if (proto != null) {
      System.out.println(proto.toString());
    }
    if (extractImages) {
      String prefix="stdin";
      if (source != null) {
        prefix=source.getName();
      }
      if (proto instanceof Resource) {
        Resource icon=(Resource)proto;
        writeImageData(icon.data,prefix + ".png");
      }
      if (proto instanceof Favorite) {
        Favorite favorite=(Favorite)proto;
        if (favorite.iconType == ICON_TYPE_BITMAP) {
          writeImageData(favorite.icon,prefix + ".png");
        }
      }
      if (proto instanceof Widget) {
        Widget widget=(Widget)proto;
        if (widget.icon != null) {
          writeImageData(widget.icon.data,prefix + "_icon.png");
        }
      }
    }
  }
  System.exit(0);
}
