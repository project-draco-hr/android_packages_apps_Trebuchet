{
  if (LOGD)   Log.d(TAG,"onUpgrade triggered: " + oldVersion);
switch (oldVersion) {
case 12:
{
      mMaxScreenId=0;
      addWorkspacesTable(db);
    }
case 13:
{
    db.beginTransaction();
    try {
      db.execSQL("ALTER TABLE favorites " + "ADD COLUMN appWidgetProvider TEXT;");
      db.setTransactionSuccessful();
    }
 catch (    SQLException ex) {
      Log.e(TAG,ex.getMessage(),ex);
      break;
    }
 finally {
      db.endTransaction();
    }
  }
case 14:
{
  db.beginTransaction();
  try {
    db.execSQL("ALTER TABLE favorites " + "ADD COLUMN modified INTEGER NOT NULL DEFAULT 0;");
    db.execSQL("ALTER TABLE workspaceScreens " + "ADD COLUMN modified INTEGER NOT NULL DEFAULT 0;");
    db.setTransactionSuccessful();
  }
 catch (  SQLException ex) {
    Log.e(TAG,ex.getMessage(),ex);
    break;
  }
 finally {
    db.endTransaction();
  }
}
case 15:
{
if (!addIntegerColumn(db,Favorites.RESTORED,0)) {
  break;
}
}
case 16:
{
Log.w(TAG,"Found pre-11 Trebuchet, preparing update");
mMaxScreenId=0;
addWorkspacesTable(db);
Cursor c=null;
long screenId=getMaxId(db,TABLE_FAVORITES);
db.beginTransaction();
try {
db.execSQL("ALTER TABLE favorites " + "ADD COLUMN appWidgetProvider TEXT;");
addIntegerColumn(db,"modified",0);
if (screenId > 0) {
  for (int sId=0; sId <= screenId; sId++) {
    db.execSQL("INSERT INTO workspaceScreens (_id, screenRank) " + "VALUES (" + (sId + 1) + ", "+ sId+ ")");
  }
}
db.execSQL("UPDATE favorites SET screen=cellX WHERE container=-101;");
db.setTransactionSuccessful();
}
 catch (SQLException ex) {
Log.e(TAG,ex.getMessage(),ex);
}
 finally {
db.endTransaction();
}
LauncherClings.synchonouslyMarkFirstRunClingDismissed(mContext);
}
case 17:
{
}
case 18:
{
removeOrphanedItems(db);
}
case 19:
{
if (!addProfileColumn(db)) {
break;
}
}
case 20:
if (!updateFolderItemsRank(db,true)) {
break;
}
case 21:
if (!recreateWorkspaceTable(db)) {
break;
}
case 22:
case 23:
if (!addIntegerColumn(db,Favorites.OPTIONS,0)) {
break;
}
if (!ensureRankColumn(db) || !updateFolderItemsRank(db,false)) {
break;
}
case 24:
ManagedProfileHeuristic.markExistingUsersForNoFolderCreation(mContext);
case 25:
convertShortcutsToLauncherActivities(db);
case 26:
if (!ensureHiddenColumn(db)) {
break;
}
case 27:
{
migrateLauncherFavorite(db,"com.android.dialer","com.cyngn.dialer","com.android.dialer.DialtactsActivity","com.android.dialer.DialtactsActivity");
migrateLauncherFavorite(db,"com.android.mms","com.android.messaging","com.android.mms.ui.ConversationList","com.android.messaging.ui.conversationlist.ConversationListActivity");
migrateLauncherFavorite(db,"com.android.camera2","org.cyanogenmod.snap","com.android.camera.CameraLauncher","com.android.camera.CameraLauncher");
migrateLauncherFavorite(db,"org.cyanogenmod.snap","com.android.camera2","com.android.camera.CameraLauncher","com.android.camera.CameraLauncher");
}
case 28:
{
if (!ensureSubTypeColumn(db)) {
break;
}
return;
}
}
Log.w(TAG,"Destroying all old data.");
createEmptyDB(db);
}
