{
  int numScrollingPages=getNumScreensExcludingEmptyAndCustom();
  int parallaxPageSpan;
  if (mWallpaperIsLiveWallpaper) {
    parallaxPageSpan=numScrollingPages - 1;
  }
 else {
    parallaxPageSpan=Math.max(MIN_PARALLAX_PAGE_SPAN,numScrollingPages - 1);
  }
  mNumPagesForWallpaperParallax=parallaxPageSpan;
  if (getChildCount() <= 1) {
    if (mIsRtl) {
      return 1 - 1.0f / mNumPagesForWallpaperParallax;
    }
    return 0;
  }
  int emptyExtraPages=numEmptyScreensToIgnore();
  int firstIndex=numCustomPages();
  int lastIndex=getChildCount() - 1 - emptyExtraPages;
  if (mIsRtl) {
    int temp=firstIndex;
    firstIndex=lastIndex;
    lastIndex=temp;
  }
  int firstPageScrollX=getScrollForPage(firstIndex);
  int scrollRange=getScrollForPage(lastIndex) - firstPageScrollX;
  if (scrollRange == 0) {
    return 0;
  }
 else {
    int adjustedScroll=getScrollX() - firstPageScrollX - getLayoutTransitionOffsetForPage(0);
    float offset=Math.min(1,adjustedScroll / (float)scrollRange);
    offset=Math.max(0,offset);
    if (!mWallpaperIsLiveWallpaper && numScrollingPages < MIN_PARALLAX_PAGE_SPAN && mIsRtl) {
      return offset * (parallaxPageSpan - numScrollingPages + 1) / parallaxPageSpan;
    }
    return offset * (numScrollingPages - 1) / parallaxPageSpan;
  }
}
