{
  ArrayList<CellLayout> cellLayouts=getWorkspaceAndHotseatCellLayouts();
  for (  final CellLayout layoutParent : cellLayouts) {
    final ViewGroup layout=layoutParent.getShortcutsAndWidgets();
    final HashMap<ItemInfo,View> children=new HashMap<ItemInfo,View>();
    for (int j=0; j < layout.getChildCount(); j++) {
      final View view=layout.getChildAt(j);
      children.put((ItemInfo)view.getTag(),view);
    }
    final ArrayList<View> childrenToRemove=new ArrayList<View>();
    final HashMap<FolderInfo,ArrayList<ShortcutInfo>> folderAppsToRemove=new HashMap<FolderInfo,ArrayList<ShortcutInfo>>();
    LauncherModel.ItemInfoFilter filter=new LauncherModel.ItemInfoFilter(){
      @Override public boolean filterItem(      ItemInfo parent,      ItemInfo info,      ComponentName cn){
        if (parent instanceof FolderInfo) {
          if (componentNames.contains(cn)) {
            FolderInfo folder=(FolderInfo)parent;
            ArrayList<ShortcutInfo> appsToRemove;
            if (folderAppsToRemove.containsKey(folder)) {
              appsToRemove=folderAppsToRemove.get(folder);
            }
 else {
              appsToRemove=new ArrayList<ShortcutInfo>();
              folderAppsToRemove.put(folder,appsToRemove);
            }
            appsToRemove.add((ShortcutInfo)info);
            return true;
          }
        }
 else {
          if (componentNames.contains(cn)) {
            childrenToRemove.add(children.get(info));
            return true;
          }
        }
        return false;
      }
    }
;
    LauncherModel.filterItemInfos(children.keySet(),filter);
    for (    FolderInfo folder : folderAppsToRemove.keySet()) {
      ArrayList<ShortcutInfo> appsToRemove=folderAppsToRemove.get(folder);
      for (      ShortcutInfo info : appsToRemove) {
        folder.remove(info);
      }
    }
    for (    View child : childrenToRemove) {
      layoutParent.removeViewInLayout(child);
      if (child instanceof DropTarget) {
        mDragController.removeDropTarget((DropTarget)child);
      }
    }
    if (childrenToRemove.size() > 0) {
      layout.requestLayout();
      layout.invalidate();
    }
  }
  stripEmptyScreens();
}
