{
  final HashMap<ComponentName,AppInfo> appsMap=new HashMap<ComponentName,AppInfo>();
  final HashSet<String> pkgNames=new HashSet<String>();
  for (  AppInfo ai : apps) {
    appsMap.put(ai.componentName,ai);
    pkgNames.add(ai.componentName.getPackageName());
  }
  final HashMap<UserHandleCompat,HashSet<ComponentName>> iconsToRemove=new HashMap<UserHandleCompat,HashSet<ComponentName>>();
  mapOverItems(MAP_RECURSE,new ItemOperator(){
    @Override public boolean evaluate(    ItemInfo info,    View v,    View parent){
      if (info instanceof ShortcutInfo && v instanceof BubbleTextView) {
        ShortcutInfo shortcutInfo=(ShortcutInfo)info;
        ComponentName cn=shortcutInfo.getTargetComponent();
        AppInfo appInfo=appsMap.get(cn);
        if (cn != null && LauncherModel.isShortcutInfoUpdateable(info) && pkgNames.contains(cn.getPackageName())) {
          boolean promiseStateChanged=false;
          boolean infoUpdated=false;
          if (shortcutInfo.isPromise()) {
            if (shortcutInfo.hasStatusFlag(ShortcutInfo.FLAG_AUTOINTALL_ICON)) {
              PackageManager pm=getContext().getPackageManager();
              ResolveInfo matched=pm.resolveActivity(new Intent(Intent.ACTION_MAIN).setComponent(cn).addCategory(Intent.CATEGORY_LAUNCHER),PackageManager.MATCH_DEFAULT_ONLY);
              if (matched == null) {
                Intent intent=pm.getLaunchIntentForPackage(cn.getPackageName());
                if (intent != null) {
                  cn=intent.getComponent();
                  appInfo=appsMap.get(cn);
                }
                if ((intent == null) || (appsMap == null)) {
                  HashSet<ComponentName> cnSet=iconsToRemove.get(shortcutInfo.user);
                  if (cnSet == null) {
                    cnSet=new HashSet<>();
                    iconsToRemove.put(shortcutInfo.user,cnSet);
                  }
                  cnSet.add(shortcutInfo.getTargetComponent());
                  return false;
                }
                shortcutInfo.promisedIntent=intent;
              }
            }
            shortcutInfo.intent=shortcutInfo.promisedIntent;
            shortcutInfo.promisedIntent=null;
            shortcutInfo.status&=~ShortcutInfo.FLAG_RESTORED_ICON & ~ShortcutInfo.FLAG_AUTOINTALL_ICON & ~ShortcutInfo.FLAG_INSTALL_SESSION_ACTIVE;
            promiseStateChanged=true;
            infoUpdated=true;
            shortcutInfo.updateIcon(mIconCache);
            LauncherModel.updateItemInDatabase(getContext(),shortcutInfo);
          }
          if (appInfo != null) {
            shortcutInfo.updateIcon(mIconCache);
            shortcutInfo.title=appInfo.title.toString();
            shortcutInfo.contentDescription=appInfo.contentDescription;
            infoUpdated=true;
          }
          if (infoUpdated) {
            BubbleTextView shortcut=(BubbleTextView)v;
            shortcut.applyFromShortcutInfo(shortcutInfo,mIconCache,true,promiseStateChanged);
            if (parent != null) {
              parent.invalidate();
            }
          }
        }
      }
      return false;
    }
  }
);
  if (!iconsToRemove.isEmpty()) {
    for (    Map.Entry<UserHandleCompat,HashSet<ComponentName>> entry : iconsToRemove.entrySet()) {
      removeItemsByComponentName(entry.getValue(),entry.getKey());
    }
  }
  restorePendingWidgets(pkgNames);
}
