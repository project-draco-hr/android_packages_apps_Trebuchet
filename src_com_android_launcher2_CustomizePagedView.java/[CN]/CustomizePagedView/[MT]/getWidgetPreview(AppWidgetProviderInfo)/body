{
  final PackageManager packageManager=mPackageManager;
  String packageName=info.provider.getPackageName();
  Drawable drawable=null;
  if (info.previewImage != 0) {
    drawable=packageManager.getDrawable(packageName,info.previewImage,null);
    if (drawable == null) {
      Log.w(TAG,"Can't load icon drawable 0x" + Integer.toHexString(info.icon) + " for provider: "+ info.provider);
    }
  }
  if (drawable == null) {
    Resources resources=mLauncher.getResources();
    int width=(int)(Math.max(mMinWidgetPreviewDim,Math.min(mMaxWidgetPreviewDim,info.minWidth)) * sScaleFactor);
    int height=(int)(Math.max(mMinWidgetPreviewDim,Math.min(mMaxWidgetPreviewDim,info.minHeight)) * sScaleFactor);
    final Bitmap bitmap=Bitmap.createBitmap(width,height,Config.ARGB_8888);
    final Drawable background=resources.getDrawable(R.drawable.default_widget_preview);
    renderDrawableToBitmap(background,bitmap,0,0,width,height,1.0f,1.0f);
    try {
      Drawable icon=null;
      if (info.icon > 0) {
        icon=packageManager.getDrawable(packageName,info.icon,null);
      }
      if (icon == null) {
        icon=resources.getDrawable(R.drawable.ic_launcher_application);
      }
      final int iconSize=mMinWidgetPreviewDim / 2;
      final int offset=iconSize / 4;
      renderDrawableToBitmap(icon,null,offset,offset,iconSize,iconSize,1.0f,1.0f);
    }
 catch (    Resources.NotFoundException e) {
    }
    return bitmap;
  }
 else {
    final float imageWidth=drawable.getIntrinsicWidth();
    final float imageHeight=drawable.getIntrinsicHeight();
    final float aspect=(float)imageWidth / imageHeight;
    final int scaledWidth=(int)(Math.max(mMinWidgetPreviewDim,Math.min(mMaxWidgetPreviewDim,imageWidth)) * sScaleFactor);
    final int scaledHeight=(int)(Math.max(mMinWidgetPreviewDim,Math.min(mMaxWidgetPreviewDim,imageHeight)) * sScaleFactor);
    int width;
    int height;
    if (aspect >= 1.0f) {
      width=scaledWidth;
      height=(int)(((float)scaledWidth / imageWidth) * imageHeight);
    }
 else {
      height=scaledHeight;
      width=(int)(((float)scaledHeight / imageHeight) * imageWidth);
    }
    final Bitmap bitmap=Bitmap.createBitmap(width,height,Config.ARGB_8888);
    renderDrawableToBitmap(drawable,bitmap,0,0,width,height,1.0f,1.0f);
    return bitmap;
  }
}
