{
  if (!v.isInTouchMode())   return false;
  if (!super.beginDragging(v))   return false;
  if (isChoiceMode(CHOICE_MODE_SINGLE)) {
    endChoiceMode();
  }
  boolean result=false;
  mLauncher.lockScreenOrientation();
switch (mCustomizationType) {
case WidgetCustomization:
{
      if (v instanceof PagedViewWidget) {
        final LinearLayout l=(LinearLayout)v;
        final ImageView i=(ImageView)l.findViewById(R.id.widget_preview);
        final Drawable icon=i.getDrawable();
        Bitmap b=drawableToBitmap(icon,i);
        PendingAddWidgetInfo createWidgetInfo=(PendingAddWidgetInfo)v.getTag();
        int[] spanXY=CellLayout.rectToCell(getResources(),createWidgetInfo.minWidth,createWidgetInfo.minHeight,null);
        createWidgetInfo.spanX=spanXY[0];
        createWidgetInfo.spanY=spanXY[1];
        mLauncher.getWorkspace().onDragStartedWithItemSpans(spanXY[0],spanXY[1],b);
        mDragController.startDrag(i,b,this,createWidgetInfo,DragController.DRAG_ACTION_COPY,null);
        b.recycle();
        result=true;
      }
      break;
    }
case ShortcutCustomization:
{
    if (v instanceof PagedViewIcon) {
      final TextView tv=(TextView)v;
      final Drawable icon=tv.getCompoundDrawables()[1];
      Bitmap b=drawableToBitmap(icon,tv);
      PendingAddItemInfo createItemInfo=(PendingAddItemInfo)v.getTag();
      mLauncher.getWorkspace().onDragStartedWithItemSpans(1,1,b);
      mDragController.startDrag(v,b,this,createItemInfo,DragController.DRAG_ACTION_COPY,null);
      b.recycle();
      result=true;
    }
    break;
  }
case ApplicationCustomization:
{
  if (v instanceof PagedViewIcon) {
    final TextView tv=(TextView)v;
    final Drawable icon=tv.getCompoundDrawables()[1];
    Bitmap b=drawableToBitmap(icon,tv);
    ApplicationInfo app=(ApplicationInfo)v.getTag();
    app=new ApplicationInfo(app);
    mLauncher.getWorkspace().onDragStartedWithItemSpans(1,1,b);
    mDragController.startDrag(v,b,this,app,DragController.DRAG_ACTION_COPY,null);
    b.recycle();
    result=true;
  }
  break;
}
}
if (result && (v instanceof Checkable)) {
resetCheckedGrandchildren();
Checkable checkable=(Checkable)v;
checkable.toggle();
}
return result;
}
