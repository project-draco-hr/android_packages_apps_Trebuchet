{
  if (!v.isInTouchMode())   return false;
  if (!super.beginDragging(v))   return false;
  if (isChoiceMode(CHOICE_MODE_SINGLE)) {
    endChoiceMode();
  }
  final Workspace workspace=mLauncher.getWorkspace();
  boolean result=false;
  mLauncher.lockScreenOrientation();
switch (mCustomizationType) {
case WidgetCustomization:
{
      if (v instanceof PagedViewWidget) {
        final LinearLayout l=(LinearLayout)v;
        final ImageView i=(ImageView)l.findViewById(R.id.widget_preview);
        RectF tmpScaleRect=new RectF(0,0,1,1);
        i.getImageMatrix().mapRect(tmpScaleRect);
        mDragBitmap=drawableToBitmap(i.getDrawable(),tmpScaleRect.right,tmpScaleRect.bottom);
        i.getLocationOnScreen(mDragViewOrigin);
        PendingAddWidgetInfo createWidgetInfo=(PendingAddWidgetInfo)v.getTag();
        int[] spanXY=CellLayout.rectToCell(getResources(),createWidgetInfo.minWidth,createWidgetInfo.minHeight,null);
        createWidgetInfo.spanX=spanXY[0];
        createWidgetInfo.spanY=spanXY[1];
        workspace.onDragStartedWithItemSpans(spanXY[0],spanXY[1],mDragBitmap);
        mDragController.startDrag(i,mDragBitmap,this,createWidgetInfo,DragController.DRAG_ACTION_COPY,null);
        result=true;
      }
      break;
    }
case ShortcutCustomization:
case ApplicationCustomization:
{
    if (v instanceof PagedViewIcon) {
      final TextView tv=(TextView)v;
      final Drawable icon=tv.getCompoundDrawables()[1];
      mDragBitmap=drawableToBitmap(icon,1.0f,1.0f);
      Object dragInfo=v.getTag();
      if (mCustomizationType == CustomizationType.ApplicationCustomization) {
        dragInfo=new ApplicationInfo((ApplicationInfo)dragInfo);
      }
      workspace.onDragStartedWithItemSpans(1,1,mDragBitmap);
      v.getLocationOnScreen(mDragViewOrigin);
      mDragViewOrigin[0]+=(v.getWidth() - icon.getIntrinsicWidth()) / 2;
      mDragViewOrigin[1]+=v.getPaddingTop();
      mDragController.startDrag(mDragBitmap,mDragViewOrigin[0],mDragViewOrigin[1],this,dragInfo,DragController.DRAG_ACTION_COPY);
      result=true;
    }
    break;
  }
}
if (result && (v instanceof Checkable)) {
resetCheckedGrandchildren();
Checkable checkable=(Checkable)v;
checkable.toggle();
}
return result;
}
