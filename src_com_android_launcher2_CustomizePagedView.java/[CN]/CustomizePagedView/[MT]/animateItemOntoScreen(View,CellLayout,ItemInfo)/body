{
  mTmpFloatPos[0]=layout.getWidth() / 2;
  mTmpFloatPos[1]=layout.getHeight() / 2;
  mLauncher.getWorkspace().mapPointFromChildToSelf(layout,mTmpFloatPos);
  int dragViewWidth=dragView.getMeasuredWidth();
  int dragViewHeight=dragView.getMeasuredHeight();
  float heightOffset=0;
  float widthOffset=0;
  if (dragView instanceof ImageView) {
    Drawable d=((ImageView)dragView).getDrawable();
    int width=d.getIntrinsicWidth();
    int height=d.getIntrinsicHeight();
    if ((1.0 * width / height) >= (1.0f * dragViewWidth) / dragViewHeight) {
      float f=(dragViewWidth / (width * 1.0f));
      heightOffset=ANIMATION_SCALE * (dragViewHeight - f * height) / 2;
    }
 else {
      float f=(dragViewHeight / (height * 1.0f));
      widthOffset=ANIMATION_SCALE * (dragViewWidth - f * width) / 2;
    }
  }
  final float toX=mTmpFloatPos[0] - dragView.getMeasuredWidth() / 2 + widthOffset;
  final float toY=mTmpFloatPos[1] - dragView.getMeasuredHeight() / 2 + heightOffset;
  final DragLayer dragLayer=(DragLayer)mLauncher.findViewById(R.id.drag_layer);
  final View dragCopy=dragLayer.createDragView(dragView);
  dragCopy.setAlpha(1.0f);
  animateIntoPosition(dragCopy,toX,toY,null);
  final int startDelay=TRANSLATE_ANIM_DURATION - DROP_ANIM_DURATION;
  animateDropOntoScreen(dragCopy,info,DROP_ANIM_DURATION,startDelay);
}
