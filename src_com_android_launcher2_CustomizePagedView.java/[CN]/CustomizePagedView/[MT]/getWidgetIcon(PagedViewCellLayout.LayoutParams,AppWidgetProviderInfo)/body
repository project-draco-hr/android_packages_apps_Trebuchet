{
  PackageManager packageManager=mLauncher.getPackageManager();
  String packageName=info.provider.getPackageName();
  Drawable drawable=null;
  if (info.previewImage != 0) {
    drawable=packageManager.getDrawable(packageName,info.previewImage,null);
    if (drawable == null) {
      Log.w(TAG,"Can't load icon drawable 0x" + Integer.toHexString(info.icon) + " for provider: "+ info.provider);
    }
 else {
      return drawable;
    }
  }
  if (drawable == null) {
    Resources resources=mLauncher.getResources();
    int[] dims=mTmpWidgetLayout.estimateCellDimensions(getMeasuredWidth(),getMeasuredHeight(),params.cellHSpan,params.cellVSpan);
    final int width=dims[0];
    final int height=dims[1] - 35;
    Bitmap bitmap=Bitmap.createBitmap(width,height,Config.ARGB_8888);
    mCanvas.setBitmap(bitmap);
    mCanvas.clipRect(0,0,width,height,Op.REPLACE);
    Drawable background=resources.getDrawable(R.drawable.default_widget_preview);
    background.setBounds(0,0,width,height);
    background.draw(mCanvas);
    try {
      Rect tmpRect=new Rect();
      Drawable icon=null;
      if (info.icon != 0) {
        icon=packageManager.getDrawable(packageName,info.icon,null);
      }
 else {
        icon=resources.getDrawable(R.drawable.ic_launcher_application);
      }
      background.getPadding(tmpRect);
      final int iconSize=Math.min(Math.min(icon.getIntrinsicWidth(),width - tmpRect.left - tmpRect.right),Math.min(icon.getIntrinsicHeight(),height - tmpRect.top - tmpRect.bottom));
      final int left=(width / 2) - (iconSize / 2);
      final int top=(height / 2) - (iconSize / 2);
      icon.setBounds(new Rect(left,top,left + iconSize,top + iconSize));
      icon.draw(mCanvas);
    }
 catch (    Resources.NotFoundException e) {
    }
    drawable=new FastBitmapDrawable(bitmap);
  }
  drawable.setBounds(0,0,drawable.getIntrinsicWidth(),drawable.getIntrinsicHeight());
  return drawable;
}
