{
  ItemInfo item=(ItemInfo)d.dragInfo;
  boolean wasWaitingForUninstall=mWaitingForUninstall;
  mWaitingForUninstall=false;
  if (isAllAppsApplication(d.dragSource,item)) {
    AppInfo appInfo=(AppInfo)item;
    if (item.user.equals(UserHandleCompat.myUserHandle())) {
      mLauncher.startApplicationUninstallActivity(appInfo.componentName,appInfo.flags);
    }
  }
 else   if (isUninstallFromWorkspace(d)) {
    ShortcutInfo shortcut=(ShortcutInfo)item;
    if (shortcut.intent != null && shortcut.intent.getComponent() != null && shortcut.user.equals(UserHandleCompat.myUserHandle())) {
      final ComponentName componentName=shortcut.intent.getComponent();
      final DragSource dragSource=d.dragSource;
      mWaitingForUninstall=mLauncher.startApplicationUninstallActivity(componentName,shortcut.flags);
      if (mWaitingForUninstall) {
        final Runnable checkIfUninstallWasSuccess=new Runnable(){
          @Override public void run(){
            mWaitingForUninstall=false;
            String packageName=componentName.getPackageName();
            boolean uninstallSuccessful=!AllAppsList.packageHasActivities(getContext(),packageName,UserHandleCompat.myUserHandle());
            if (dragSource instanceof Folder) {
              ((Folder)dragSource).onUninstallActivityReturned(uninstallSuccessful);
            }
 else             if (dragSource instanceof Workspace) {
              ((Workspace)dragSource).onUninstallActivityReturned(uninstallSuccessful);
            }
          }
        }
;
        mLauncher.addOnResumeCallback(checkIfUninstallWasSuccess);
      }
    }
  }
 else   if (isWorkspaceOrFolderApplication(d)) {
    LauncherModel.deleteItemFromDatabase(mLauncher,item);
  }
 else   if (isWorkspaceFolder(d)) {
    FolderInfo folderInfo=(FolderInfo)item;
    mLauncher.removeFolder(folderInfo);
    LauncherModel.deleteFolderContentsFromDatabase(mLauncher,folderInfo);
  }
 else   if (isWorkspaceOrFolderWidget(d)) {
    mLauncher.removeAppWidget((LauncherAppWidgetInfo)item);
    LauncherModel.deleteItemFromDatabase(mLauncher,item);
    final LauncherAppWidgetInfo launcherAppWidgetInfo=(LauncherAppWidgetInfo)item;
    final LauncherAppWidgetHost appWidgetHost=mLauncher.getAppWidgetHost();
    if (appWidgetHost != null) {
      new AsyncTask<Void,Void,Void>(){
        public Void doInBackground(        Void... args){
          appWidgetHost.deleteAppWidgetId(launcherAppWidgetInfo.appWidgetId);
          return null;
        }
      }
.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,(Void)null);
    }
  }
  if (wasWaitingForUninstall && !mWaitingForUninstall) {
    if (d.dragSource instanceof Folder) {
      ((Folder)d.dragSource).onUninstallActivityReturned(false);
    }
 else     if (d.dragSource instanceof Workspace) {
      ((Workspace)d.dragSource).onUninstallActivityReturned(false);
    }
  }
}
