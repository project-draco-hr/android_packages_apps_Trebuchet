{
  int width=mCurrentDrawable == null ? 0 : mCurrentDrawable.getIntrinsicWidth();
  int height=mCurrentDrawable == null ? 0 : mCurrentDrawable.getIntrinsicHeight();
  final Rect to=getIconRect(d.dragView.getMeasuredWidth(),d.dragView.getMeasuredHeight(),width,height);
  final Rect from=new Rect();
  dragLayer.getViewRectRelativeToSelf(d.dragView,from);
  float velocity=Math.abs(vel.length());
  float vp=Math.min(1f,velocity / (config.getScaledMaximumFlingVelocity() / 2f));
  int offsetY=(int)(-from.top * vp);
  int offsetX=(int)(offsetY / (vel.y / vel.x));
  final float y2=from.top + offsetY;
  final float x2=from.left + offsetX;
  final float x1=from.left;
  final float y1=from.top;
  final float x3=to.left;
  final float y3=to.top;
  final TimeInterpolator scaleAlphaInterpolator=new TimeInterpolator(){
    @Override public float getInterpolation(    float t){
      return t * t * t* t* t* t* t* t;
    }
  }
;
  return new AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      final DragView dragView=(DragView)dragLayer.getAnimatedView();
      float t=((Float)animation.getAnimatedValue()).floatValue();
      float tp=scaleAlphaInterpolator.getInterpolation(t);
      float initialScale=dragView.getInitialScale();
      float finalAlpha=0.5f;
      float scale=dragView.getScaleX();
      float x1o=((1f - scale) * dragView.getMeasuredWidth()) / 2f;
      float y1o=((1f - scale) * dragView.getMeasuredHeight()) / 2f;
      float x=(1f - t) * (1f - t) * (x1 - x1o) + 2 * (1f - t) * t* (x2 - x1o) + (t * t) * x3;
      float y=(1f - t) * (1f - t) * (y1 - y1o) + 2 * (1f - t) * t* (y2 - x1o) + (t * t) * y3;
      dragView.setTranslationX(x);
      dragView.setTranslationY(y);
      dragView.setScaleX(initialScale * (1f - tp));
      dragView.setScaleY(initialScale * (1f - tp));
      dragView.setAlpha(finalAlpha + (1f - finalAlpha) * (1f - tp));
    }
  }
;
}
