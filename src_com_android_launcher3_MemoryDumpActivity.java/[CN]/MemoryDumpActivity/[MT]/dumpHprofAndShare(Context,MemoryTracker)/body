{
  final StringBuilder body=new StringBuilder();
  final ArrayList<String> paths=new ArrayList<String>();
  final int myPid=android.os.Process.myPid();
  final int[] pids_orig=tracker.getTrackedProcesses();
  final int[] pids_copy=Arrays.copyOf(pids_orig,pids_orig.length);
  for (  int pid : pids_copy) {
    MemoryTracker.ProcessMemInfo info=tracker.getMemInfo(pid);
    if (info != null) {
      body.append("pid ").append(pid).append(":").append(" up=").append(info.getUptime()).append(" pss=").append(info.currentPss).append(" uss=").append(info.currentUss).append("\n");
    }
    if (pid == myPid) {
      final String path=String.format("%s/launcher-memory-%d.ahprof",Environment.getExternalStorageDirectory(),pid);
      Log.v(TAG,"Dumping memory info for process " + pid + " to "+ path);
      try {
        android.os.Debug.dumpHprofData(path);
      }
 catch (      IOException e) {
        Log.e(TAG,"error dumping memory:",e);
      }
      paths.add(path);
    }
  }
  String zipfile=zipUp(paths);
  if (zipfile == null)   return;
  Intent shareIntent=new Intent(Intent.ACTION_SEND);
  shareIntent.setType("application/zip");
  final PackageManager pm=context.getPackageManager();
  shareIntent.putExtra(Intent.EXTRA_SUBJECT,String.format("Launcher memory dump (%d)",myPid));
  String appVersion;
  try {
    appVersion=pm.getPackageInfo(context.getPackageName(),0).versionName;
  }
 catch (  PackageManager.NameNotFoundException e) {
    appVersion="?";
  }
  body.append("\nApp version: ").append(appVersion).append("\nBuild: ").append(Build.DISPLAY).append("\n");
  shareIntent.putExtra(Intent.EXTRA_TEXT,body.toString());
  final File pathFile=new File(zipfile);
  final Uri pathUri=Uri.fromFile(pathFile);
  shareIntent.putExtra(Intent.EXTRA_STREAM,pathUri);
  context.startActivity(shareIntent);
}
