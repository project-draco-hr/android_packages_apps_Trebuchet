{
  final LauncherAppWidgetProviderInfo pInfo=mInfo.info;
  if (pInfo.isCustomWidget) {
    return false;
  }
  final Bundle options=getDefaultOptionsForWidget(mLauncher,mInfo);
  if (pInfo.configure != null) {
    mInfo.bindOptions=options;
    return false;
  }
  mBindWidgetRunnable=new Runnable(){
    @Override public void run(){
      mWidgetLoadingId=mLauncher.getAppWidgetHost().allocateAppWidgetId();
      if (AppWidgetManagerCompat.getInstance(mLauncher).bindAppWidgetIdIfAllowed(mWidgetLoadingId,pInfo,options)) {
        mHandler.post(mInflateWidgetRunnable);
      }
    }
  }
;
  mInflateWidgetRunnable=new Runnable(){
    @Override public void run(){
      if (mWidgetLoadingId == -1) {
        return;
      }
      AppWidgetHostView hostView=mLauncher.getAppWidgetHost().createView((Context)mLauncher,mWidgetLoadingId,pInfo);
      mInfo.boundWidget=hostView;
      mWidgetLoadingId=-1;
      hostView.setVisibility(View.INVISIBLE);
      int[] unScaledSize=mLauncher.getWorkspace().estimateItemSize(mInfo,false);
      DragLayer.LayoutParams lp=new DragLayer.LayoutParams(unScaledSize[0],unScaledSize[1]);
      lp.x=lp.y=0;
      lp.customPosition=true;
      hostView.setLayoutParams(lp);
      mLauncher.getDragLayer().addView(hostView);
      mView.setTag(mInfo);
    }
  }
;
  mHandler.post(mBindWidgetRunnable);
  return true;
}
